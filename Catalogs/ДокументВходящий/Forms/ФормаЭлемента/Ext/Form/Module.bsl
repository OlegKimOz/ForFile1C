
#Область ПрограмныйИнтерфейс

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Об = РеквизитФормыВЗначение("Объект");
	ОбновитьОтображение();
	
	Если ЗначениеЗаполнено(Объект.Оператор) = Ложь Тогда
		Объект.Оператор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаСоздания) = Ложь Тогда
		Объект.ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТипДокумента) = Ложь Тогда
		Объект.ТипДокумента = Перечисления.ТипДокумента.вх;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) И ЗначениеЗаполнено(Объект.ДатаРегистрации) Тогда
		Элементы.ЗарегистрироватьДокумент.Доступность = Ложь;
	КонецЕсли;
	
	ЗаполнитьНазванияДокументов();
	
	ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ДатаСоздания) = Ложь Тогда
		ТекущийОбъект.ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.НазваниеДокументаСправочник) Тогда
		НазваниеДокумента = ТекущийОбъект.НазваниеДокументаСправочник.ПолноеНаименование;
	Иначе
		НазваниеДокумента = Объект.Ссылка.Метаданные().Синоним;
	КонецЕсли;
	
	ТекущийОбъект.Наименование = СтрШаблон("%1 от %2", НазваниеДокумента, Формат(ТекущийОбъект.ДатаСоздания, "ДЛФ=D"));
	
КонецПроцедуры

#КонецОбласти

#Область Интерфейс

&НаКлиенте
Процедура Поиск(Команда)
	
	Если Команда.Имя = "ПоискПоНомеруКД" Тогда
		СтруктураПоиска = Новый Структура ("Поиск", Элементы.СтрокаПоискаПоНомеруДоговора.ТекстРедактирования);
		Если ЗначениеЗаполнено(СтруктураПоиска.Поиск) = Ложь Тогда
			ПоказатьОповещениеПользователя("Не заполнена строка поиска.");
			Возврат;
		КонецЕсли;
		ОбработкаОповещения = Новый ОписаниеОповещения("ПослеВыбораДокумента", ЭтотОбъект);
		ОткрытьФорму("Справочник.Договоры.ФормаВыбора", СтруктураПоиска, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор,,, ОбработкаОповещения);
		
		Возврат;
	ИначеЕсли Команда.Имя = "ПоискПоДолжнику" Тогда
		СтруктураПоиска = Новый Структура ("Поиск", Элементы.СтрокаПоискаПоДолжнику.ТекстРедактирования);
		Если ЗначениеЗаполнено(СтруктураПоиска.Поиск) = Ложь Тогда
			ПоказатьОповещениеПользователя("Не заполнена строка поиска.");
			Возврат;
		КонецЕсли;
		ОбработкаОповещения = Новый ОписаниеОповещения("ПослеВыбораДокумента", ЭтотОбъект);
		ОткрытьФорму("Справочник.Должники.ФормаВыбора", СтруктураПоиска, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор,,, ОбработкаОповещения);
		
		Возврат;
	ИначеЕсли Команда.Имя = "ПоискПоАдресу" ИЛИ Команда.Имя = "ПоискПоОтправителю" Тогда
		Если Команда.Имя = "ПоискПоАдресу" Тогда
			СтрокаПоиска = Элементы.АдресОтправителя.ТекстРедактирования;
		ИначеЕсли Команда.Имя = "ПоискПоОтправителю" Тогда
			СтрокаПоиска = Элементы.Отправитель.ТекстРедактирования;
		КонецЕсли;
		СтруктураПоиска = Новый Структура ("Поиск", СтрокаПоиска);
		Если ЗначениеЗаполнено(СтруктураПоиска.Поиск) = Ложь Тогда
			ПоказатьОповещениеПользователя("Не заполнена строка поиска.");
			Возврат;
		КонецЕсли;
		ОбработкаОповещения = Новый ОписаниеОповещения("ПослеВыбораДокумента", ЭтотОбъект);
		ОткрытьФорму("Справочник.ДокументВходящий.ФормаВыбора", СтруктураПоиска, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор,,, ОбработкаОповещения);
		
		Возврат;
	ИначеЕсли Команда.Имя = "ПоискПоНомеруДела" Тогда
		СтруктураПоиска = Новый Структура ("Поиск", Элементы.НомерДела.ТекстРедактирования);
	ИначеЕсли Команда.Имя = "ПоискПоСтроке" Тогда
		СтруктураПоиска = Новый Структура ("Поиск", Элементы.СтрокаПоиска.ТекстРедактирования);
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураПоиска.Поиск) = Ложь Тогда
		ПоказатьОповещениеПользователя("Не заполнена строка поиска.");
		Возврат;
	КонецЕсли;
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ПослеВыбораДокумента", ЭтотОбъект);
	ОткрытьФорму("Справочник.ДокументИсходящий.ФормаВыбора", СтруктураПоиска, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор,,, ОбработкаОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьВидимость()
	
	ФормаДокументаВх = ПолучитьФорму("Справочник.ДокументВходящий.Форма.ФормаЭлемента",,, Новый УникальныйИдентификатор);
	
	//ПолучитьФорму("Справочник.ДокументВходящий.Форма.ФормаЭлемента");
	Для Каждого Элемент Из ФормаДокументаВх.Элементы Цикл
		Попытка
			Если Элемент.Видимость = Ложь Тогда
				НайденноеПоле = Элементы.Найти(Элемент.Имя);
				Если НайденноеПоле <> Неопределено Тогда
					НайденноеПоле.Видимость = Ложь;
					НайденноеПоле.АвтоОтметкаНезаполненного = Ложь;
				КонецЕсли;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПослеВыбораДокумента(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат) Тогда
		Если Ложь Тогда Результат = Справочники.ДокументИсходящий.НайтиПоКоду(""); КонецЕсли;
		
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.Договоры") Тогда
			Если Ложь Тогда Результат = Справочники.Договоры.НайтиПоКоду(""); КонецЕсли;
			Объект.Должник = Результат.Владелец;
			Объект.Договор = Результат;
			Объект.Исполнитель = Привязка.ПолучитьСотрудника(Объект.Должник, ТекущаяДатаСеанса());
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.Должники") Тогда
			Если Ложь Тогда Результат = Справочники.Должники.НайтиПоКоду(""); КонецЕсли;
			Объект.Должник = Результат;
			Объект.ДолжникСтрокой = Результат;
			СписокДоговоров = ДоговораДолжника(Объект.Должник);
			Если СписокДоговоров.Количество() = 1 Тогда
				Объект.Договор = СписокДоговоров[0].Значение;
			КонецЕсли;
			Объект.Исполнитель = Привязка.ПолучитьСотрудника(Объект.Должник, ТекущаяДатаСеанса());
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.ДокументВходящий") Тогда
			ЗаполнитьЗначенияСвойств(Объект, Результат, "Отправитель, АдресОтправителя");
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.ДокументИсходящий") Тогда
			ЗаполнитьЗначенияСвойств(Объект, Результат, "Должник, Договор, Стадия, Исполнитель");
			СтруктураЗаполнения = Новый Структура("Отправитель, АдресОтправителя", Результат.Адресат, Результат.АдресАдресата);
			ЗаполнитьЗначенияСвойств(Объект, СтруктураЗаполнения);
		КонецЕсли;
		
		ОбновитьОтображение();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображение()
	
	ПроверитьЗаполнитьДоговорДолжника();
	
	
	Если Объект.Стадия = ПредопределенноеЗначение("Перечисление.СтадияДокумента.ВнутреннееНазначение") Тогда
		ЭтоСудебныйДокумент = Ложь;
	Иначе
		ЭтоСудебныйДокумент = Истина;
	КонецЕсли;
	
	Элементы.ГруппаНеВН.Видимость = ЭтоСудебныйДокумент;
	Элементы.Причина.Видимость = ЭтоСудебныйДокумент;
	Элементы.ГруппаПоискаСудебная.Видимость = ЭтоСудебныйДокумент;
	
	Элементы.СтрокаПоискаПоДолжнику.ТолькоПросмотр = ЗначениеЗаполнено(Объект.Должник);
	Элементы.НомерДоговора.ТолькоПросмотр = ЗначениеЗаполнено(Объект.НомерДоговора);
	
	//ЭтоПовестка = (Объект.НазваниеДокументаСправочник = Константы.ДокументПовестка.Получить());
	//Элементы.грНеобязательныеПоля.Видимость = ЭтоПовестка;
	//Элементы.ДатаCудебногоЗаседания.АвтоВыборНезаполненного = ЭтоПовестка;
	//Элементы.ДатаCудебногоЗаседания.ОтметкаНезаполненного = ЭтоПовестка;
	ВидимостьИзСправочника();
	
КонецПроцедуры

Процедура ВидимостьИзСправочника()
	
	Если ЗначениеЗаполнено(Объект.НазваниеДокументаСправочник) = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	НастройкиОтображенияДокументов.НазваниеДокумента КАК НазваниеДокумента,
	               |	НастройкиОтображенияДокументов.ШифрДокумента КАК ШифрДокумента,
	               |	НастройкиОтображенияДокументов.Видимость КАК Видимость,
	               |	НастройкиОтображенияДокументов.Обязательное КАК Обязательное,
	               |	НастройкиОтображенияДокументов.Поле КАК Поле
	               |ИЗ
	               |	Справочник.НастройкиОтображенияДокументов КАК НастройкиОтображенияДокументов
	               |ГДЕ
	               |	(НастройкиОтображенияДокументов.ШифрДокумента = &ШифрДокумента
	               |			ИЛИ НастройкиОтображенияДокументов.НазваниеДокумента ПОДОБНО &НазваниеДокумента)
	               |	И НастройкиОтображенияДокументов.ПометкаУдаления = ЛОЖЬ";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ШифрДокумента", Объект.НазваниеДокументаСправочник);
	Запрос.УстановитьПараметр("НазваниеДокумента", "%" + Объект.НазваниеДокументаСправочник.НазваниеДокумента + "%");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НайденноеПоле = Элементы.Найти(Выборка.Поле);
		Если НайденноеПоле <> Неопределено Тогда
			НайденноеПоле.Видимость = (Выборка.Видимость = Истина);
			НайденноеПоле.АвтоОтметкаНезаполненного = (Выборка.Обязательное = Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СтадияДокументаПриИзменении(Элемент)
	
	ОбновитьОтображение();
	ЗаполнитьНазванияДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьДокумент(Команда)
	
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) = Ложь Тогда
		УстановитьНомер();
	КонецЕсли;
	Объект.ДатаРегистрации = ТекущаяДата();
	Элементы.ЗарегистрироватьДокумент.Доступность = ЗначениеЗаполнено(Объект.РегистрационныйНомер) = Ложь;
	ЭтаФорма.Записать();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНомер()
	
	ПолноеИмя = Метаданные.Справочники.ДокументВходящий.ПолноеИмя();
	СтруктураОтбора = Новый Структура("ТипДокумента", ПолноеИмя);
	ТаблицаСреза = РегистрыСведений.НумераторДокументов.СрезПоследних(ТекущаяДатаСеанса(), СтруктураОтбора);
	Если ТаблицаСреза.Количество() = 0 Тогда
		МЗ = РегистрыСведений.НумераторДокументов.СоздатьМенеджерЗаписи();
		МЗ.ТипДокумента = ПолноеИмя;
		МЗ.ТекущийНомер = 1;
		МЗ.Период = ТекущаяДатаСеанса();
		МЗ.Записать();
		Объект.РегистрационныйНомер = МЗ.ТекущийНомер;
	Иначе
		ТекущийНомер = ТаблицаСреза[0].ТекущийНомер;
		МЗ = РегистрыСведений.НумераторДокументов.СоздатьМенеджерЗаписи();
		МЗ.ТипДокумента = ПолноеИмя;
		МЗ.Период = ТекущаяДатаСеанса();
		МЗ.ТекущийНомер = ТекущийНомер + 1;
		МЗ.Записать();
		Объект.РегистрационныйНомер = МЗ.ТекущийНомер;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДоговораДолжника(Знач Должник)
	
	СписокДоговоров = ОбщийМодульИнформация.ПолучитьДоговорыДолжника(Должник);
	Возврат СписокДоговоров;
	
КонецФункции

&НаКлиенте
Процедура ДолжникПриИзменении(Элемент)
	
	СписокДоговоров = ДоговораДолжника(Объект.Должник);
	Если СписокДоговоров.Количество() = 1 Тогда
		Объект.Договор = СписокДоговоров[0].Значение;
	ИначеЕсли СписокДоговоров.Количество() > 1 Тогда
		Если Ложь Тогда СписокДоговоров = Новый СписокЗначений; КонецЕсли;
		ОбработкаОповещения = Новый ОписаниеОповещения("ПослеВыбораДоговора", ЭтотОбъект);
		СписокДоговоров.ПоказатьВыборЭлемента(ОбработкаОповещения, "Выберите договор");
	Иначе
		ПоказатьОповещениеПользователя(СтрШаблон("У должника %1 нет договоров.", Объект.Должник));
	КонецЕсли;
	
	ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораДоговора(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Объект.Договор = ВыбранныйЭлемент.Значение;
	КонецЕсли;
	ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	ОповещениеВыбораНазвания = Новый ОписаниеОповещения("ПослеВыбораНаименования", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ФормаВыбораНазванияДокумента",,ЭтотОбъект,,,, ОповещениеВыбораНазвания, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура БН(Команда)
	
	Объект.НомерВходящегоДокумента = "б/н";
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжникОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПоНомеруДоговораПриИзменении(Элемент)
	
	Поиск(ЭтаФорма.Команды.Найти("ПоискПоНомеруКД"));
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Поиск(ЭтаФорма.Команды.Найти("ПоискПоНомеруДела"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНазванияДокументов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НазванияДокументов.НазваниеДокумента КАК НазваниеДокумента
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И НазванияДокументов.Стадия = &Стадия
	               |	И НазванияДокументов.ТипДокумента = &ТипДокумента";
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НазванияДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокНазванийДокументов = Элементы.НазваниеДокументаВыбор.СписокВыбора;
	СписокНазванийДокументов.Очистить();
	Пока Выборка.Следующий() Цикл
		СписокНазванийДокументов.Добавить(Выборка.НазваниеДокумента);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(НазваниеДокументаВыбор) Тогда
		Если СписокНазванийДокументов.НайтиПоЗначению(НазваниеДокументаВыбор) = Неопределено Тогда
			НазваниеДокументаВыбор = "";
			ЗаполнитьРасширенияНазванийДокументов();
			ОбновитьНаименованиеДокумента();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасширенияНазванийДокументов()
	
	СписокРаширенийНазванийДокументов = Элементы.РасширениеНазвания.СписокВыбора;
	СписокРаширенийНазванийДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НазванияДокументов.РасширениеНазвания КАК РасширениеНазвания
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И НазванияДокументов.Стадия = &Стадия
	               |	И НазванияДокументов.ТипДокумента = &ТипДокумента
	               |	И НазванияДокументов.НазваниеДокумента = &НазваниеДокумента";
	
	Если ЗначениеЗаполнено(НазваниеДокументаВыбор) = Ложь Тогда
		РасширениеНазвания = "";
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	Запрос.УстановитьПараметр("НазваниеДокумента", НазваниеДокументаВыбор);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ШаблоныНазванийДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.РасширениеНазвания = "" Тогда
			Продолжить;
		КонецЕсли;
		СписокРаширенийНазванийДокументов.Добавить(Выборка.РасширениеНазвания);
	КонецЦикла;
	
	Если СписокРаширенийНазванийДокументов.НайтиПоЗначению(РасширениеНазвания) = Неопределено Тогда
		СписокРаширенийНазванийДокументов = "";
		РасширениеНазвания = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеДокументаВыборПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(НазваниеДокументаВыбор) Тогда
		СброситьВидимость();
		ЗаполнитьРасширенияНазванийДокументов();
		ОбновитьНаименованиеДокумента();
		ОбновитьОтображение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасширениеНазванияПриИзменении(Элемент)
	
	СброситьВидимость();
	ОбновитьНаименованиеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеДокумента()
	
	НаименованиеДокумента = СтрШаблон("%1 %2", ТРег(НазваниеДокументаВыбор), НРег(РасширениеНазвания));
	ЗаполнитьШифрНазвания();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШифрНазвания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НазванияДокументов.НазваниеДокумента КАК НазваниеДокумента,
	               |	НазванияДокументов.РасширениеНазвания КАК РасширениеНазвания,
	               |	НазванияДокументов.ШифрНазвания КАК ШифрНазвания,
	               |	НазванияДокументов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И НазванияДокументов.Стадия = &Стадия
	               |	И НазванияДокументов.ТипДокумента = &ТипДокумента
	               |	И НазванияДокументов.РасширениеНазвания = &РасширениеНазвания
	               |	И НазванияДокументов.НазваниеДокумента = &НазваниеДокумента";
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	Запрос.УстановитьПараметр("НазваниеДокумента", НазваниеДокументаВыбор);
	Запрос.УстановитьПараметр("РасширениеНазвания", РасширениеНазвания);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ШаблоныНазванийДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект.ШифрНазвания = Выборка.ШифрНазвания;
		Объект.НазваниеДокументаСправочник = Выборка.Ссылка;
	КонецЦикла;
	
	ВидимостьИзСправочника();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	
	ОбновитьОтображение();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнитьДоговорДолжника();
	
	Если ЗначениеЗаполнено(Объект.Должник) Тогда
		Объект.ДолжникСтрокой = Объект.Должник;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Договор) Тогда
		Объект.НомерДоговора = Объект.Договор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПоДолжникуПриИзменении(Элемент)
	
	Поиск(ЭтаФорма.Команды.Найти("ПоискПоДолжнику"));
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого Элемент Из Элементы Цикл
		Если Элемент.Вид = ВидПоляФормы.ПолеВвода  И Элемент.АвтоОтметкаНезаполненного = Истина Тогда
			имяРеквизита = СтрЗаменить(Элемент.ПутьКДанным, "Объект.", "");
			ПроверяемоеЗначение = Объект[имяРеквизита];
			Если ЗначениеЗаполнено(ПроверяемоеЗначение) = Ложь Тогда
				СтрокаОповещения = СтрШаблон("Не заполнено значение %1", Элемент.Имя);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОповещения,, Элемент.ПутьКДанным,, Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
