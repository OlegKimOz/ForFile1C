
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьНазванияДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНазванияДокументов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ШаблоныНазванийДокументов.НазваниеДокумента КАК НазваниеДокумента
	               |ИЗ
	               |	РегистрСведений.ШаблоныНазванийДокументов КАК ШаблоныНазванийДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И ШаблоныНазванийДокументов.ТипДокумента = &ТипДокумента
	               |	И ШаблоныНазванийДокументов.Стадия = &Стадия";
	
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ШаблоныНазванийДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокНазванийДокументов = Элементы.НазваниеДокумента.СписокВыбора;
	СписокНазванийДокументов.Очистить();
	Пока Выборка.Следующий() Цикл
		СписокНазванийДокументов.Добавить(Выборка.НазваниеДокумента);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Объект.НазваниеДокумента) Тогда
		Если СписокНазванийДокументов.НайтиПоЗначению(Объект.НазваниеДокумента) = Неопределено Тогда
			НазваниеДокументаВыбор = "";
			ЗаполнитьРасширенияНазванийДокументов();
			ОбновитьНаименованиеДокумента();
		Иначе
			ЗаполнитьРасширенияНазванийДокументов();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасширенияНазванийДокументов()
	
	СписокРаширенийНазванийДокументов = Элементы.РасширениеНазвания.СписокВыбора;
	СписокРаширенийНазванийДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ШаблоныНазванийДокументов.РасширениеНазвания КАК РасширениеНазвания
	               |ИЗ
	               |	РегистрСведений.ШаблоныНазванийДокументов КАК ШаблоныНазванийДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И ШаблоныНазванийДокументов.Стадия = &Стадия
	               |	И ШаблоныНазванийДокументов.ТипДокумента = &ТипДокумента
	               |	И ШаблоныНазванийДокументов.НазваниеДокумента = &НазваниеДокумента";
	
	Если ЗначениеЗаполнено(Объект.НазваниеДокумента) = Ложь Тогда
		РасширениеНазвания = "";
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	Запрос.УстановитьПараметр("НазваниеДокумента", Объект.НазваниеДокумента);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ШаблоныНазванийДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокРаширенийНазванийДокументов.Добавить(Выборка.РасширениеНазвания);
	КонецЦикла;
	
	Если СписокРаширенийНазванийДокументов.НайтиПоЗначению(РасширениеНазвания) = Неопределено Тогда
		СписокРаширенийНазванийДокументов = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеДокументаВыборПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.НазваниеДокумента) Тогда
		ЗаполнитьРасширенияНазванийДокументов();
		ОбновитьНаименованиеДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасширениеНазванияПриИзменении(Элемент)
	
	ОбновитьНаименованиеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеДокумента()
	
	НаименованиеДокумента = СтрШаблон("%1 %2", ТРег(Объект.НазваниеДокумента), НРег(Объект.РасширениеНазвания));
	Объект.ПолноеНаименование = НаименованиеДокумента;
	Объект.Наименование = НаименованиеДокумента;
	
КонецПроцедуры

&НаКлиенте
Процедура СтадияПриИзменении(Элемент)
	
	ЗаполнитьНазванияДокументов();
	ОбновитьНаименованиеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.ШифрНазвания) = Ложь Тогда
		Объект.ШифрНазвания = ПолучитьМаксимальныйШифр();
	ИначеЕсли ЭтоДубльШифра(Объект.ШифрНазвания, Объект.Ссылка) Тогда
		ПоказатьПредупреждение(, "Такой шифр уже есть. Запись отменена.");
		Отказ = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ЭтоДубльШифра(ШифрНазвания, Ссылка)
	
	Результат = Ложь;
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	НазванияДокументов.ШифрНазвания КАК ШифрНазвания
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |ГДЕ
	               |	НазванияДокументов.ШифрНазвания = &ШифрНазвания
	               |	И НазванияДокументов.Ссылка <> &Ссылка";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ШифрНазвания", ШифрНазвания);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьМаксимальныйШифр()
	
	Результат = 0;
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	НазванияДокументов.ШифрНазвания КАК ШифрНазвания
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ШифрНазвания УБЫВ";
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Выборка.ШифрНазвания;
	КонецЕсли;
	
	Возврат Результат + 1;
	
КонецФункции

&НаКлиенте
Процедура СвободнаяФормаПриИзменении(Элемент)
	
	Элементы.НазваниеДокумента.РежимВыбораИзСписка = НЕ СвободнаяФорма;
	Элементы.РасширениеНазвания.РежимВыбораИзСписка = НЕ СвободнаяФорма;
	
КонецПроцедуры
