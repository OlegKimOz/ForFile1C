
&НаКлиенте
Процедура АдресДолжникаДляДокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
	 
	
КонецПроцедуры

&НаКлиенте
Процедура АдресДолжникаДляДокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
         СтандартнаяОбработка=Ложь;
	
	     ДанныеВыбора= Новый СписокЗначений;
		 
		 массив=НайтиАдресаДолжника(Объект.Владелец);
		 
		 Для каждого стр Из массив Цикл
		     
		     ДанныеВыбора.Добавить(стр);
		 	
		 
		 КонецЦикла;
		 
			

	
	
 КонецПроцедуры
 
 
 
 &НаСервере
 Функция НайтиАдресаДолжника(долж)
	 
	 массивАдр=Новый Массив;
	 
	   
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Адреса.Адрес КАК Адрес
		|ИЗ
		|	Справочник.Адреса КАК Адреса
		|ГДЕ
		|	Адреса.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		массивАдр.Добавить(ВыборкаДетальныеЗаписи.Адрес);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат  массивАдр;
 	
 
 КонецФункции // ()

&НаКлиенте
 Процедура МестоРаботыДолжДляДокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 // Вставить содержимое обработчика.
	 
	    СтандартнаяОбработка=Ложь;
	
	     ДанныеВыбора= Новый СписокЗначений;
		 
		 массив=НайтиМестоРаботыДолж(Объект.Владелец);
		 
		 Для каждого стр Из массив Цикл
		     
		     ДанныеВыбора.Добавить(стр);
		 	
		 
		 КонецЦикла;
		 

	 
	 
КонецПроцедуры


&НаСервере
Функция НайтиМестоРаботыДолж(долж)
	
	   массивМРаб=Новый Массив;

	   
	   //Место работы
	   
	   
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеДанные.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
		|ГДЕ
		|	ДополнительныеДанные.Владелец = &Владелец
		|	И ДополнительныеДанные.Реквизит.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Наименование", "Место работы");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		массивМРаб.Добавить(ВыборкаДетальныеЗаписи.Наименование);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	  Если массивМРаб.Количество() = 0 Тогда
	  
	  	    массивМРаб.Добавить("");
	  
	  КонецЕсли;

	 Возврат   массивМРаб;
	   
	

КонецФункции // ()

&НаКлиенте
Процедура ТелефонДолжДляДокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	 
	     СтандартнаяОбработка=Ложь;
	
	     ДанныеВыбора= Новый СписокЗначений;
		 
		 массив=НайтиТелефоныДолж(Объект.Владелец);
		 
		 Для каждого стр Из массив Цикл
		     
		     ДанныеВыбора.Добавить(стр);
		 	
		 
		 КонецЦикла;
		 

	
	
КонецПроцедуры

	 

&НаСервере
Функция НайтиМобильный(долж)

	номерМ="";
	
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Телефоны.Номер КАК Номер
		|ИЗ
		|	Справочник.Телефоны КАК Телефоны
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыТелефонов КАК ТипыТелефонов
		|		ПО Телефоны.Тип = ТипыТелефонов.Ссылка
		|ГДЕ
		|	Телефоны.Владелец = &Владелец
		|	И ТипыТелефонов.Наименование ПОДОБНО &Наименование";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Наименование", "%Мобил%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		Если ВыборкаДетальныеЗаписи.Номер<>"" Тогда
		  номерМ=ВыборкаДетальныеЗаписи.Номер;
			
		
		КонецЕсли;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
    Возврат  номерМ;
	
КонецФункции // ()



&НаСервере
Функция НайтиТелефоныДолж(долж)

	   массивТел=Новый Массив;

	   
	    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Телефоны.Номер КАК Номер
		|ИЗ
		|	Справочник.Телефоны КАК Телефоны
		|ГДЕ
		|	Телефоны.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		массивТел.Добавить(ВыборкаДетальныеЗаписи.Номер);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат  массивТел;
	

КонецФункции // ()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	
	
	  Если Объект.Ссылка.Пустая() Тогда
	  
	  	    Если  Объект.АдресДолжникаДляДок="" Тогда
	
		           Объект.АдресДолжникаДляДок=НайтиАдресРегистр(Объект.Владелец);
	
	        КонецЕсли;

	
	
	
	         Объект.СуммаДолга=НайтиДолгДолжника(Объект.Владелец);
		
		     массив=НайтиМестоРаботыДолж(Объект.Владелец)[0];
			
		
			   
			  			   
			   Объект.МестоРаботыДолжДляДок=массив;	
			   
			  
			   
			   
		
		
		
		// телефон 
		
		Объект.ТелефонДолжДляДок=НайтиМобильный(Объект.Владелец);

		   
		   
		   
	  
	  КонецЕсли;   
	
	
	
	
	

	
	
КонецПроцедуры


&НаСервере
 Функция НайтиДолгДолжника(долж)

	суммаДолга=0;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДоговоровСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность,
		|	ДанныеДоговоровСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.ДанныеДоговоров.СрезПоследних(&МоментВремени, ) КАК ДанныеДоговоровСрезПоследних
		|ГДЕ
		|	ДанныеДоговоровСрезПоследних.Договор.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		  суммаДолга=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА




	   //суммаДолга=суммаДолга+ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
		//суммаДолга=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	   Возврат суммаДолга;

КонецФункции // ()


 
 
&НаСервере
Функция НайтиАдресРегистр(долж)

	  типР=Справочники.ТипыАдресов.НайтиПоНаименованию("Регистрации");
	  
	  стрАдр="";
	  
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Адреса.Адрес КАК Адрес
		|ИЗ
		|	Справочник.Адреса КАК Адреса
		|ГДЕ
		|	Адреса.Владелец = &Владелец
		|	И Адреса.Тип = &Тип";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Тип", типР);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		стрАдр=ВыборкаДетальныеЗаписи.Адрес;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	  
	  Возврат стрАдр;
	

КонецФункции // ()

&НаКлиенте
Процедура НаименованиеОИСПНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	  СтандартнаяОбработка = Ложь;
	  
	   ПараметрыФормы  = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе", Истина, Истина);
      ОбработкаВыбора = Новый ОписаниеОповещения("ВыбратьЭлементСправочника", ЭтаФорма);
	    
	
	  ОткрытьФорму("Справочник.ОтделыОСП.ФормаВыбора",ПараметрыФормы,,,,,ОбработкаВыбора);
		
	 	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОИСПОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	
	
	
КонецПроцедуры
 
Процедура ВыбратьЭлементСправочника(РезультатЗакрытия,ДопПараметры) Экспорт

			Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
			   Возврат;
			КонецЕсли;

			Объект.НаименованиеОИСП = РезультатЗакрытия.НазваниеОСП;
            Объект.АдресОИСП=РезультатЗакрытия.АдресОСП; 
			
КонецПроцедуры	 
	 
	 
