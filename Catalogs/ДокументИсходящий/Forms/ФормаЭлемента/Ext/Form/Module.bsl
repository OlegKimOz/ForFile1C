
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ДатаСоздания) = Ложь Тогда
		Объект.ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Исполнитель) = Ложь Тогда
		Объект.Исполнитель = ПараметрыСеанса.Пользователь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Оператор) = Ложь Тогда
		Объект.Оператор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТипДокумента) = Ложь Тогда
		Объект.ТипДокумента = Перечисления.ТипДокумента.исх;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НазваниеДокумента) = Ложь И ЗначениеЗаполнено(Объект.НазваниеДокументаСправочник) Тогда
		Объект.НазваниеДокумента = Объект.НазваниеДокументаСправочник.ПолноеНаименование;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ИсполнительСтрокой) = Ложь И ЗначениеЗаполнено(Объект.Исполнитель) Тогда
		Объект.ИсполнительСтрокой = Объект.Исполнитель;
	КонецЕсли;
	
	ЗаполнитьНазванияДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтотОбъект.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ЗаполнитьНазванияДокументов();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ТекущийОбъект.ДатаСоздания) = Ложь Тогда
		ТекущийОбъект.ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Исполнитель) = Ложь Тогда
		ТекущийОбъект.Исполнитель = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНазванияДокументов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НазванияДокументов.НазваниеДокумента КАК НазваниеДокумента
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И НазванияДокументов.Стадия = &Стадия
	               |	И НазванияДокументов.ТипДокумента = &ТипДокумента";
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НазванияДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокНазванийДокументов = Элементы.НазваниеДокументаВыбор.СписокВыбора;
	СписокНазванийДокументов.Очистить();
	Пока Выборка.Следующий() Цикл
		СписокНазванийДокументов.Добавить(Выборка.НазваниеДокумента);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(НазваниеДокументаВыбор) Тогда
		Если СписокНазванийДокументов.НайтиПоЗначению(НазваниеДокументаВыбор) = Неопределено Тогда
			НазваниеДокументаВыбор = "";
			ЗаполнитьРасширенияНазванийДокументов();
			ОбновитьНаименованиеДокумента();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасширенияНазванийДокументов()
	
	СписокРаширенийНазванийДокументов = Элементы.РасширениеНазвания.СписокВыбора;
	СписокРаширенийНазванийДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НазванияДокументов.РасширениеНазвания КАК РасширениеНазвания
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И НазванияДокументов.Стадия = &Стадия
	               |	И НазванияДокументов.ТипДокумента = &ТипДокумента
	               |	И НазванияДокументов.НазваниеДокумента = &НазваниеДокумента";
	
	Если ЗначениеЗаполнено(НазваниеДокументаВыбор) = Ложь Тогда
		РасширениеНазвания = "";
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	Запрос.УстановитьПараметр("НазваниеДокумента", НазваниеДокументаВыбор);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ШаблоныНазванийДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокРаширенийНазванийДокументов.Добавить(Выборка.РасширениеНазвания);
	КонецЦикла;
	
	Если СписокРаширенийНазванийДокументов.НайтиПоЗначению(РасширениеНазвания) = Неопределено Тогда
		СписокРаширенийНазванийДокументов = "";
		РасширениеНазвания = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеДокументаВыборПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(НазваниеДокументаВыбор) Тогда
		ЗаполнитьРасширенияНазванийДокументов();
		ОбновитьНаименованиеДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасширениеНазванияПриИзменении(Элемент)
	
	ОбновитьНаименованиеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеДокумента()
	
	НаименованиеДокумента = СтрШаблон("%1 %2", ТРег(НазваниеДокументаВыбор), НРег(РасширениеНазвания));
	ЗаполнитьШифрНазвания();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьШифрНазвания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НазванияДокументов.НазваниеДокумента КАК НазваниеДокумента,
	               |	НазванияДокументов.РасширениеНазвания КАК РасширениеНазвания,
	               |	НазванияДокументов.ШифрНазвания КАК ШифрНазвания,
	               |	НазванияДокументов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.НазванияДокументов КАК НазванияДокументов
	               |ГДЕ
	               |	1 = 1
	               |	И НазванияДокументов.Стадия = &Стадия
	               |	И НазванияДокументов.ТипДокумента = &ТипДокумента
	               |	И НазванияДокументов.РасширениеНазвания = &РасширениеНазвания
	               |	И НазванияДокументов.НазваниеДокумента = &НазваниеДокумента";
	
	Запрос.УстановитьПараметр("ТипДокумента", Объект.ТипДокумента);
	Запрос.УстановитьПараметр("НазваниеДокумента", НазваниеДокументаВыбор);
	Запрос.УстановитьПараметр("РасширениеНазвания", РасширениеНазвания);
	
	Если ЗначениеЗаполнено(Объект.Стадия) Тогда
		Запрос.УстановитьПараметр("Стадия", Объект.Стадия);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ШаблоныНазванийДокументов.Стадия = &Стадия", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект.ШифрНазвания = Выборка.ШифрНазвания;
		Объект.НазваниеДокументаСправочник = Выборка.Ссылка;
	КонецЦикла;
	
КонецПроцедуры
