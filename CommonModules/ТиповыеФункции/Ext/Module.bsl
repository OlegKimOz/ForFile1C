// Функция "расщепляет" строку на подстроки, используя заданный 
//        разделитель. Разделитель может иметь любую длину. 
//        Если в качестве разделителя задан пробел, рядом стоящие пробелы 
//        считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//        игнорируются.
//        Например, 
//        РазложитьСтрокуВМассивПодстрок(",ку,,,му", ",") возвратит массив значений из пяти элементов, 
//        три из которых - пустые строки, а 
//        РазложитьСтрокуВМассивПодстрок(" ку   му", " ") возвратит массив значений из двух элементов
//
//    Параметры: 
//        Стр -             строка, которую необходимо разложить на подстроки. 
//                        Параметр передается по значению.
//        Разделитель -     строка-разделитель, по умолчанию - запятая.
//    Возвращаемое значение:
//        массив значений, элементы которого - подстроки
//
Функция глРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",") Экспорт 

    МассивСтрок = Новый Массив();

    Если Разделитель = " " Тогда

        Стр = СокрЛП(Стр);

        Пока 1 = 1 Цикл

            Поз = Найти(Стр,Разделитель);

            Если Поз = 0 Тогда

                МассивСтрок.Добавить(Стр);
                Возврат МассивСтрок;

            КонецЕсли;

            МассивСтрок.Добавить(Лев(Стр,Поз-1));
            Стр = СокрЛ(Сред(Стр,Поз));

        КонецЦикла;

    Иначе

        ДлинаРазделителя = СтрДлина(Разделитель);

        Пока 1 = 1 Цикл

            Поз = Найти(Стр,Разделитель);
            Если Поз = 0 Тогда

                МассивСтрок.Добавить(Стр);
                Возврат МассивСтрок;

            КонецЕсли;

            МассивСтрок.Добавить(Лев(Стр,Поз-1));

            Стр = Сред(Стр,Поз + ДлинаРазделителя);

        КонецЦикла;

    КонецЕсли;

КонецФункции // глРазложить

Функция ПолучитьСписокКонтактов(Документ) Экспорт
	
	Результат = "";
	Для Каждого Стр Из Документ.Телефоны Цикл
		Результат = Результат + ?(ПустаяСтрока(Результат), "", "
			|") + Строка(Стр.Телефон) + ?(ПустаяСтрока(Строка(Стр.КонтактноеЛицо)),""," | ") + Строка(Стр.КонтактноеЛицо) + ?(ПустаяСтрока(Строка(Стр.РезультатКонтакта)),""," | ") + Строка(Стр.РезультатКонтакта);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьКонтактныеДанные(ДокументКонтакт) Экспорт
	
	Результат = "";
	
	Для Каждого Стр Из ДокументКонтакт.Телефоны Цикл
		ТекРез = Формат(ДокументКонтакт.Дата,"ДФ=dd.MM.yyyy") + " тип: "+ДокументКонтакт.ТипКонтакта+", Т.ф.:" + Строка(Стр.Телефон) + ", к.л.:" + Строка(Стр.КонтактноеЛицо) + ", Результат:" + Строка(Стр.РезультатКонтакта) + ", Комментарий: " + Строка(Стр.Комментарий);
		Результат = Результат + ?(ПустаяСтрока(Результат),"","
			|") + ТекРез;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьКонтактныеДанныеПоДолжнику(Должник, НачалПериода, КонецПериода)Экспорт
	
	Результат = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контакт.Ссылка КАК ДокументКонтакт
	|ИЗ
	|	Документ.Контакт КАК Контакт
	|ГДЕ
	|	Контакт.Дата >= &НачалПериода
	|	И Контакт.Дата <= &КонецПериода
	|	И Контакт.Должник = &Должник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контакт.Дата";
	Запрос.УстановитьПараметр("НачалПериода",НачалПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Запрос.УстановитьПараметр("Должник",Должник);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДокументКонтакт = Выборка.ДокументКонтакт;
		Для Каждого Стр Из ДокументКонтакт.Телефоны Цикл
			ТекРез = Формат(ДокументКонтакт.Дата,"ДФ=dd.MM.yyyy") + " тип: "+ДокументКонтакт.ТипКонтакта+", Т.ф.:" + Строка(Стр.Телефон) + ", к.л.:" + Строка(Стр.КонтактноеЛицо) + ", Результат:" + Строка(Стр.РезультатКонтакта) + ", Комментарий: " + Строка(Стр.Комментарий);
			Результат = Результат + ?(ПустаяСтрока(Результат),"","
				|") + ТекРез;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСсылкуПоGUID(типовойОбъект, искомыйGUID)
	
	искомыйОбъект = типовойОбъект.ПолучитьСсылку(искомыйGUID);
	
	Возврат искомыйОбъект;
	
КонецФункции

Функция ПолучитьОбъектПоУИД(СтрокаGUID) Экспорт
	
	ИскомыйGUID = Новый УникальныйИдентификатор(СтрокаGUID);
	
	// по справочникам
	Для Каждого ЭлементОбхода Из Метаданные.Справочники Цикл
		ИскомыйОбъект = ПолучитьСсылкуПоGUID(Справочники[ЭлементОбхода.Имя], ИскомыйGUID);
		
		Если ИскомыйОбъект.ПолучитьОбъект() <> Неопределено Тогда
			Возврат ИскомыйОбъект;
		КонецЕсли;
	КонецЦикла;
	
	// по документам
	Для Каждого ЭлементОбхода Из Метаданные.Документы Цикл
		ИскомыйОбъект = ПолучитьСсылкуПоGUID(Документы[элементОбхода.Имя], ИскомыйGUID);
		
		Если ИскомыйОбъект.ПолучитьОбъект() <> Неопределено Тогда
			Возврат ИскомыйОбъект;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции