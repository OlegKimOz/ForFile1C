&НаСервере
Процедура ЗапросВФССППослать()Экспорт
	
		 
	
   ЗапроССт=Перечисления.РезультатЗапросаВФССП.ПослатьЗапрос;
   запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;
	
   счетчНе=0;	
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.КЗ КАК КЗ,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", ЗапроССт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		 Если счетчНе<=30 И ВыборкаДетальныеЗаписи.КЗ<1 Тогда
		 
			   WshShell = Новый COMОбъект("WScript.Shell");
			   
			   WshShell.Run(ВыборкаДетальныеЗаписи.СтрокаЗапроса,0, 1);
			   
								
			   //ТестЗапись(ВыборкаДетальныеЗаписи.СтрокаЗапроса);
					   
			   
			   СтрокаЗапроса = "ping -n 1 -w "+Формат(1000 * 3, "ЧДЦ=0; ЧГ=") + " 127.255.255.255"; 
			   
			   
			  
		       
			   WshShell.Run(СтрокаЗапроса, 0, -1); 
			   
					   
				НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
				
		        НаборЗаписей.Отбор.Реестр.Установить(ВыборкаДетальныеЗаписи.Реестр);
				НаборЗаписей.Отбор.Должник.Установить(ВыборкаДетальныеЗаписи.Должник);
				НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(ВыборкаДетальныеЗаписи.ИмяФайлаНаЗапрос);

				
				
				
				
				НаборЗаписей.Прочитать();
				
		        Для каждого Запись Из НаборЗаписей Цикл
					Если Запись.ЗапросПослан=ЗапроССт  Тогда
						
						Запись.ЗапросПослан =запрОк;
						Запись.КЗ=1;
					
					КонецЕсли;
					  
					
		        КонецЦикла;
		        НаборЗаписей.Записать();
					   
				
				
					  			   
		 КонецЕсли;
		
		
		счетчНе=счетчНе+1;
		
	КонецЦикла;
	

КонецПроцедуры



&НаКлиенте
Процедура ПолучитьКтоЗапросил() Экспорт

	//    структураКтозапросил=Новый Структура;
	//
	//    структураКтозапросил=ПолучитьКтоЗапросилНаСервер();
	//	
	//	// Пройдусь по структуре
	//	
	//    Для каждого стр  Из структураКтозапросил  Цикл
	//		
	//        	  WshShell = Новый COMОбъект("WScript.Shell");
	//		   
	//		   //WshShell.Run(ВыборкаДетальныеЗаписи.СтрокаЗапроса,0, 1);
	//		   
	//							
	//		   НачатьЗапускПриложения(Оповещение,стр.СтрокаЗапроса,0,Истина);
	//		   
	//		   СтрокаЗапроса = "ping -n 1 -w "+Формат(1000 * 3, "ЧДЦ=0; ЧГ=") + " 127.255.255.255"; 
	//		   
	//		   WshShell.Run(СтрокаЗапроса, 0, -1); 

	//		   
	//		
	//		
	//	
	//	КонецЦикла;     		
	//	
	//	

КонецПроцедуры




&НаСервере
Функция ПолучитьКтоЗапросилНаСервер() Экспорт

	//   выбрать первые 30
	
   структураКтозапросил=Новый Структура;
	
   ЗапроССт=Перечисления.РезультатЗапросаВФССП.ПослатьЗапрос;
   запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;

		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 30
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.КЗ КАК КЗ,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", ЗапроССт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
      		
		 структураКтозапросил.Вставить("СтрокаЗапроса",ВыборкаДетальныеЗаписи.СтрокаЗапроса);
		 структураКтозапросил.Вставить("ЗапросПослан",ВыборкаДетальныеЗаписи.ЗапросПослан);
		 структураКтозапросил.Вставить("Реестр",ВыборкаДетальныеЗаписи.Реестр);
		 структураКтозапросил.Вставить("ИмяФайлаНаЗапрос",ВыборкаДетальныеЗаписи.ИмяФайлаНаЗапрос);
		 структураКтозапросил.Вставить("КЗ",ВыборкаДетальныеЗаписи.КЗ);
		 структураКтозапросил.Вставить("Должник",ВыборкаДетальныеЗаписи.Должник);
		
		
	КонецЦикла;

	
	
	Возврат структураКтозапросил;
	
	

КонецФункции // ()





&НаСервере
Функция ДолжПривязкаЗачет(долж,датаплат) Экспорт

	
		//   Не опознан
		//   Нет контакта
		
		
		//БАНКРОТ
		// Готов отдать авто
		// Залог изъят
		// Залог продан должником
		// Залог Утрачен
		// Контакт с 3м лицом
		// Обещание оплатить
		// Оплатил полностью
		// Оплатил частично
		// Оставлена информация
		// Отзыв
		// Проблемный
		// Прогноз
		// Спор с автосалоном
		
		
		
		   статНеОпознан=Новый Массив;
		   статНеОпознан.Добавить("БАНКРОТ");
		   статНеОпознан.Добавить("Готов отдать авто");
		   статНеОпознан.Добавить("Залог изъят");
		   статНеОпознан.Добавить("Залог продан должником");
		   статНеОпознан.Добавить("Залог Утрачен");
		   статНеОпознан.Добавить("Контакт с 3м лицом");
		   статНеОпознан.Добавить("Обещание оплатить");
		   статНеОпознан.Добавить("Оплатил полностью");
		   статНеОпознан.Добавить("Оплатил частично");
		   статНеОпознан.Добавить("Оставлена информация");
		   статНеОпознан.Добавить("Отзыв");
		   статНеОпознан.Добавить("Проблемный");
		   статНеОпознан.Добавить("Прогноз");
		   статНеОпознан.Добавить("Спор с автосалоном");
		   
		   статНеОпознан.Добавить("Не опознан");

		   
		   
		   
		   
		   
		   
		   статСсылка=Новый Массив;
		   
		   
							//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	Статусы.Наименование КАК Наименование,
								|	Статусы.Ссылка КАК Ссылка
								|ИЗ
								|	Справочник.Статусы КАК Статусы
								|ГДЕ
								|	Статусы.Наименование В(&Наименование)";
							
							Запрос.УстановитьПараметр("Наименование", статНеОпознан);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаСтатусы = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаСтатусы.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								статСсылка.Добавить(ВыборкаСтатусы.Ссылка);
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА



		
		
		 
		  //статНеОпознан=Справочники.Статусы.НайтиПоНаименованию("Не опознан");
		
	
	          сотруд=Неопределено;
			  
			  
				//Запрос = Новый Запрос;
				//	Запрос.Текст = 
				//		"ВЫБРАТЬ
				//		|	ПривязкаСотрудникСрезПоследних.Период КАК Период,
				//		|	ПривязкаСотрудникСрезПоследних.Должник КАК Должник,
				//		|	ПривязкаСотрудникСрезПоследних.Сотрудник КАК Сотрудник
				//		|ИЗ
				//		|	РегистрСведений.ПривязкаСотрудник.СрезПоследних(&МоментВремени, Должник = &Должник) КАК ПривязкаСотрудникСрезПоследних";
				//	
				//	Запрос.УстановитьПараметр("Должник", долж);
				//	
				//	Запрос.УстановитьПараметр("МоментВремени", датаплат);
				//	
				//	РезультатЗапроса = Запрос.Выполнить();
				//	
				//	ВыборкаПривязка = РезультатЗапроса.Выбрать();

			  
			  
			  
			      Запрос = Новый Запрос;
			        Запрос.Текст = 
			        	"ВЫБРАТЬ
			        	|	ПривязкаСотрудникСрезПоследних.Период КАК Период,
			        	|	ПривязкаСотрудникСрезПоследних.Должник КАК Должник,
			        	|	ПривязкаСотрудникСрезПоследних.Сотрудник КАК Сотрудник
			        	|ИЗ
			        	|	РегистрСведений.ПривязкаСотрудник.СрезПоследних(, Должник = &Должник) КАК ПривязкаСотрудникСрезПоследних";
			        
			        Запрос.УстановитьПараметр("Должник", долж);
			        
				    
				    РезультатЗапроса = Запрос.Выполнить();
				    
				    ВыборкаПривязка = РезультатЗапроса.Выбрать();

				  
										
					Пока ВыборкаПривязка.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						сотруд=ВыборкаПривязка.Сотрудник;
						
					КонецЦикла;
					
					
					//  СправочникСсылка.КонтактныеЛица
					
					// Знакомый
					// Клиент
					// Коллега
					// Родственник
					
					
					
					
					спрКонтактныеЛица=Новый Массив;
					спрКонтактныеЛица.Добавить("Знакомый");
					спрКонтактныеЛица.Добавить("Коллега");
					спрКонтактныеЛица.Добавить("Клиент");
					спрКонтактныеЛица.Добавить("Родственник");
					
					
					
					 //   Не представился
					 //   Третье лицо
					 
					контЛицоНепредст=Справочники.КонтактныеЛица.НайтиПоНаименованию("Не представился");
					контЛицоТретье=Справочники.КонтактныеЛица.НайтиПоНаименованию("Третье лицо");
					
					
					контЛицаСсылка=Новый Массив;
					
								
								Запрос = Новый Запрос;
								Запрос.Текст = 
									"ВЫБРАТЬ
									|	КонтактныеЛица.Ссылка КАК Ссылка,
									|	КонтактныеЛица.Наименование КАК Наименование
									|ИЗ
									|	Справочник.КонтактныеЛица КАК КонтактныеЛица
									|ГДЕ
									|	КонтактныеЛица.Наименование В(&Наименование)";
								
								Запрос.УстановитьПараметр("Наименование", спрКонтактныеЛица);
								
								РезультатЗапроса = Запрос.Выполнить();
								
								ВыборкаКонтЛицаСсылка = РезультатЗапроса.Выбрать();
								
								Пока ВыборкаКонтЛицаСсылка.Следующий() Цикл
							
									 контЛицаСсылка.Добавить(ВыборкаКонтЛицаСсылка.Ссылка);
									
									
								КонецЦикла;
								
							
								
								
					
					
					
					
					
					естьКонтакт=Ложь;
					естьКонтактноеЛицо=Ложь;
					контлицо=Неопределено; 
					контлицоТр=Неопределено; 
					//контлицоНеПредст=Неопределено;
					
					
					
					
					Если сотруд<>Неопределено Тогда
					
							   	Запрос = Новый Запрос;
								Запрос.Текст = 
									"ВЫБРАТЬ
									|	Контакт.Должник КАК Должник,
									|	Контакт.Сотрудник КАК Сотрудник,
									|	Контакт.Статус КАК Статус,
               						|	Контакт.Дата КАК Дата,
									|	Контакт.Ссылка КАК Ссылка
									|ИЗ
									|	Документ.Контакт КАК Контакт
									|ГДЕ
									|	Контакт.Дата <= &Дата
									|	И Контакт.Должник = &Должник
									|	И Контакт.Сотрудник = &Сотрудник";
								
								Запрос.УстановитьПараметр("Дата", датаплат);
								Запрос.УстановитьПараметр("Должник", долж);
								Запрос.УстановитьПараметр("Сотрудник", сотруд);
								
								РезультатЗапроса = Запрос.Выполнить();
								
								ВыборкаСтатусКонтакт = РезультатЗапроса.Выбрать();
								
								Пока ВыборкаСтатусКонтакт.Следующий() Цикл
									
									
									    Для каждого стат Из статСсылка  Цикл
											
											
												Если стат=ВыборкаСтатусКонтакт.Статус Тогда
									    				
												    естьКонтакт=Истина;
													
													
											 
																Запрос = Новый Запрос;
																Запрос.Текст = 
																	"ВЫБРАТЬ
																	|	КонтактТелефоны.КонтактноеЛицо КАК КонтактноеЛицо
																	|ИЗ
																	|	Документ.Контакт.Телефоны КАК КонтактТелефоны
																	|ГДЕ
																	|	КонтактТелефоны.Ссылка = &Ссылка";
																
																Запрос.УстановитьПараметр("Ссылка", ВыборкаСтатусКонтакт.Ссылка);
																
																РезультатЗапроса = Запрос.Выполнить();
																
																ВыборкаконтактныеЛицаТел = РезультатЗапроса.Выбрать();
																
																
																Пока ВыборкаконтактныеЛицаТел.Следующий() Цикл
																	
																	
																	
																		Если ВыборкаконтактныеЛицаТел.КонтактноеЛицо =контЛицоНепредст ИЛИ ВыборкаконтактныеЛицаТел.КонтактноеЛицо =контЛицоТретье Тогда
																		
																			  контлицоТр=ВыборкаконтактныеЛицаТел.КонтактноеЛицо;
																			  
																			
																		
																		КонецЕсли;
																		
																																		  

																		  
																		  
																		
																		Для каждого стркон Из контЛицаСсылка Цикл
																			
																			Если стркон=ВыборкаконтактныеЛицаТел.КонтактноеЛицо  Тогда
																				
																				естьКонтактноеЛицо=Истина;
																				 контлицо=ВыборкаконтактныеЛицаТел.КонтактноеЛицо;
																				 
																			КонецЕсли;
																		 
																		 КонецЦикла;
																	
																	
																	
																	
													           КонецЦикла;
																
													
													
													 
												КонецЕсли;
															
														
														
									КонецЦикла;
										
								КонецЦикла;
								
					КонецЕсли;
					
					
					
					
				
     итогСтрока="";			  
					
	 
	 Если сотруд=Неопределено Тогда
	       итогСтрока="пустой";
		   
	 Иначе
		 
		  Если естьКонтакт=Ложь Тогда
			  
			    итогСтрока="пустой / "+сотруд;
				
	      Иначе
			  
			  
			  //итогСтрока="Да";
			  
			  Если естьКонтактноеЛицо Тогда
			      
			       итогСтрока="Да / "+сотруд+" / "+ контлицо;
			       
			   Иначе
				   
				   
			     итогСтрока="пустой / "+сотруд;

				 Если контлицоТр<>Неопределено Тогда
				 
				 	 итогСтрока="пустой / "+сотруд+" / "+ контлицоТр;
				 
				 КонецЕсли;
				 
								 
				 
			  КонецЕсли; 
			 
		  
		  
		  КонецЕсли;
		  
		  
		  
		 
	 
	 КонецЕсли;

	 
		   
	 
	Возврат итогСтрока; 
	
	
	

КонецФункции // ()




&НаСервере
Функция ПолучитьДоговорЦессии(долж) Экспорт
	
	   дог="";
	  
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеДанные.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
		|ГДЕ
		|	ДополнительныеДанные.Владелец = &Владелец
		|	И ДополнительныеДанные.Реквизит.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Наименование", "Договор цессии");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		дог=ВыборкаДетальныеЗаписи.Наименование;
	КонецЦикла;
	
	

	
	  Возврат дог;

КонецФункции // ()





&НаСервере
Функция НомерсСемь (номер) Экспорт

	
	стр=Прав(номер,СтрДлина(номер)-1);
	
	
	стр="7"+стр;
	
	
	Возврат стр;

КонецФункции // ()



&НаСервере
Функция ПолАдрес(долж)  Экспорт

	
	  адррег="";
	  тип="";
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Адреса.Адрес КАК Адрес,
		|	Адреса.Тип.Наименование КАК ТипНаименование
		|ИЗ
		|	Справочник.Адреса КАК Адреса
		|ГДЕ
		|	Адреса.Тип.Наименование = &Наименование
		|	И Адреса.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Наименование", "Регистрации");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		адррег=ВыборкаДетальныеЗаписи.Адрес;
		тип=ВыборкаДетальныеЗаписи.ТипНаименование;
		
		
	КонецЦикла;
	
	



	   Если адррег="" Тогда
		   
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Адреса.Адрес КАК Адрес,
						|	Адреса.Тип.Наименование КАК ТипНаименование
						|ИЗ
						|	Справочник.Адреса КАК Адреса
						|ГДЕ
						|	Адреса.Владелец = &Владелец
						|	И Адреса.Тип.Наименование = &Наименование";
					
					Запрос.УстановитьПараметр("Владелец", долж);
					Запрос.УстановитьПараметр("Наименование", "ФМЖ");
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						адррег=ВыборкаДетальныеЗаписи.Адрес;
		                тип=ВыборкаДетальныеЗаписи.ТипНаименование;
		
						
					КонецЦикла;
					
				
		   
		   
		Иначе   
		   
	   
		КонецЕсли;
		
		   
		   
		Возврат адррег;
	

КонецФункции // ()
	



	
&НаСервере
Функция ПолАдресТип(долж)  Экспорт

	
	  адррег="";
	  тип="";
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Адреса.Адрес КАК Адрес,
		|	Адреса.Тип.Наименование КАК ТипНаименование
		|ИЗ
		|	Справочник.Адреса КАК Адреса
		|ГДЕ
		|	Адреса.Тип.Наименование = &Наименование
		|	И Адреса.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Наименование", "Регистрации");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		адррег=ВыборкаДетальныеЗаписи.Адрес;
		тип=ВыборкаДетальныеЗаписи.ТипНаименование;
		
		
	КонецЦикла;
	
	



	   Если адррег="" Тогда
		   
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Адреса.Адрес КАК Адрес,
						|	Адреса.Тип.Наименование КАК ТипНаименование
						|ИЗ
						|	Справочник.Адреса КАК Адреса
						|ГДЕ
						|	Адреса.Владелец = &Владелец
						|	И Адреса.Тип.Наименование = &Наименование";
					
					Запрос.УстановитьПараметр("Владелец", долж);
					Запрос.УстановитьПараметр("Наименование", "ФМЖ");
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						адррег=ВыборкаДетальныеЗаписи.Адрес;
		                тип=ВыборкаДетальныеЗаписи.ТипНаименование;
		
						
					КонецЦикла;
					
				
		   
		   
		Иначе   
		   
	   
		КонецЕсли;
		
		
		
		
		Возврат тип;
	

КонецФункции // ()
	






	



	
	









&НаКлиенте
Процедура Оповещение(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
        Сообщить("Первый запрос");
    КонецЕсли;	
 
КонецПроцедуры




&НаСервере
Процедура ЗапросВФССПЕстьлифайлЗапроса()Экспорт

    запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;
	
	запротв=Перечисления.РезультатЗапросаВФССП.ПолученОтветНаЗапрос;
	
	отротвназапр=Перечисления.РезультатЗапросаВФССП.ОтрицателтныйОтветНаЗапрос;
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник,
		|	ЗапросывФССПдляРеестра.СтрокаЗапросаНет КАК СтрокаЗапросаНет,
		|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", запрОк);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		
		    Файл = Новый Файл(Выборка.ИмяФайлаНаЗапрос);
			
			ФайлНет = Новый Файл(Выборка.СтрокаЗапросаНет);
			
		
		    Если  Файл.Существует() Тогда	
				
				  	   
				НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
				
		        НаборЗаписей.Отбор.Реестр.Установить(Выборка.Реестр);
				НаборЗаписей.Отбор.Должник.Установить(Выборка.Должник);
				НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(Выборка.ИмяФайлаНаЗапрос);
				
				
				НаборЗаписей.Прочитать();
				
				Для каждого Запись Из НаборЗаписей Цикл
					Если Запись.ЗапросПослан=запрОк И (НЕ ФайлНет.Существует())  Тогда
					
						  Запись.ЗапросПослан =запротв;

					
					КонецЕсли;
		              					
		        КонецЦикла;
				
				
				
				НаборЗаписей.Записать();
				
				  
			КонецЕсли;
		
	КонецЦикла;
	
	
	
КонецПроцедуры





&НаСервере
Процедура ФССППослатьЗапросНаРезультат()Экспорт
   	
   отв=Перечисления.РезультатЗапросаВФССП.ПолученОтветНаЗапрос;
   
   отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;
   
    счетчНе=0;

    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник,
		|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", отв);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		
		    Файл = Новый Файл(Выборка.ИмяФайлаНаЗапрос);
			
			
			   Если счетчНе<=30 Тогда
     
			
		
				          Если  Файл.Существует() Тогда	
						
						
						
		                       
						                 WshShell = Новый COMОбъект("WScript.Shell");
			   
                                         WshShell.Run(Выборка.СтрокаAnswer,0, 1);
										 
										 
					                     СтрокаЗапроса = "ping -n 1 -w "+Формат(1000 * 3, "ЧДЦ=0; ЧГ=") + " 127.255.255.255"; 
		                                 WshShell.Run(СтрокаЗапроса, 0, -1); 


						
										  	   
										НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
										
								        НаборЗаписей.Отбор.Реестр.Установить(Выборка.Реестр);
										НаборЗаписей.Отбор.Должник.Установить(Выборка.Должник);
										НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(Выборка.ИмяФайлаНаЗапрос);
										
										
										НаборЗаписей.Прочитать();
										Для каждого Запись Из НаборЗаписей Цикл
											Если Запись.ЗапросПослан=отв И Запись.ИмяФайлаНаЗапрос=Выборка.ИмяФайлаНаЗапрос Тогда
											
												 Запись.ЗапросПослан =отвпол;
											
											КонецЕсли;
											
											  
											
								        КонецЦикла;
								        НаборЗаписей.Записать();
											   
						  										
									
										
										
													  			   
				             КонецЕсли;
				
				
			  
				 КонецЕсли;
		
		
		    счетчНе=счетчНе+1;
 
		
		
		
	КонецЦикла;

   
   
	
	
	

КонецПроцедуры



&НаСервере
Процедура ПослатьЕщеЗапросНарезультат() Экспорт

	  
	отв=Перечисления.РезультатЗапросаВФССП.Обработан;
   
   
   
    счетчНе=0;

    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник,
		|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", отв);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		
		    Файл = Новый Файл(Выборка.ИмяФайлаНаЗапрос);
			
			
			   Если счетчНе<=30 Тогда
     
			
		
				          Если  Файл.Существует() Тогда	
						
						
						
		                       
						                 WshShell = Новый COMОбъект("WScript.Shell");
			   
                                         WshShell.Run(Выборка.СтрокаAnswer,0, 1);
										 
										 
					                     СтрокаЗапроса = "ping -n 1 -w "+Формат(1000 * 3, "ЧДЦ=0; ЧГ=") + " 127.255.255.255"; 
		                                 WshShell.Run(СтрокаЗапроса, 0, -1); 


						    
						  										
									
										
										
													  			   
				             КонецЕсли;
				
				
			  
				 КонецЕсли;
		
		
		    счетчНе=счетчНе+1;
 
		
		
		
	КонецЦикла;

          
	
	
	
	

КонецПроцедуры






//ОбработатьОтвет()

&НаСервере
Процедура ОбработатьОтвет()  Экспорт

	  отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;
	  
	  отвобр=Перечисления.РезультатЗапросаВФССП.Обработан;


	  

	  
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
				|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
				|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
				|	ЗапросывФССПдляРеестра.СтрокаРезультат КАК СтрокаРезультат,
				|	ЗапросывФССПдляРеестра.СтрокаБАКфайл КАК СтрокаБАКфайл,
				|	ЗапросывФССПдляРеестра.СтрокаБакЗапрос КАК СтрокаБакЗапрос,
				|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
				|	ЗапросывФССПдляРеестра.Должник КАК Должник,
				|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
				|ИЗ
				|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
				|ГДЕ
				|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
			
			Запрос.УстановитьПараметр("ЗапросПослан", отвпол);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			
			
           exe_production="";
		   details="";
		   subject_fssp="";
		   department="";
		   bailiff="";
		   ip_end="";

			
			Пока Выборка.Следующий() Цикл

				    Файл = Новый Файл(Выборка.СтрокаРезультат);

					Если  Файл.Существует() Тогда
						
					   разм=Файл.Размер();

					   Если разм<>0 Тогда
						   
						   мСтрокФайла = Новый Массив();
											
											//прочитать строку считывает одну строку из файла
											//если достигнут конец файла, то возвращается значение НЕОПРЕДЕЛЕНО
											
											 
											ПрочитанныйТекст = Новый ЧтениеТекста(Выборка.СтрокаРезультат, КодировкаТекста.UTF8);
											
											Строка = ПрочитанныйТекст.ПрочитатьСтроку();
											//а не был ли файл пуст?
											Если Строка <> Неопределено Тогда
											     мСтрокФайла.Добавить(Строка);
											КонецЕсли;
											
											Пока Строка <> Неопределено Цикл
					                           Строка = ПрочитанныйТекст.ПрочитатьСтроку();
											     Если Строка <> Неопределено Тогда
											          мСтрокФайла.Добавить(Строка);
											     КонецЕсли;
											КонецЦикла;
																	
											ПрочитанныйТекст.Закрыть();
											
											
										    номерстр=0;
											Для каждого стрф  Из  мСтрокФайла Цикл
												
											 //Сообщить("номер строки= "+ номерстр);	
												 
											  // Подготовлю строку для записи в ФССП
											  Если (НЕ СокрЛП(стрф)="{") И (НЕ СокрЛП(стрф)="}") И (НЕ СокрЛП(стрф)="}&{") Тогда
											  
												  
												  Если  номерстр=2 Тогда
													  // вытащу подстраку exe_production
													  exe_production=ВытащуПодстроку("exe_production", стрф);
													  
													  //Сообщить(exe_production);
												  КонецЕсли; 
												  
												  Если  номерстр=3 Тогда
													  
													  details=ВытащуПодстроку("details", стрф);
													  
													  
													  // Если исп лист или Судебный приказ вытащу для Исполнительные документы
													  
													   СтрукИсп=ВытащитьИспДок (стрф);
													   
													   ОписаниеДок= стрф;
													   
													   // Запишу в Исполнительные документы
													   
													  									   
													   //ЗаписьВИсполнительныеДокументы(СсылкаДолж,СтрукИсп.ВидИспДокумента,НомерИспДок,ДатаИспДок,ОписаниеДок)

													     
													   
													   
													   //Сообщить(СтрукИсп.НомерИспДок);
													   
													   //Сообщить(СтрукИсп.ДатаИспДок);
													   
													  
													 
												  КонецЕсли; 
												  
												  
												  
												   Если  номерстр=4 Тогда
													  
													 subject_fssp =ВытащуПодстроку("subject", стрф);
													  
													  ОписаниеДок=ОписаниеДок+" - " + стрф;
										
												   КонецЕсли; 
												  
												   
												   Если  номерстр=5 Тогда
													  
													  department=ВытащуПодстроку("department", стрф);
										
												   КонецЕсли; 
												  
				                                   Если  номерстр=6 Тогда
													  
													  bailiff=ВытащуПодстроку("bailiff", стрф);
											
												   КонецЕсли; 
												   
												   
												   Если  номерстр=7 Тогда
													  
													  ip_end=ВытащуПодстроку("ip_end", стрф);
											
												   КонецЕсли; 
												   
												  //Сообщить(стрф+" - номер строки="+номерстр);
													 
											  
											  КонецЕсли; 
											  
											  
																	  
											  Если номерстр=8 Тогда
											      
												  
												  //Сообщить(стрф+" --------");
												  
																  //ИмяЗначенияПеречисленияПоСинониму( "ВидыИспДокументов", "Исполнительный лист")
												  
								          				  Если СтрукИсп.ВидИспДокумента="Исполнительный лист" ИЛИ СтрукИсп.ВидИспДокумента="Судебный приказ"  Тогда
													  
															  
															 перечислен= ИмяЗначенияПеречисленияПоСинонимуСтр( "ВидыИспДокументов", СтрукИсп.ВидИспДокумента);
															  

														    ЗаписьВИсполнительныеДокументы(Выборка.Должник, перечислен ,СтрукИсп.НомерИспДок,СтрукИсп.ДатаИспДок,ОписаниеДок);

													  
													   
													   КонецЕсли;

												  
												  
												  
													 ЗаписатьВФССП (Выборка.Должник,exe_production,details,subject_fssp,department,bailiff,ip_end);
													
													 
													 
													 
													 номерстр=0;						  
													
													
													
											  КонецЕсли;
											  
											  
											  
											  
											  
											  //ЗаписатьВФССП (СсылкаДолж,exe_production,details,subject_fssp,department,bailiff,ip_end)
										     		
					                         номерстр=номерстр+1;							 
											
											КонецЦикла;						
																	
										
						   
						   
										КонецЕсли;	 
										
										
				    ФайлРезульта = Новый Файл(Выборка.СтрокаРезультат);
					
					 Если ФайлРезульта.Существует() Тогда
					 
					 	     ПереместитьФайл(Выборка.СтрокаРезультат, Выборка.СтрокаБАКфайл); // перезапишет, если уже есть такой файл
					   
					 
					 КонецЕсли;					
					   
					   
					   
					   ФайлНаЗапросT = Новый Файл(Выборка.ИмяФайлаНаЗапрос);
		
						Если ФайлНаЗапросT.Существует() Тогда
								
								//ПереместитьФайл(ФайлНаЗапросT, Выборка.СтрокаБакЗапрос); // перезапишет, если уже есть такой файл
								
							ПереместитьФайл(Выборка.ИмяФайлаНаЗапрос, Выборка.СтрокаБакЗапрос); // перезапишет, если уже есть такой файл
							
						КонецЕсли;

					   
					   
						
					КонецЕсли; 
	
					
					// изменить 
						  	   
										НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
										
								        НаборЗаписей.Отбор.Реестр.Установить(Выборка.Реестр);
										НаборЗаписей.Отбор.Должник.Установить(Выборка.Должник);
										НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(Выборка.ИмяФайлаНаЗапрос);
										
										
										НаборЗаписей.Прочитать();
										Для каждого Запись Из НаборЗаписей Цикл
											
											 Если Запись.ЗапросПослан=отвпол И Запись.Должник=Выборка.Должник Тогда
											 
											 	     Запись.ЗапросПослан =отвобр;
											 
											 КонецЕсли;
											
																					
								        КонецЦикла;
								        НаборЗаписей.Записать();
											   
						  										

				
				
				
			КонецЦикла; 
			
			

КонецПроцедуры



Функция ВытащуПодстроку(КлючПодстр, СтрИсх)
	
	  позиц=Найти(СтрИсх,":");
	  
	  ДлинаСтр=СтрДлина(СтрИсх);
	  СтрВозврат="";
	  
	  Если позиц<>0 Тогда
		  
		  позиц=позиц+3;
		  
		  СколькоВырез=ДлинаСтр-позиц-1;
		  
		  СтрВозврат=Сред(СтрИсх,позиц,СколькоВырез);
	 	
	  
	  КонецЕсли;
	  
	  
	  Возврат СтрВозврат;
	

КонецФункции // ()


&НаСервере
Процедура ЗаписатьВФССП (СсылкаДолж,exe_production,details,subject_fssp,department,bailiff,ip_end)

	
	//   Проверить была ли такая запись?
	   
	 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФССП.exe_production КАК exe_production,
		|	ФССП.details КАК details
		|ИЗ
		|	Справочник.ФССП КАК ФССП
		|ГДЕ
		|	ФССП.Должник = &Должник
		|	И ФССП.exe_production ПОДОБНО &exe_production";
	
	Запрос.УстановитьПараметр("exe_production", exe_production);
	Запрос.УстановитьПараметр("Должник", СсылкаДолж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	колСтр=ВыборкаДетальныеЗаписи.Количество();
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	      Если колСтр=0 Тогда
		  
		  	      									  
						СпрФССП=Справочники.ФССП;
						НовЭлем=СпрФССП.СоздатьЭлемент();
						НовЭлем.Должник=СсылкаДолж;
						НовЭлем.exe_production=exe_production;
						НовЭлем.details=details;
						НовЭлем.subject_fssp=subject_fssp;
				   		НовЭлем.department=department;
						НовЭлем.bailiff=bailiff;
						НовЭлем.ip_end=ip_end;
						НовЭлем.Записать();	   			  
						  

		  
		  КонецЕсли;
				
						
КонецПроцедуры


&НаСервере
Функция ИмяЗначенияПеречисленияПоСинонимуСтр( пИмяПеречисления, пСинонимЗначения ) Экспорт
	
	
   КолекцияЗначенийПеречисления = Метаданные.Перечисления[пИмяПеречисления].ЗначенияПеречисления;
    Для каждого пНайденноеЗначение из КолекцияЗначенийПеречисления Цикл
        Если пНайденноеЗначение.Синоним = пСинонимЗначения Тогда
            Возврат пНайденноеЗначение.Имя;
        КонецЕсли
    КонецЦикла;
    Возврат неопределено;	
	
    
КонецФункции // Имя Значения Перечисления По Синониму


Функция ВытащитьИспДок (ИсхСтрокаИспДок)

	СтруктураСостояния = Новый Структура;

	
	 поз=Найти(ИсхСтрокаИспДок,"Исполнительный");
	
	 Если поз<>0 Тогда
		 
	     СтруктураСостояния.Вставить("ВидИспДокумента", "Исполнительный лист"); 	 
	 
	 КонецЕсли;  
	
     позс=Найти(ИсхСтрокаИспДок,"Судебный"); 	 
	 
	 Если позс<>0 Тогда
		 
	     СтруктураСостояния.Вставить("ВидИспДокумента", "Судебный приказ"); 	 
		 
		  
		 
		 
	 КонецЕсли;  
	 
	 
	 позса=Найти(ИсхСтрокаИспДок,"Акт");
	 
	 Если позса<>0 Тогда
		 
		 
		 СтруктураСостояния.Вставить("ВидИспДокумента", "Акт"); 	 
		 
	 Иначе
		 
		 Если позса=0 и позс=0 и поз=0 Тогда
		 
		 	   СтруктураСостояния.Вставить("ВидИспДокумента", "Акт"); 
		 
		 КонецЕсли;
		 
			 
		 
		 
	 КонецЕсли; 
	 
	 
	 
	 
	 
	
	 // вытащу дату    от   №
	 
	  поз=Найти(ИсхСтрокаИспДок,"от");
	  позс=Найти(ИсхСтрокаИспДок,"№");
	  
	  
	  
	  датаДок=Сред(ИсхСтрокаИспДок,поз,позс-поз);
	  СтруктураСостояния.Вставить("ДатаИспДок", датаДок);
	  
	 	  
	  // вытащить номер  
	  
	  
	              
				  длинаСтр=СтрДлина(ИсхСтрокаИспДок);
				  
				  трен=длинаСтр-позс;
				  
				  
				  стрдоНомера=Прав(ИсхСтрокаИспДок,трен-1);
				  
				   //стрдоНомера - строка после первого №
				   //  надо найти /d/s
				   
				  
				  номерДок=ДоПробелаСцифрой(стрдоНомера);
				  
				  
				  СтруктураСостояния.Вставить("НомерИспДок", номерДок);

	  
		
    Возврат СтруктураСостояния; 	

КонецФункции // ()

&НаСервере
Процедура ЗаписьВИсполнительныеДокументы(СсылкаДолж,ВидИспДок,НомерИспДок,ДатаИспДок,ОписаниеДок)

			
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсполнительныеДокументы.ВидИспДокумента КАК ВидИспДокумента,
		|	ИсполнительныеДокументы.НомерИсДок КАК НомерИсДок,
		|	ИсполнительныеДокументы.ДатаИспДок КАК ДатаИспДок,
		|	ИсполнительныеДокументы.Должник КАК Должник
		|ИЗ
		|	Справочник.ИсполнительныеДокументы КАК ИсполнительныеДокументы
		|ГДЕ
		|	ИсполнительныеДокументы.Должник = &Должник
		|	И ИсполнительныеДокументы.НомерИсДок = &НомерИсДок
		|	И ИсполнительныеДокументы.ДатаИспДок = &ДатаИспДок";
	
	
	Запрос.УстановитьПараметр("ДатаИспДок", ДатаИспДок);
	Запрос.УстановитьПараметр("Должник", СсылкаДолж);
	Запрос.УстановитьПараметр("НомерИсДок", НомерИспДок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	колЭлем= ВыборкаДетальныеЗаписи.Количество();

	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
			
	КонецЦикла;
	
	   Если колЭлем=0 Тогда
	   
	   	         			  
				   СпрИспДок=Справочники.ИсполнительныеДокументы;
				   НовЭл = СпрИспДок.СоздатьЭлемент();
				   НовЭл.Должник=СсылкаДолж;
				   
				   Если ВидИспДок=ИмяЗначенияПеречисленияПоСинонимуСтр( "ВидыИспДокументов", "Исполнительный лист") Тогда
				   
				   	    НовЭл.ВидИспДокумента=Перечисления.ВидыИспДокументов.ИсполнительныйЛист;

				   
				   Иначе
				   
				   	     НовЭл.ВидИспДокумента=Перечисления.ВидыИспДокументов.СудебныйПриказ;
				   
				   КонецЕсли;
					   
				    НовЭл.НомерИсДок=НомерИспДок;
					НовЭл.ДатаИспДок=ДатаИспДок;
					НовЭл.ОписаниеИспДокумента=ОписаниеДок;
		            НовЭл.Записать();

	   
	   КонецЕсли; 
	
						  					  
						  
	  
КонецПроцедуры


Функция ДоПробелаСцифрой (стрсприц)

	  позициск=0;
	
	Для итр = 1 По СтрДлина(стрсприц) Цикл 
        Символ = Сред(стрсприц, итр, 1);
		
        Если ЭтоЦифра(Символ) Тогда 
			
			 // проверю следующий пробел?
			   СимволПр = Сред(стрсприц, итр+1, 1);
			   
			   КодСимвола = КодСимвола(СимволПр);
			   Если КодСимвола=32  Тогда
	              позициск=итр+1;
				  
				  Возврат  Лев(стрсприц,позициск);
			   
			   КонецЕсли;	
		КонецЕсли; 
		
	КонецЦикла; 	

КонецФункции // ()


Функция ЭтоЦифра(Символ) 
    КодСимвола = КодСимвола(Символ); 
    Возврат (КодСимвола >= 48 И КодСимвола <= 57) 
КонецФункции


&НаСервере
Функция ВсегоЗадолженностьНаДату(датаПередачи, догов) Экспорт
	
	  всз=0;
	  
	  
	     
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДоговоровСрезПервых.Период КАК Период,
		|	ДанныеДоговоровСрезПервых.ВсегоЗадолженность КАК ВсегоЗадолженность,
		|	ДанныеДоговоровСрезПервых.ТекущийОсновнойДолг КАК ТекущийОсновнойДолг,
		|	ДанныеДоговоровСрезПервых.ПросроченныеПроценты КАК ПросроченныеПроценты,
		|	ДанныеДоговоровСрезПервых.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг,
		|	ДанныеДоговоровСрезПервых.Неустойка КАК Неустойка,
		|	ДанныеДоговоровСрезПервых.ТекущиеПроценты КАК ТекущиеПроценты,
		|	ДанныеДоговоровСрезПервых.Госпошлина КАК Госпошлина,
		|	ДанныеДоговоровСрезПервых.Прочее КАК Прочее
		|ИЗ
		|	РегистрСведений.ДанныеДоговоров.СрезПервых(&МоментВремени, ) КАК ДанныеДоговоровСрезПервых
		|ГДЕ
		|	ДанныеДоговоровСрезПервых.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Договор", догов);
	Запрос.УстановитьПараметр("МоментВремени", датаПередачи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		   всз=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
		   
		   Если всз=0 ИЛИ всз=Неопределено Тогда
			   
			   всз=ВыборкаДетальныеЗаписи.ТекущийОсновнойДолг+ВыборкаДетальныеЗаписи.ТекущиеПроценты+ВыборкаДетальныеЗаписи.ПросроченныйОсновнойДолг+ВыборкаДетальныеЗаписи.ПросроченныеПроценты + ВыборкаДетальныеЗаписи.Неустойка +ВыборкаДетальныеЗаписи.Госпошлина+ ВыборкаДетальныеЗаписи.Прочее;
		   	
		   
		   КонецЕсли;
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	  Возврат всз;

КонецФункции // ()



&НаСервере
Функция решСуда(долж) Экспорт

	
	     рез="Нет";
	     спрДопРек=Справочники.ДополнительныеРеквизиты.НайтиПоНаименованию("Дата решения суда");
		 
		  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеДанные.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
		|ГДЕ
		|	ДополнительныеДанные.Владелец = &Владелец
		|	И ДополнительныеДанные.Реквизит = &Реквизит";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Реквизит", спрДопРек);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		  рез=ВыборкаДетальныеЗаписи.Наименование;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	  Возврат рез;

КонецФункции // ()


&НаСервере
Функция догЦессии (долж)  Экспорт

	  рез="";
	  спрДопРек=Справочники.ДополнительныеРеквизиты.НайтиПоНаименованию("Договор цессии");

	  
	  	Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДополнительныеДанные.Наименование КАК Наименование
			|ИЗ
			|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
			|ГДЕ
			|	ДополнительныеДанные.Владелец = &Владелец
			|	И ДополнительныеДанные.Реквизит = &Реквизит";
		
		Запрос.УстановитьПараметр("Владелец", долж);
		Запрос.УстановитьПараметр("Реквизит", спрДопРек);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			  рез=ВыборкаДетальныеЗаписи.Наименование;
			
		КонецЦикла;

	  
	  
	  Возврат рез;


КонецФункции // ()


&НаСервере
Функция СуммаПлатежейЗаМесяц(долж,датаНач,датаКон,дог) Экспорт

	    рез=0;
		
		Попытка
			
			     
		    	
					датаНачв= Дата(датаНач);
					датаКонв=Дата(датаКон);
					
					Если датаКонв>ТекущаяДата() Тогда
						
						датаКонв=ТекущаяДата();
						
					
					КонецЕсли;
					
					
														
					
					
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПлатежиОбороты.СуммаОборот КАК СуммаОборот
					|ИЗ
					|	РегистрНакопления.Платежи.Обороты(
					|			&ДатаНачала,
					|			&ДатаКонец,
					|			,
					|			Должник = &Должник
					|				И Договор = &Договор) КАК ПлатежиОбороты";
				
					Запрос.УстановитьПараметр("Договор", дог);
				    Запрос.УстановитьПараметр("ДатаКонец", датаКонв);
					Запрос.УстановитьПараметр("ДатаНачала", датаНачв);
					Запрос.УстановитьПараметр("Должник", долж);

				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					рез=ВыборкаДетальныеЗаписи.СуммаОборот;
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


				
				//
				//Запрос.УстановитьПараметр("ДатаКонец", датаКон);
				//Запрос.УстановитьПараметр("ДатаНачала", датаНач);
				//Запрос.УстановитьПараметр("Должник", долж);

			
		
		Исключение
			
			Сообщить(долж);
			
			ТекстОшибки = ОписаниеОшибки();
			Сообщить(ТекстОшибки);
			
			
		КонецПопытки;
		
	
	
	Возврат рез;
	

КонецФункции // ()

&НаСервере
Функция КоличествоПлатежейЗаМесяц(долж,датаНач,датаКон,дог) Экспорт

        рез=0;
		
		датаНач= Дата(датаНач);
		датаКон=Дата(датаКон);

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПлатежиДолжники.ДатаПлатежа КАК ДатаПлатежа,
		|	ПлатежиДолжники.Сумма КАК Сумма
		|ИЗ
		|	Документ.Платежи.Должники КАК ПлатежиДолжники
		|ГДЕ
		|	ПлатежиДолжники.Договор = &Договор
		|	И ПлатежиДолжники.Должник = &Должник
		|	И ПлатежиДолжники.ДатаПлатежа МЕЖДУ &ДатаНачала И &ДатаКонец";
	
	Запрос.УстановитьПараметр("ДатаКонец", датаКон);
	Запрос.УстановитьПараметр("ДатаНачала", датаНач);
	Запрос.УстановитьПараметр("Договор", дог);
	Запрос.УстановитьПараметр("Должник", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	рез=ВыборкаДетальныеЗаписи.Количество();
	
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	
	  Возврат рез;

	

КонецФункции // ()


&НаСервере
Функция ГородДолж (долж) Экспорт

	  //Регистрации     ФМЖ
	  
	  городРег="";
	  городФМЖ="";
	  типРегистрация=Справочники.ТипыАдресов.НайтиПоНаименованию("Регистрации");
	  типФМЖ=Справочники.ТипыАдресов.НайтиПоНаименованию("ФМЖ");
	  
				  
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Адреса.Город КАК Город,
					|	Адреса.Тип КАК Тип
					|ИЗ
					|	Справочник.Адреса КАК Адреса
					|ГДЕ
					|	Адреса.Владелец = &Владелец";
				
				Запрос.УстановитьПараметр("Владелец", долж);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если ВыборкаДетальныеЗаписи.Тип=типФМЖ Тогда
					  городФМЖ=ВыборкаДетальныеЗаписи.Город;
						
					
					КонецЕсли;
					
					Если ВыборкаДетальныеЗаписи.Тип=типРегистрация Тогда
					  городРег=ВыборкаДетальныеЗаписи.Город;
						
					
					КонецЕсли;
					
					
					
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	  
	          Если городРег<>"" Тогда
			  
				  Возврат  городРег;
			  иначе 
				  
				  Возврат  городФМЖ;
			  
			  КонецЕсли;
	  
	

КонецФункции // ()






