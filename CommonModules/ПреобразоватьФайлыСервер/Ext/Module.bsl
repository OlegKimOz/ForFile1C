&НаСервере
Функция ПолучитьДокументыСФлагомОтправлен()  Экспорт

	массивИзРеестра=Новый Массив;
	
	
	               	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрСведенийДокументыОбработаны.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.РегистрСведенийДокументыОбработаны КАК РегистрСведенийДокументыОбработаны";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		 массивИзРеестра.Добавить(ВыборкаДетальныеЗаписи.Документ);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	  массивИзСпрДокументы=Новый Массив;
	
	//  найду документы с флагом is_post
	
	 
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеОПроцессуальномПравопреемстве.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗаявлениеОПроцессуальномПравопреемстве КАК ЗаявлениеОПроцессуальномПравопреемстве
		|ГДЕ
		|	ЗаявлениеОПроцессуальномПравопреемстве.is_post = &is_post
		|	И НЕ (ЗаявлениеОПроцессуальномПравопреемстве.Ссылка В (&Ссылка))";
	
	Запрос.УстановитьПараметр("is_post", Истина);
	Запрос.УстановитьПараметр("Ссылка", массивИзРеестра);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		массивИзСпрДокументы.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеОВыдачеСудебногоПриказа.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ЗаявлениеОВыдачеСудебногоПриказа КАК ЗаявлениеОВыдачеСудебногоПриказа
		|ГДЕ
		|	ЗаявлениеОВыдачеСудебногоПриказа.is_post = &is_post
		|	И НЕ ЗаявлениеОВыдачеСудебногоПриказа.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("is_post", Истина);
	Запрос.УстановитьПараметр("Ссылка", массивИзРеестра);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		 массивИзСпрДокументы.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	  Возврат  массивИзСпрДокументы;
			
	
	
	

КонецФункции // ()


&НаСервере
Процедура ЗаписатьвРегистрСведений(спрСсылка) Экспорт

	  МенеджерЗаписи = РегистрыСведений.РегистрСведенийДокументыОбработаны.СоздатьМенеджерЗаписи();
	  МенеджерЗаписи.Документ=спрСсылка;
	  
	  МенеджерЗаписи.Записать();
	  
	

КонецПроцедуры



&НаСервере
Функция ПолучитьПрисоединенныеФайлы(владелецФайлов) Экспорт

		//структураФайлы=Новый Структура;

		массивСтруктур=Новый Массив;
		
	
	         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОФайлах.Файл КАК Файл
		|ИЗ
		|	РегистрСведений.СведенияОФайлах КАК СведенияОФайлах
		|ГДЕ
		|	СведенияОФайлах.ВладелецФайла = &ВладелецФайла";
	
	Запрос.УстановитьПараметр("ВладелецФайла", владелецФайлов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи

		//структураФайлы.Вставить("Файл", ВыборкаДетальныеЗаписи.Файл);
		массивСтруктур.Добавить(ВыборкаДетальныеЗаписи.Файл);

	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	 //ВыборкаДетальныеЗаписи.Файл.ПутьКФайлу
	
	
	 Возврат массивСтруктур;

КонецФункции // ()


&НаСервере
Функция ПолучитьПутьКФайлу(ссылкаНаФайл) Экспорт

	        об=ссылкаНаФайл.ПолучитьОбъект();
			
			 //об.Том.ПолныйПутьWindows
			 
			путьНовосиб= СтрЗаменить(об.Том.ПолныйПутьWindows,"terminal","192.168.16.254");
			 
						   
			Возврат  путьНовосиб+ об.ПутьКФайлу;

КонецФункции // ()


&НаСервере
Функция ПолучитьИмяФайла(стрФайл) Экспорт 
	
	 	    Возврат стрФайл.Наименование;

КонецФункции // ()


&НаСервере
Функция ПолучитьРасширениеФайла(стрФайл) Экспорт 
	
	 	    Возврат стрФайл.Расширение;

КонецФункции // ()

  
&НаСервере
Процедура записатьВХранилищеНовыйФайл (стрФайл,имяД,спрСссылка) Экспорт
	
	           
		  	    адресВХранилище = ПоместитьВоВременноеХранилище(стрФайл.ДвоичныеДанные,Новый УникальныйИдентификатор);
				
				//Сообщить(имяД+"   адресВХранилище");
				
                ПрисоединенныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(спрСссылка,имяД,"pdf",,,адресВХранилище);
		  
		        УдалитьФайлы(стрФайл.ИмяФайла);
	

КонецПроцедуры


&НаСервере
Процедура УдалитьИзСправочникаФайл(ссылкаНаФайл)  Экспорт

	   
	        об=ссылкаНаФайл.ПолучитьОбъект();
			
			Если об<>Неопределено Тогда
			
				об.Удалить();

			
			КонецЕсли;
			
			
			    			   
			

КонецПроцедуры	


&НаСервере
Процедура ДобавитьОтветГАС(номерЗапроса,стрОтвет,стрСтатус,времяОтвета) Экспорт 

	
	
	
	       МенеджерЗаписи = РегистрыСведений.РегистрСведенийОтветОтГАС.СоздатьМенеджерЗаписи();
	
			МенеджерЗаписи.НомерОбращения = номерЗапроса;
			МенеджерЗаписи.ДатаОтвета =  Дата(времяОтвета);
			
			МенеджерЗаписи.СтатусКомментарий = стрОтвет;
            МенеджерЗаписи.СтатусОтвет=стрСтатус;  
			
			МенеджерЗаписи.Записать();
				
	
			
		данныеСтруктура=Новый Структура;	
			
			
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	РегистрСведенийОтветОтГАС.НомерОбращения КАК НомерОбращения,
				|	РегистрСведенийОтветОтГАС.ДатаОтвета КАК ДатаОтвета,
				|	РегистрСведенийОтветОтГАС.СтатусОтвет КАК СтатусОтвет,
				|	РегистрСведенийОтветОтГАС.СтатусКомментарий КАК СтатусКомментарий
				|ИЗ
				|	РегистрСведений.РегистрСведенийОтветОтГАС КАК РегистрСведенийОтветОтГАС
				|ГДЕ
				|	РегистрСведенийОтветОтГАС.НомерОбращения = &НомерОбращения
				|
				|УПОРЯДОЧИТЬ ПО
				|	ДатаОтвета УБЫВ";
			
			Запрос.УстановитьПараметр("НомерОбращения", номерЗапроса);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Если Выборка.Количество()>0 Тогда
			
				 Пока Выборка.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
					
					данныеСтруктура.Вставить("номерЗапроса",Выборка.НомерОбращения);
					
					данныеСтруктура.Вставить("СтатусОбращения",Выборка.СтатусОтвет);
					
					данныеСтруктура.Вставить("СтатусКомментарий",Выборка.СтатусКомментарий);
				
				
			    КонецЦикла;

				
				
				 обСсылка=Справочники.ОбращенияВГАС.НайтиПоНаименованию(данныеСтруктура.номерЗапроса,Истина);
				  
				  
				  Если  ЗначениеЗаполнено(обСсылка) Тогда           
				      
				    об=обСсылка.ПолучитьОбъект(); 
				      
				    об.СтатусОбращения=данныеСтруктура.СтатусОбращения;  
				    
				    об.СтатусКомментарий=данныеСтруктура.СтатусКомментарий;
				    
				    об.Записать();
				    
				  КонецЕсли;

	

				
				
				
			
			КонецЕсли;
			
						
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 		
			
	
	
	  //обСсылка=Справочники.ОбращенияВГАС.НайтиПоНаименованию(номерЗапроса,Истина);
	  //
	  //
	  //Если  ЗначениеЗаполнено(обСсылка) Тогда           
	  //    
	  //  об=обСсылка.ПолучитьОбъект(); 
	  //    
	  //  об.СтатусОбращения=стрСтатус;  
	  //  
	  //  об.СтатусКомментарий=стрОтвет;
	  //  
	  //  об.Записать();
	  //  
	  //КонецЕсли;

	
	
	

КонецПроцедуры


