&НаКлиенте
Процедура ПрочитатьФайл()
	ОбъектЭксель = ПолучитьCOMОбъект(ФайлЗагрузки); 
	ТекущаяСтрока = 1;
	//спрДолжники = Справочники.Должники;
	//спрДоговора = Справочники.Договоры;
	ПустыхСтрок = 0;
	Пока ПустыхСтрок < 5 Цикл
		ТекущаяСтрока = ТекущаяСтрока + 1;
		Если ПоПаспорту Тогда
			ТекСтр = СокрЛП(Строка(ОбъектЭксель.Sheets(1).Cells(ТекущаяСтрока, 2).Value));
			Если ЗначениеЗаполнено(ТекСтр) = Ложь Тогда
				ПустыхСтрок = ПустыхСтрок + 1;
				Продолжить;
			КонецЕсли;
			Код = "";
			НомСтр = 0;
			Пока НомСтр <= 50 Цикл
				НомСтр = НомСтр + 1;
				ТекБуква = СокрЛП(Лев(ТекСтр,1));
				Если ПустаяСтрока(ТекСтр) Тогда
					ТекСтр = СокрЛП(Сред(ТекСтр,2));
					Продолжить;
				Иначе
					Попытка
						ТекБуква = Число(ТекБуква);
						Код = СокрЛП(Код)+Строка(ТекБуква);
					Исключение
						ТекСтр = СокрЛП(Сред(ТекСтр,2));
						Продолжить;
					КонецПопытки;
				КонецЕсли;	
				ТекСтр = СокрЛП(Сред(ТекСтр,2));
				Если СтрДлина(Код) >= 10 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			ТекДолжник = НайтиДолжникаПоПаспорту(Код);
			Если ЗначениеЗаполнено(ТекДолжник) = Ложь Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден должник с № паспорта " + Код);
			Иначе
				НовСтр = Должники.Добавить();
				НовСтр.Должник = ТекДолжник;
			КонецЕсли;
		Иначе
			НомерДоговора = СокрЛП(Строка(ОбъектЭксель.Sheets(1).Cells(ТекущаяСтрока, 1).Value));
			Если ЗначениеЗаполнено(НомерДоговора) = Ложь Тогда
				ПустыхСтрок = ПустыхСтрок + 1;
				Продолжить;
			КонецЕсли;
			НайденныйДоговор = НайтиДоговорПоНомеру(НомерДоговора);
			Если ЗначениеЗаполнено(НайденныйДоговор) = Ложь Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден должник с № договора " + НомерДоговора);
			Иначе
				НовСтр = Должники.Добавить();
				
				НовСтр.Договор = НайденныйДоговор;
				
				ТекДолжник = НайтиВладельца(НовСтр.Договор);
				
				
				НовСтр.Должник = ТекДолжник;
			КонецЕсли;
	КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры


&НаСервереБезКонтекста
Функция НайтиВладельца(стр)

		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.Владелец.Ссылка КАК ВладелецСсылка
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.Ссылка = &НомерДоговора";
	
	Запрос.УстановитьПараметр("НомерДоговора", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	 владел=ВыборкаДетальныеЗаписи.ВладелецСсылка;
	
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//	 владел=ВыборкаДетальныеЗаписи.ВладелецСсылка;
	//КонецЦикла;
	//
	//

	Возврат владел;
	  
КонецФункции // ()




&НаСервереБезКонтекста
Функция НайтиДолжникаПоПаспорту(Знач Код)
	Возврат Справочники.Должники.НайтиПоРеквизиту("НомерПаспорта",Код);
КонецФункции

&НаСервереБезКонтекста
Функция НайтиДоговорПоНомеру(Знач НомерДоговора)
	Возврат Справочники.Договоры.НайтиПоРеквизиту("НомерДоговора", НомерДоговора);
КонецФункции // ()

&НаКлиенте
Процедура Загрузить(Команда)
	Если ЗначениеЗаполнено(ФайлЗагрузки) = Ложь Тогда
		ПоказатьПредупреждение(, "Не выбран файл для загрузки. Отмена.")
	Иначе
		ПрочитатьФайл();
		Сообщить("Обработан файл " + ФайлЗагрузки);
		Элементы.ПеренестиИЗакрыть.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= ФайлЗагрузки; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		ФайлЗагрузки = ВыбранныеФайлы[0];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИЗакрыть(Команда)
	Закрыть(Должники);
КонецПроцедуры
