
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДолжника(Команда)
	
	
	   //  удалить у выбранного должника который есть в базе
	   Если ДаУдалитьДопДанные Тогда

		   
		         
		     
                  Для каждого стр  Из ТЧ Цикл

					  
					    должникДанныеСтруктура=Новый Структура;
					 Для каждого сппол  Из СписокПолейДолжник  Цикл
						 
						 должникДанныеСтруктура.Вставить(сппол.Значение,стр[сппол.Значение]);
					 
					 КонецЦикла;
					 
					 
					  новыйДолжник= ПолучитьСсылкуДолжника(должникДанныеСтруктура);

					  
		   
                         адресаДанныеСтруктура=Новый Структура;
		    			 Для каждого спполАдр  Из СписокПолейАдреса  Цикл
		    				 
		    				 адресМассив=Новый Массив(3);
		    				 адресМассив[0]=спполАдр.Значение[0];  // реквизит
		    				 адресМассив[1]=стр[спполАдр.Представление];  // значение
		    				 адресМассив[2]=спполАдр.Значение[2];   // тип
		    				 
		    				 
		    			    адресаДанныеСтруктура.Вставить(спполАдр.Представление,адресМассив); 
		    				//стр[сппол.Значение[1]] 
		    				 
		    			 КонецЦикла;	 
		   		    			
		   
						 УдалитьЗадвойАдресов(Должник,адресаДанныеСтруктура);

						   ЗаписатьАдреса(новыйДолжник, адресаДанныеСтруктура);

						 
						 
						 телефоныДанныеСтруктура=Новый Структура;
					    			 
			    			  Для каждого спполТел  Из СписокПолейТелефоны  Цикл
			                     телефоныМассив=Новый Массив(3);
			    				 телефоныМассив[0]=спполТел.Значение[0];  // реквизит
			    				 телефоныМассив[1]=стр[спполТел.Представление];  // значение
			    				 телефоныМассив[2]=спполТел.Значение[2];   // тип
			    				 
			                     телефоныДанныеСтруктура.Вставить(спполТел.Представление,телефоныМассив);          
			    				 
			    				  
							 КонецЦикла;
							 
							  УдалитьЗадвойТелефоны(Должник,телефоныДанныеСтруктура);

							  ЗаписатьТелефоны(новыйДолжник, телефоныДанныеСтруктура);
													  
						   дополнительныеДанныеСтруктура=Новый Структура;
					    			  
			    			  Для каждого спполДопДанные  Из СписокПолейДопДанные  Цикл
			    				    допДанныеМассив=Новый Массив(3);
			    				    допДанныеМассив[0]=спполДопДанные.Значение[0];  // реквизит
			    				    допДанныеМассив[1]=стр[спполДопДанные.Представление];  // значение
			    				    допДанныеМассив[2]=спполДопДанные.Значение[2];   // тип

			    					дополнительныеДанныеСтруктура.Вставить(спполДопДанные.Представление, допДанныеМассив);
			    			  	  
			    			  КонецЦикла;

							  
							  УдалитьЗадвойДополнительныеДанные(Должник,дополнительныеДанныеСтруктура);
					    			   
	                 		 ЗаписатьДополнительныеДанные(новыйДолжник,дополнительныеДанныеСтруктура);
 
							  
							  
					   
			  КонецЦикла;
					   
		
	   Иначе	               
		   
		   
		        
		   
		   
		   Для каждого стр  Из ТЧ Цикл
			   
			         должникДанныеСтруктура=Новый Структура;
					 Для каждого сппол  Из СписокПолейДолжник  Цикл
						 
						 должникДанныеСтруктура.Вставить(сппол.Значение,стр[сппол.Значение]);
					 
					 КонецЦикла;
					 
					 
					  новыйДолжник= ПолучитьСсылкуДолжника(должникДанныеСтруктура);

		   
                         адресаДанныеСтруктура=Новый Структура;
		    			 Для каждого спполАдр  Из СписокПолейАдреса  Цикл
		    				 
		    				 адресМассив=Новый Массив(3);
		    				 адресМассив[0]=спполАдр.Значение[0];  // реквизит
		    				 адресМассив[1]=стр[спполАдр.Представление];  // значение
		    				 адресМассив[2]=спполАдр.Значение[2];   // тип
		    				 
		    				 
		    			    адресаДанныеСтруктура.Вставить(спполАдр.Представление,адресМассив); 
		    				//стр[сппол.Значение[1]] 
		    				 
		    			 КонецЦикла;	 
		   		    			
		                 ЗаписатьАдреса(новыйДолжник, адресаДанныеСтруктура);

						 //УдалитьЗадвойАдресов(Должник,адресаДанныеСтруктура);

						 
						 телефоныДанныеСтруктура=Новый Структура;
					    			 
			    			  Для каждого спполТел  Из СписокПолейТелефоны  Цикл
			                     телефоныМассив=Новый Массив(3);
			    				 телефоныМассив[0]=спполТел.Значение[0];  // реквизит
			    				 телефоныМассив[1]=стр[спполТел.Представление];  // значение
			    				 телефоныМассив[2]=спполТел.Значение[2];   // тип
			    				 
			                     телефоныДанныеСтруктура.Вставить(спполТел.Представление,телефоныМассив);          
			    				 
			    				  
							 КонецЦикла;
							 
							  //УдалитьЗадвойТелефоны(Должник,телефоныДанныеСтруктура);

						 	ЗаписатьТелефоны(новыйДолжник, телефоныДанныеСтруктура);  
							  
													  
						   дополнительныеДанныеСтруктура=Новый Структура;
					    			  
			    			  Для каждого спполДопДанные  Из СписокПолейДопДанные  Цикл
			    				    допДанныеМассив=Новый Массив(3);
			    				    допДанныеМассив[0]=спполДопДанные.Значение[0];  // реквизит
			    				    допДанныеМассив[1]=стр[спполДопДанные.Представление];  // значение
			    				    допДанныеМассив[2]=спполДопДанные.Значение[2];   // тип

			    					дополнительныеДанныеСтруктура.Вставить(спполДопДанные.Представление, допДанныеМассив);
			    			  	  
			    			  КонецЦикла;

							  
							 ЗаписатьДополнительныеДанные(новыйДолжник,дополнительныеДанныеСтруктура);
 
							  //УдалитьЗадвойДополнительныеДанные(Должник,дополнительныеДанныеСтруктура);
					    			   
	                 		  
							  
							  
					   
			  КонецЦикла;
					   

	   	
	   
	   КонецЕсли;
	
	
	    Сообщить("Ок");

	
	
КонецПроцедуры


&НаСервере
Функция  ЗаписатьДополнительныеДанные(долж,допДанСтрукт)

	     Для каждого стр  Из допДанСтрукт Цикл

			     стТип=Справочники.ДополнительныеРеквизиты.НайтиПоНаименованию(стр.Значение[0]);
				 
				 допДанныеТемп="";
				 
							
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ДополнительныеДанные.Ссылка КАК Ссылка,
							|	ДополнительныеДанные.Наименование КАК Наименование
							|ИЗ
							|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
							|ГДЕ
							|	ДополнительныеДанные.Владелец.Ссылка = &Владелец
							|	И ДополнительныеДанные.Реквизит = &Реквизит";
						
						
							Запрос.УстановитьПараметр("Владелец", долж.Ссылка);
							Запрос.УстановитьПараметр("Реквизит", стТип);
									
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							   допДанныеТемп=ВыборкаДетальныеЗаписи.Наименование;
							
						КонецЦикла;
						
						
						Если допДанныеТемп="" Тогда
							
							Если стр.Значение[1]<>"---" Тогда
								
								спрДопДанные=Справочники.ДополнительныеДанные.СоздатьЭлемент();
								
								спрДопДанные.Наименование=стр.Значение[1];
								
								спрДопДанные.Владелец=долж.Ссылка;
								
								спрДопДанные.Реквизит=стТип;
								
								
								спрДопДанные.Записать();


							
							КонецЕсли;	
								
														
							
							
						
						КонецЕсли;
						
									 
	
	     КонецЦикла; 

	

КонецФункции // ()



&НаСервере
Функция ЗаписатьТелефоны(долж,телСтрукт)

	 Для каждого стр  Из телСтрукт Цикл
	 
		стТип=Справочники.ТипыТелефонов.НайтиПоНаименованию(стр.Значение[2]); 
		 
		телТемп="";
		
		
				       	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Телефоны.Номер КАК Номер,
				|	Телефоны.Тип КАК Тип
				|ИЗ
				|	Справочник.Телефоны КАК Телефоны
				|ГДЕ
				|	Телефоны.Владелец.Ссылка = &Владелец
				|	И Телефоны.Тип = &Тип";
			
			Запрос.УстановитьПараметр("Владелец", долж.Ссылка);
			Запрос.УстановитьПараметр("Тип", стТип);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				
				телТемп=ВыборкаДетальныеЗаписи.Номер;
				
				
			КонецЦикла;
			
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				 
			Если телТемп="" ИЛИ телТемп<>стр.Значение[1]  Тогда
				
				 Если стр.Значение[1]<>"---" Тогда
				 
					    спрТелофоны=Справочники.Телефоны.СоздатьЭлемент();
  				  	спрТелофоны.Номер=стр.Значение[1];
					спрТелофоны.Тип=стТип;
					спрТелофоны.Владелец=долж.Ссылка;
					спрТелофоны.Записать();
					

					 
					 
				 
				 КонецЕсли;
				
								
			КонецЕсли;
			
		 
		 
		 
	 
	 КонецЦикла; 
	
	
	

КонецФункции // ()


   
   

&НаСервере
Функция ЗаписатьАдреса(долж, адресСтрукт)

	
   Для каждого стр  Из адресСтрукт Цикл
   
	      	
	  стТип=Справочники.ТипыАдресов.НайтиПоНаименованию(стр.Значение[2]);
	  
	  адресТемп="";
	  
	  
						
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Адреса.Адрес КАК Адрес,
				|	Адреса.Тип КАК Тип
				|ИЗ
				|	Справочник.Адреса КАК Адреса
				|ГДЕ
				|	Адреса.Владелец.Ссылка = &Владелец
				|	И Адреса.Тип = &Тип";
			
			Запрос.УстановитьПараметр("Владелец", долж.Ссылка);
			Запрос.УстановитьПараметр("Тип", стТип);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				
				адресТемп=Выборка.Адрес;
				
			КонецЦикла;
			
			
			Если  адресТемп="" ИЛИ адресТемп<>стр.Значение[1]  Тогда
				
				//   запишу в справочник адреса
				
				   Если стр.Значение[1]<>"---" Тогда
			            спрАдрес=Справочники.Адреса.СоздатьЭлемент();
						спрАдрес.Адрес=стр.Значение[1];
						спрАдрес.Тип=стТип;
						спрАдрес.Владелец=долж.Ссылка;
						спрАдрес.Записать();
				   
				   КонецЕсли;
				
										
			КонецЕсли;
			
			
			
			
   
   КонецЦикла;	
	

	
	

КонецФункции // ()



&НаСервере
Функция ПолучитьСсылкуДолжника(должникДанныеСтруктура)

	    ссылкаДолжник=Неопределено;
	    Разделитель = " ";
				 Строки=СтрЗаменить(должникДанныеСтруктура["Фамилия"],Разделитель,Символы.ПС);
				 фиоМассив=Новый Массив;
				 
				 индексМассива=СтрЧислоСтрок(Строки);
				 
				 Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл

					    фиоМассив.Добавить(СтрПолучитьСтроку(Строки,Индекс));
				 
				КонецЦикла;
				
				паспортСтрока = СтрЗаменить(должникДанныеСтруктура["НомерПаспорта"]," " , "");  
	            НачатьТранзакцию();
			
				 спрДолжник=Справочники.Должники.СоздатьЭлемент();
				
				 
				   Для  каждого полеД  Из  СписокПолейДолжник Цикл
						    			  
						    			  
						    			  Если полеД.Значение="Регион" Тогда
						    			  
						    				//  вытащу регион 
						    				 регСсылка= РегионПоСтроке(должникДанныеСтруктура[полеД.Значение]);
						    				 
						    				 спрДолжник[полеД.Значение]=регСсылка;
						    				
						    				  
						    			  ИначеЕсли полеД.Значение="ДатаРождения"  Тогда 
						    				  
											   Если СтроковыеФункцииКлиентСервер.СтрокаВДату(должникДанныеСтруктура["ДатаРождения"])= Дата('0001.01.01') Тогда
												   
												      стркДата=Лев(должникДанныеСтруктура["ДатаРождения"],10);
													  спрДолжник[полеД.Значение]=СтроковыеФункцииКлиентСервер.СтрокаВДату( стркДата);  
												   
											   Иначе
												   
											       спрДолжник[полеД.Значение]=СтроковыеФункцииКлиентСервер.СтрокаВДату(должникДанныеСтруктура["ДатаРождения"]);
											   КонецЕсли;
											  
						    			  	  
						    				   
						    			   ИначеЕсли полеД.Значение="НомерПаспорта"  Тогда 
						    				   
						    				   спрДолжник[полеД.Значение]=паспортСтрока;
						    				   
						    				   
						    			  Иначе	   

						    			       спрДолжник[полеД.Значение]=должникДанныеСтруктура[полеД.Значение];
						    			  КонецЕсли;
						    			  
						КонецЦикла;
									  
						
						 //индексМассива
										  
											  
											  Если индексМассива=3 Тогда
											       спрДолжник.Фамилия= фиоМассив[0];
											  	   спрДолжник.Имя= фиоМассив[1];
											       спрДолжник.Отчество= фиоМассив[2];
											  КонецЕсли;
											  
											    Если индексМассива=2 Тогда
											       спрДолжник.Фамилия= фиоМассив[0];
											  	   спрДолжник.Имя= фиоМассив[1];
											       
											  КонецЕсли;
									  
						    		  
					   
						 спрДолжник.Записать();
									   
									   
			 			 ссылкаДолжник=спрДолжник.Ссылка;

			  
				 
				 
	     ЗафиксироватьТранзакцию();			 
				 
				
		 Возврат  ссылкаДолжник;


КонецФункции // ()
  

&НаСервере
Процедура УдалитьЗадвойДополнительныеДанные(долж,дополнительныеДанныеСтруктура)

	
	         ТЧДопДанные.Очистить();
	
	          Для каждого стр Из дополнительныеДанныеСтруктура Цикл
				  
				    Если стр.Значение[1]<>"---" Тогда
						
					          стТип=Справочники.ДополнительныеРеквизиты.НайтиПоНаименованию(стр.Значение[0]);
				 
						       спрДопДанные= ТЧДопДанные.Добавить(); 
						
								спрДопДанные.СтрокаНаименование=стр.Значение[1];
								
								спрДопДанные.Реквизит=стТип;
								
												
					КонецЕсли;	

			  	
			  
		     КонецЦикла;   
			 
			 
			 
				
				Для каждого стрДопДан Из ТЧДопДанные Цикл
					
					     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ДополнительныеДанные.Ссылка КАК Ссылка,
							|	ДополнительныеДанные.Наименование КАК Наименование
							|ИЗ
							|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
							|ГДЕ
							|	ДополнительныеДанные.Владелец = &Владелец
							|	И ДополнительныеДанные.Реквизит = &Реквизит";
						
						Запрос.УстановитьПараметр("Владелец", долж);
						Запрос.УстановитьПараметр("Реквизит", стрДопДан.Реквизит);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							
							
							 Если ВыборкаДетальныеЗаписи.Наименование=стрДопДан.СтрокаНаименование  Тогда
							 
							 	        спрДопДан=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
							  
										спрДопДан.Удалить();

							 
							 КонецЕсли;
							
							 							  
							
							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

										
										
				
				КонецЦикла;
				
				

КонецПроцедуры




&НаСервере
Процедура УдалитьЗадвойТелефоны(долж,телефоныДанныеСтруктура)
	
	              ТЧТелефон.Очистить();
				  
				  Для каждого стр Из телефоныДанныеСтруктура Цикл
					  
					  Если стр.Значение[1]<>"---" Тогда
					 
					     	  стТип=Справочники.ТипыТелефонов.НайтиПоНаименованию(стр.Значение[2]);
				
						  
								    спрТелефон=ТЧТелефон.Добавить();
									спрТелефон.Номер=стр.Значение[1];
									спрТелефон.Тип=стТип;
							
					   КонецЕсли;

				  
				  КонецЦикла;
				  
				  
				  
				  Для каждого стрТелефон Из ТЧТелефон  Цикл
				  
					           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	Телефоны.Ссылка КАК Ссылка,
								|	Телефоны.Номер КАК Номер
								|ИЗ
								|	Справочник.Телефоны КАК Телефоны
								|ГДЕ
								|	Телефоны.Владелец = &Владелец
								|	И Телефоны.Тип = &Тип";
							
							Запрос.УстановитьПараметр("Владелец", долж);
							Запрос.УстановитьПараметр("Тип", стрТелефон.Тип);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								
								 Если ВыборкаДетальныеЗаписи.Номер=стрТелефон.Номер Тогда
								 
									   спрТелефоны=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
									   спрТелефоны.Удалить();
									   
									 
								 
								 КонецЕсли;
								
								
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

											  
											  
				  
				  КонецЦикла;
				  
	
	
	

КонецПроцедуры







&НаСервере
Процедура УдалитьЗадвойАдресов(должник,структАдрес)

	             ТЧАдрес.Очистить(); 
	
	             Для каждого стр  Из структАдрес Цикл
   
	      	
					  
						
							   Если стр.Значение[1]<>"---" Тогда
								   
								   стТип=Справочники.ТипыАдресов.НайтиПоНаименованию(стр.Значение[2]);
				
								   
								    спрАдрес=ТЧАдрес.Добавить();
									спрАдрес.Адрес=стр.Значение[1];
									спрАдрес.Тип=стТип;
							
							   КонецЕсли;
							
						
			   
			    КонецЦикла;	
	

				
			  //
			  Для каждого стрАдрес Из ТЧАдрес Цикл
			  
				        	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	Адреса.Адрес КАК Адрес,
							|	Адреса.Ссылка КАК Ссылка
							|ИЗ
							|	Справочник.Адреса КАК Адреса
							|ГДЕ
							|	Адреса.Владелец = &Владелец
							|	И Адреса.Тип = &Тип";
						
						Запрос.УстановитьПараметр("Владелец", должник);
						Запрос.УстановитьПараметр("Тип", стрАдрес.Тип);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							
							 Если ВыборкаДетальныеЗаписи.Адрес=стрАдрес.Адрес  Тогда
							 
								  спрАдрес=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
								   
								  
								  спрАдрес.Удалить();
								  
							 
							 КонецЕсли;
							
							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				  
				  
				  
			  
			  КонецЦикла;
			  
	
	
	

КонецПроцедуры

   




   
   

&НаКлиенте
Процедура ОбработатьФайл(Команда)
	//  Пройду по шаблону
		
		 стрДолж=ПолучитьКолонкиДолжник(ИмяШаблона);

		 трДоговор=ПолучитьКолонкиДоговор(ИмяШаблона);

		 трТелефоны=ПолучитьКолонкиТелефоны(ИмяШаблона);
		 
		 трАдреса=ПолучитьКолонкиАдреса(ИмяШаблона);  
		 
		 трРеестр=ПолучитьКолонкиРеестр(ИмяШаблона);
		 
		 трДополнительныеКол=ПолучитьКолонкиДополнительные(ИмяШаблона);
		 
		 трДоговорЦессии=ПолучитьКолонкиДоговорЦессии(ИмяШаблона);
		 
		 трПоручители= ПолучитьКолонкиПоручители(ИмяШаблона);
		 
			 
		 загодин=Ложь;
		 
		 
		  фамилия= стрДолж["Фамилия"];
	  
		  имя=стрДолж["Имя"];
		  отчество=стрДолж["Отчество"];
		  
		  
		  Если фамилия=имя Тогда
		      //Значит  один заголовок для Должника
		      должникЗаг=фамилия;
		      загодин=Истина;
		  Иначе
		      
			   //должникЗаг= стрДолж["Фамилия"]+" "+стрДолж["Имя"]+" "+ стрДолж["Отчество"];
		  КонецЕсли;	  
		    
		  
		  массивЗаг=Новый Массив;
		  
            Для каждого стр Из стрДолж Цикл
	  
		  Если стр.Ключ<>"Имя" И стр.Ключ<>"Отчество" Тогда
			  
			   массивЗаг.Добавить(стр);
			   
			   СписокПолейДолжник.Добавить(стр.Ключ);
		  	
		  
		  КонецЕсли;
	  
	  КонецЦикла;
	  
	  
	  Для каждого стр Из трДоговор Цикл
	  
			  
			   массивЗаг.Добавить(стр);
		  	   СписокПолейДоговор.Добавить(стр.Ключ);
		  
	  КонецЦикла;

	  
	  Для каждого стр Из трТелефоны Цикл
		  
		  массивЗаг.Добавить(стр);
		  
		  СписокПолейТелефоны.Добавить(стр.Значение,стр.Ключ);

		  
	  КонецЦикла;
	  

	   Для каждого стр Из трАдреса Цикл
		  
		  массивЗаг.Добавить(стр);
		  
		  СписокПолейАдреса.Добавить(стр.Значение,стр.Ключ);
		  
		  
		  
	  КонецЦикла;
	  

	   Для каждого стр Из  трРеестр Цикл
		  
		  массивЗаг.Добавить(стр);
		  СписокПолейРеестр.Добавить(стр.Ключ);

		  
		  
	  КонецЦикла;
	  
	  Если Цессия=Ложь  Тогда
		  
		  
		   Для каждого стр Из  трДоговорЦессии Цикл
		  
						
		  	    массивЗаг.Добавить(стр);
			    СписокПолейДоговорЦессии.Добавить(стр.Ключ);

		  
		  
	       КонецЦикла;
	  
		    
		  
		  
	  КонецЕсли;
	  
	  
	  
	  
	  
	   Для каждого стр Из  трДополнительныеКол Цикл
		  
					  массивЗаг.Добавить(стр);
					  
					  СписокПолейДопДанные.Добавить(стр.Значение,стр.Ключ);
		  
		  
	  КонецЦикла;
	  
	  
	  
	   Для каждого стр Из  трПоручители Цикл
		  
					  массивЗаг.Добавить(стр);
					  
					  СписокПолейПоручители.Добавить(стр.Ключ);
		  
		  
	  КонецЦикла;
	  

	  
	  
       // запишу врем файл и передам его  обработчику
	  
     	   Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		   имяэксел=ИмяФайла;
  
		    имяфайлатемп=дирМоиД+"\должРеестр.txt";
			   
		    имяфайлатемпответ=дирМоиД+"\должРеестр_out.txt";

		    программаОбр=дирМоиД+"\ExcelParse.exe";

		  
			
			   
		   ФайлТемп = Новый ЗаписьТекста(имяфайлатемп);
		   
		   Для каждого масстр Из массивЗаг  Цикл
			   
			   
				 //ФайлТемп.ЗаписатьСтроку(масстр.Значение);   
				 
				  Если ТипЗнч(масстр.Значение) = Тип("Массив")  Тогда
				  
				  	 ФайлТемп.ЗаписатьСтроку(масстр.Значение[1]); 
				  
				  Иначе
				  
				  	 ФайлТемп.ЗаписатьСтроку(масстр.Значение);
				  

		  
		            КонецЕсли;
			 
			 
		   
		   КонецЦикла;
		   
		   ФайлТемп.ЗаписатьСтроку(ИмяФайла);
		   
		   ФайлТемп.Закрыть();

		   
		   
			 программаОбр=программаОбр+" "+"10";
			 
	    	 
			 Shell.Run(программаОбр,0, 1);

			 
			 
			 
			 
			  // код 240 символа
			 
			 //  обработаем вернувшийся файл     долждопд_out.txt
			 
			 

 			   мСтрокФайла = Новый Массив();
			   
			   ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
			   Если ВыбранныйФайл.Существует() Тогда
				   
				   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
												
					Строка = ПрочитанныйТекст.ПрочитатьСтроку();
												//а не был ли файл пуст?
												
					Если Строка <> Неопределено Тогда

						 Если Лев(Строка, 4)<>"---ð"  Тогда
						 
						 	   мСтрокФайла.Добавить(Строка);
						 
						 КонецЕсли; 
						 //---ð---ð
						 
						 
						
					     
					КонецЕсли;
					

					Пока Строка <> Неопределено Цикл
                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					   Если Строка <> Неопределено Тогда
						      Если Лев(Строка, 4)<>"---ð"  Тогда
						 
						 	   мСтрокФайла.Добавить(Строка);
						 
						    КонецЕсли; 
						 
						   
					        
					     КонецЕсли;
					КонецЦикла;

				   
				   
			   КонецЕсли;
		 
			   
			   
	  
	          ПостроитьТаблицу(массивЗаг);
			  
			  //ПостроитьТаблицуТемп(массивЗаг);
     
			 
			   должДанныет=Новый Структура;
			  
			  
			  Для каждого стрд  Из мСтрокФайла Цикл
				  
				     должДанныет=РазбитьСтроку(стрд,массивЗаг);
				   
				   	Запись=ТЧ.Добавить();
				     Для каждого мстр Из должДанныет Цикл
						 
						стрк=мстр.Ключ; 
					
						
						Запись[Строка(стрк)]=мстр.Значение; 	
					 
					 КонецЦикла;
					 
					 
				  
				  
			  КонецЦикла;

	
	

			 
			 
						 

	
	
КонецПроцедуры



		 
		 
//&НаСервере
//Функция ЗаписатьАдреса(адресСтрукт)

//	
//   Для каждого стр  Из адресСтрукт Цикл
//   
//	      	
//	  стТип=Справочники.ТипыАдресов.НайтиПоНаименованию(стр.Значение[2]);
//	  
//	  адресТемп="";
//	  
//	  
//						
//			
//				   Если стр.Значение[1]<>"---" Тогда
//			            спрАдрес=Справочники.Адреса.СоздатьЭлемент();
//						спрАдрес.Адрес=стр.Значение[1];
//						спрАдрес.Тип=стТип;
//				
//				   КонецЕсли;
//				
//										
//			
//			
//			
//			
//			
//   
//   КонецЦикла;	
//	

//	
//	

//КонецФункции // ()
		 
		 




Функция РазбитьСтроку(стрк,массивзаг)

    должДанные=Новый Структура;

	Попытка
	
		    Разделитель = Символ(240);
		    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
		    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
				
				
				  Если ТипЗнч(массивзаг[Индекс-1]) = Тип("Массив")  Тогда
					  
					  темпстр=массивзаг[Индекс-1].Значение[1];
					  
					  //ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение[1]),150);
				  
				  Иначе
				  
				  	 темпстр=массивзаг[Индекс-1].Ключ;
				  

				  
				  КонецЕсли;
				  
				 	   
						
				
				
				    темпстр=массивзаг[Индекс-1].Ключ;
						
				
				должДанные.Вставить(темпстр,СтрПолучитьСтроку(Строки, Индекс));
				
		    КонецЦикла;
			

	
    Исключение
		
		Сообщить(стрк);
		
	
	КонецПопытки;
	
		
	
	Возврат должДанные; 	

КонецФункции // ()

		 

&НаСервере
Функция ПостроитьТаблицу(СтрМ)

	
	КС = Новый КвалификаторыСтроки(250);
    Массив = Новый Массив;
    Массив.Добавить(Тип("Строка"));
    ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);

	
	 ТЗ = РеквизитФормыВЗначение("ТЧ");
	
	 //ТЗ = Новый ТаблицаЗначений;
	 
	 
	 //инд=0;
	 
     Для каждого мас Из СтрМ Цикл
		  
		  //инд=инд+1;
		  //строк=Строка(инд);
		  //
		  
	
		  Если ТипЗнч(мас.Значение) = Тип("Массив")  Тогда
		  
		  	  ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение[1]),250);
		  
		  Иначе
		  
		  	 ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение),250);
		  

		  
		  КонецЕсли;
		  
		 	   
					 
	
		 
     	
     
     КонецЦикла;
     
       
     ТЗ.Колонки.Добавить("ЗаписыватьВ",Новый ОписаниеТипов("Число"),"Записавать",2);
     
     
     
     //Опишем массив реквизитов
    МассивРеквизитов = Новый Массив;
    МассивТипаВыбора = Новый Массив;
    МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
    ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
    
    //Добавим в массив реквизитов таблицу значений
    МассивРеквизитов.Добавить(Новый РеквизитФормы("ДанныеФайла", ОписаниеТипаВыбора));
  
	//Добавим в массив реквизитов колонки таблицы
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТЧ"));
		
	КонецЦикла;
  
    ИзменитьРеквизиты(МассивРеквизитов);
    
     //Добавим Таблицу на форму
    ТаблицаДанныхФайла             = Элементы.Добавить("ТаблицаДанныхФайла", Тип("ТаблицаФормы"),ЭтаФорма.Элементы.ГруппаОбработка);
    ТаблицаДанныхФайла.ПутьКДанным = "ТЧ";
    ТаблицаДанныхФайла.Отображение = ОтображениеТаблицы.Список;
	ТаблицаДанныхФайла.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
	
	
	//ТаблицаДанныхФайла.Родитель=ЭтаФорма.Элементы.ГруппаОбработка;
	
    //Добавим колонки
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаДанныхФайла);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "ТЧ." + Колонка.Имя;
		НовыйЭлемент.Заголовок=Колонка.Заголовок;
		НовыйЭлемент.ТолькоПросмотр = Истина;
		
    КонецЦикла;  
    ЗначениеВРеквизитФормы(ТЗ,"ТЧ");
    
	
	
	
	
      	 
	
	
КонецФункции // ()


&НаСервере
Функция ПолучитьКолонкиДолжник(стр)

		
	//    Получить должника Колонку
	
	должФИО=Новый Структура;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДолжники.Реквизит КАК Реквизит,
		|	ШаблоныФайловДолжники.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Должники КАК ШаблоныФайловДолжники
		|ГДЕ
		|	ШаблоныФайловДолжники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	    должФИО.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
	КонецЦикла;
	
	Возврат должФИО;
	

КонецФункции // ()

&НаСервере
Функция ПолучитьКолонкиДоговор(стр)

	должДоговор=Новый Структура;

	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДоговоры.Реквизит КАК Реквизит,
		|	ШаблоныФайловДоговоры.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Договоры КАК ШаблоныФайловДоговоры
		|ГДЕ
		|	ШаблоныФайловДоговоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		   должДоговор.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	Возврат должДоговор;
	
	
КонецФункции // ()


&НаСервере
Функция ПолучитьКолонкиТелефоны(стр)

	должТелефоны=Новый Структура;
	
	
	
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловТелефоны.Реквизит КАК Реквизит,
		|	ШаблоныФайловТелефоны.Заголовки КАК Заголовки,
		|	ШаблоныФайловТелефоны.Тип КАК Тип
		|ИЗ
		|	Справочник.ШаблоныФайлов.Телефоны КАК ШаблоныФайловТелефоны
		|ГДЕ
		|	ШаблоныФайловТелефоны.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	инд=0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		  массивТелефон=Новый Массив(3);
		  массивТелефон[0]=ВыборкаДетальныеЗаписи.Реквизит;
		  массивТелефон[1]=ВыборкаДетальныеЗаписи.Заголовки;
		  массивТелефон[2]=ВыборкаДетальныеЗаписи.Тип;
		  
		  ключСтр=ВыборкаДетальныеЗаписи.Реквизит+инд;
		  
		  должТелефоны.Вставить(ключСтр,массивТелефон);
		  
		  инд=инд+1;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


     Возврат должТелефоны;	
	

КонецФункции // ()



&НаСервере
Функция ПолучитьКолонкиАдреса(стр)
	
	     должАдреса=Новый Структура;

		  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловАдреса.Реквизит КАК Реквизит,
		|	ШаблоныФайловАдреса.Заголовки КАК Заголовки,
		|	ШаблоныФайловАдреса.Тип КАК Тип
		|ИЗ
		|	Справочник.ШаблоныФайлов.Адреса КАК ШаблоныФайловАдреса
		|ГДЕ
		|	ШаблоныФайловАдреса.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	инд=0;

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		  массивАдрес=Новый Массив(3);
		  массивАдрес[0]=ВыборкаДетальныеЗаписи.Реквизит;
		  массивАдрес[1]=ВыборкаДетальныеЗаписи.Заголовки;
		  массивАдрес[2]=ВыборкаДетальныеЗаписи.Тип;
		  
		  ключСтр=ВыборкаДетальныеЗаписи.Реквизит+инд;
		  
		  должАдреса.Вставить(ключСтр,массивАдрес);
		  
		  инд=инд+1;

		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат должАдреса;	 
	
КонецФункции // ()


&НаСервере
Функция ПолучитьКолонкиРеестр(стр)
	
	  должРеестр=Новый Структура;

	  
	    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловРеестр.Реквизит КАК Реквизит,
		|	ШаблоныФайловРеестр.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Реестр КАК ШаблоныФайловРеестр
		|ГДЕ
		|	ШаблоныФайловРеестр.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		  должРеестр.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	  Возврат должРеестр;
	
	
КонецФункции // ()

&НаСервере
Функция ПолучитьКолонкиДополнительные(стр)

	    должДополнительные=Новый Структура;
		
		
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДополнительныеКолонки.Реквизит КАК Реквизит,
		|	ШаблоныФайловДополнительныеКолонки.Заголовки КАК Заголовки,
		|	ШаблоныФайловДополнительныеКолонки.Тип КАК Тип
		|ИЗ
		|	Справочник.ШаблоныФайлов.ДополнительныеКолонки КАК ШаблоныФайловДополнительныеКолонки
		|ГДЕ
		|	ШаблоныФайловДополнительныеКолонки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	инд=0;

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
  		  массивДопКол=Новый Массив(3);
		  массивДопКол[0]=ВыборкаДетальныеЗаписи.Реквизит;
		  массивДопКол[1]=ВыборкаДетальныеЗаписи.Заголовки;
		  массивДопКол[2]=ВыборкаДетальныеЗаписи.Тип;
		  
		  ключСтр="ДополнительныеКолонки"+Строка(инд);
		  
		  должДополнительные.Вставить(ключСтр,массивДопКол);
		  
		  инд=инд+1;

		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат должДополнительные;

	
КонецФункции // ()



&НаСервере
Функция ПолучитьКолонкиДоговорЦессии(стр)
	
      должДоговорЦессии=Новый Структура;

	  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДоговорЦессии.Реквизит КАК Реквизит,
		|	ШаблоныФайловДоговорЦессии.Заголовок КАК Заголовок
		|ИЗ
		|	Справочник.ШаблоныФайлов.ДоговорЦессии КАК ШаблоныФайловДоговорЦессии
		|ГДЕ
		|	ШаблоныФайловДоговорЦессии.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		 должДоговорЦессии.Вставить(ВыборкаДетальныеЗаписи.Реквизит+"Справочник",ВыборкаДетальныеЗаписи.Заголовок);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат должДоговорЦессии;
	
	
КонецФункции // ()

	 
&НаСервере
Функция ПолучитьКолонкиПоручители (стр)

	 догПоручители= Новый Структура;
	 
	  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловПоручители.Реквизит КАК Реквизит,
		|	ШаблоныФайловПоручители.Заголовок КАК Заголовок
		|ИЗ
		|	Справочник.ШаблоныФайлов.Поручители КАК ШаблоныФайловПоручители
		|ГДЕ
		|	ШаблоныФайловПоручители.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		//догПоручители.Вставить(ВыборкаДетальныеЗаписи.Реквизит+"Справочник",ВыборкаДетальныеЗаписи.Заголовок);
		 догПоручители.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовок);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат догПоручители;
	
	

КонецФункции // ()



&НаСервере
Функция РегионПоСтроке(регстр)

	регионСсылка=Неопределено;
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КодыРегионовФССП.Наименование КАК Наименование,
		|	КодыРегионовФССП.КодРегионаФССП КАК КодРегионаФССП,
		|	КодыРегионовФССП.Синоним КАК Синоним
		|ИЗ
		|	Справочник.КодыРегионовФССП КАК КодыРегионовФССП";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		
		СтрКодФССП=Лев(Выборка.Синоним,10);

		индексстр=Найти(ВРег(регстр), ВРег(СтрКодФССП));
		
		Если индексстр<>0 Тогда
			
						
							    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Регионы.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.Регионы КАК Регионы
						|ГДЕ
						|	Регионы.КодРегионаФССП = &КодРегионаФССП";
					
					Запрос.УстановитьПараметр("КодРегионаФССП", Выборка.КодРегионаФССП);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						регионСсылка=ВыборкаДетальныеЗаписи.Ссылка;
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		
		КонецЕсли;
		
		
	КонецЦикла;
	
	
	Возврат регионСсылка;
	
	

КонецФункции // ()

	 
	 
	 
