
&НаСервере
Процедура ОбработатьФайлНаСервере()
	// Вставить содержимое обработчика.
	
          		   
		   
		   
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФайл(Команда)
	
	
	       Если ИмяФайла="" Тогда
		   
		   	     Shell = Новый COMОбъект("WScript.Shell");
                 дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		         имяфайлатемпответ=дирМоиД+"\bankrotperson_out.txt"; 
		   
		   Иначе
		   
		   	   имяфайлатемпответ=ИмяФайла;
		   
		   КонецЕсли;
	
	
	      
		   
		   ВыбранныйФайл = Новый Файл(имяфайлатемпответ);

		   мСтрокФайла = Новый Массив();
		   
		   Если ВыбранныйФайл.Существует() Тогда
			   
			   
			   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
												
					Строка = ПрочитанныйТекст.ПрочитатьСтроку();
												//а не был ли файл пуст?
					Если Строка <> Неопределено Тогда
					     мСтрокФайла.Добавить(Строка);
					КонецЕсли;
					

					Пока Строка <> Неопределено Цикл
                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					     Если Строка <> Неопределено Тогда
					          мСтрокФайла.Добавить(Строка);
					     КонецЕсли;
					КонецЦикла;

			   
			   
    	   КонецЕсли;
				
			

		   Для каждого стрд  Из мСтрокФайла Цикл

			     стрДанные= РазбитьСтроку(стрд);
				 
				 ЗаписатьВБанкрот(стрДанные);
				 
           КонецЦикла;

	
	
	//ОбработатьФайлНаСервере();
	
	Сообщить("Ок");
	
	
КонецПроцедуры


&НаСервере
Процедура ЗаписатьВБанкрот(стрДанные)

	  спрДолжник=Неопределено;
	  
	  датаРожд= СтрЗаменить(стрДанные.ДатаРождения,"-","");
	  
	  датаРожд=датаРожд+"000000";
	  
	  Попытка
	  
	    НоваяДата = Дата(датаРожд);
	  
	  
	  
	  
				  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Должники.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.Должники КАК Должники
					|ГДЕ
					|	Должники.Наименование = &Наименование
					|	И Должники.ДатаРождения = &ДатаРождения";
				
				Запрос.УстановитьПараметр("ДатаРождения", НоваяДата);
				Запрос.УстановитьПараметр("Наименование", стрДанные.ФИО);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					спрДолжник=ВыборкаДетальныеЗаписи.Ссылка;
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

			Если спрДолжник<>Неопределено  Тогда
				
				  НачатьТранзакцию();
				  //Записать в базу Банкроты  если нет такого
				  Попытка
				  
					   Если Не ЕстьЛиТакойБанкрот(спрДолжник)  Тогда
					   
		                      новаяЗапись=Справочники.Банкроты.СоздатьЭлемент();
							  новаяЗапись.ФИО=стрДанные.ФИО;
							  новаяЗапись.ДатаРождения=НоваяДата;
							  новаяЗапись.Владелец=спрДолжник;
							  новаяЗапись.IDDebitor=стрДанные.BankruptId;
							  новаяЗапись.Адрес=стрДанные.Адрес;
							  новаяЗапись.ИНН=стрДанные.ИНН;
							  новаяЗапись.МестоРождения=стрДанные.МестоРождения;
							  новаяЗапись.Регион=стрДанные.Регион;
							  
					    	новаяЗапись.Записать();	  
						   
					   
					   КонецЕсли;
					   
					 ЗафиксироватьТранзакцию();  
				  Исключение
                      ОтменитьТранзакцию();
				  КонецПопытки;
				  
      
   
			
			КонецЕсли;	
				

		Исключение
			
			   //Сообщить(стрДанные.ФИО+" -------");

			
			
		КонецПопытки; 		


					
КонецПроцедуры


&НаСервере
Функция ЕстьЛиТакойБанкрот(должВ)
	  естьБанкрот=Ложь; 
	   
	       
	                 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Банкроты.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.Банкроты КАК Банкроты
						|ГДЕ
						|	Банкроты.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", должВ);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
					
				        естьБанкрот=Истина; 		
					
					КонецЕсли;
					
					//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
					//	
					//КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					
	   
	  
	  Возврат естьБанкрот;

КонецФункции // ()

	




&НаКлиенте
Функция РазбитьСтроку(стрк)

    стрДанные=Новый Структура;

	
	Разделитель = Символ(240);
    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
		
		стрДанные.Вставить("ФИО",СтрПолучитьСтроку(Строки, 1));
		стрДанные.Вставить("ДатаРождения",СтрПолучитьСтроку(Строки, 2));
		стрДанные.Вставить("Адрес",СтрПолучитьСтроку(Строки, 3));
		стрДанные.Вставить("BankruptId",СтрПолучитьСтроку(Строки, 4));
		
		стрДанные.Вставить("Регион",СтрПолучитьСтроку(Строки, 5));
		стрДанные.Вставить("МестоРождения",СтрПолучитьСтроку(Строки, 6));
		стрДанные.Вставить("ИНН",СтрПолучитьСтроку(Строки, 7));
		
	
		
		
		
		
    КонецЦикла;
	
	
	
	Возврат стрДанные; 	

КонецФункции // ()

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "txt (*.txt)|*.txt*";
	ДиалогВыбФайла.Расширение				= "txt";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
	

	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НайтиСудыБанкротНаСервере()
	
	
	           	   Shell = Новый COMОбъект("WScript.Shell");
                   дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
				   
				   программаОбр= дирМоиД+"\MessageServiceUsageExample.exe";

	
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Банкроты.ИНН КАК ИНН,
						|	Банкроты.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.Банкроты КАК Банкроты";
					
					РезультатЗапроса = Запрос.Выполнить();
					
					Выборка = РезультатЗапроса.Выбрать();
					
					Пока Выборка.Следующий() Цикл
						
											
					//			 программаОбр=программаОбр+" "+Выборка.ИНН;
					//			     
					//			  
					//			 //Оповещение = Новый ОписаниеОповещения("IDDQD", ЭтотОбъект);

					//			 //НачатьЗапускПриложения(Оповещение,программаОбр,,Истина);

					//			 
					//		    ShellR = Новый COMОбъект("WScript.Shell");

					//			 ShellR.Run(программаОбр,0, 1);
					//			 
					//			 
					//			 
					//  		     WScript = Новый COMОбъект("WScript.Shell");
					//             WScript.Run("timeout /t " + 1, 0, Истина);

					//			 //  прочитаю файл ответ
					//			 имяфайлатемпответ=дирМоиД+"\bankrotperson_data"+Выборка.ИНН+".txt";
					//			
					//			 
					//			  ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
					//			  мСтрокФайла = Новый Массив();

					//			  Если ВыбранныйФайл.Существует() Тогда
					//				  
					//				   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
					//							
					//                    Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					//							//а не был ли файл пуст?
					//
					//					Если Строка <> Неопределено Тогда
					//						  // Первая строка это ФИО
					//						
					//						  //мСтрокФайла.Добавить(Строка);
					//					     
					//					КонецЕсли;
					//					Пока Строка <> Неопределено Цикл
					//                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					//					   Если Строка <> Неопределено Тогда
					//						   
					//						     мСтрокФайла.Добавить(Строка);
					//						    
					//					     КонецЕсли;
					//					 КонецЦикла;
					//					 
					//					 
					//					 
					//					  судБанкрот=Новый Структура;

					//					 // обработать массив строк
					//					 
					//					  Для каждого стрд  Из мСтрокФайла Цикл
					//							
					//						    судБанкрот=РазбитьСтрокуСуд(стрд);
					//						
					//						
					//							//записать в тч бонкрот суды
					//							
					//							 ЗаписатьВТЧБанкрот(судБанкрот,Выборка.Ссылка);
					//							
					//							 Сообщить(Выборка.Ссылка);
					//							 
					//					  КонецЦикла;

					//					 
					//					 
					//					 
					//					 
					//					 
					//					 
					//				    Попытка
					//				    	УдалитьФайлы(имяфайлатемпответ);
					//				    Исключение
					//				    	Сообщить(ОписаниеОшибки());
					//				    КонецПопытки; 
					//				  
					//				  
					//				    
					//				  
					//				  
					//			  КонецЕсли;
					//			  
					//  								  
					//			  
								 
						
					КонецЦикла;
					
		
				
				
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВТЧБанкрот (стркТЧ, ссылкаБанкрот)
	
	      номерСудДела=стркТЧ.Номер;
	
	 		
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	БанкротыТЧ.НомерСудебногоДела КАК НомерСудебногоДела
						|ИЗ
						|	Справочник.Банкроты.ТЧ КАК БанкротыТЧ
						|ГДЕ
						|	БанкротыТЧ.Ссылка = &Ссылка
						|	И БанкротыТЧ.НомерСудебногоДела = &НомерСудебногоДела";
					
					Запрос.УстановитьПараметр("НомерСудебногоДела", номерСудДела);
					Запрос.УстановитьПараметр("Ссылка", ссылкаБанкрот);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Если ВыборкаДетальныеЗаписи.Количество()=0 Тогда
					
						// Добавить запись
						спрБанкрот = ссылкаБанкрот.ПолучитьОбъект();
						новаяСтрока=спрБанкрот.ТЧ.Добавить();
						новаяСтрока.НомерСудебногоДела=номерСудДела;
						новаяСтрока.ДатаВнесенияНомера=стркТЧ.ВремяРегистрации;
						новаяСтрока.НаименованиеСуда=стркТЧ.НазваниеСуда;
						новаяСтрока.ТипЗаявления=стркТЧ.ТипЗаявителя;
						
						
						
						спрБанкрот.Записать();
						
					
					КонецЕсли;
					
					//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
					//КонецЦикла;
					////
				

					
					
	
 
 КонецПроцедуры
 
				
				

&НаСервере
Функция РазбитьСтрокуСуд(стрк)
	
	судБанкрот=Новый Структура;

	
	Разделитель = Символ(240);
    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл

		судБанкрот.Вставить("Номер",СтрПолучитьСтроку(Строки, 1));
		судБанкрот.Вставить("НазваниеСуда",СтрПолучитьСтроку(Строки, 2));
		судБанкрот.Вставить("ВремяРегистрации",СтрПолучитьСтроку(Строки, 3));
		судБанкрот.Вставить("ТипЗаявителя",СтрПолучитьСтроку(Строки, 4));
		
		
		
	КонецЦикла;
	
	
 Возврат судБанкрот;	
	
	
КонецФункции // ()


&НаСервере
Процедура ЗаполнитьТаблицуБанкрот()

	    Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Банкроты.ИНН КАК ИНН,
						|	Банкроты.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.Банкроты КАК Банкроты";
					
					РезультатЗапроса = Запрос.Выполнить();
					
					Выборка = РезультатЗапроса.Выбрать();
					
					Пока Выборка.Следующий() Цикл
						
						Если Выборка.ИНН<>"" Тогда
						
								//новаяЗаписьБанкрот=Объект.Банкроты.Добавить();
								//новаяЗаписьБанкрот.ИНН=Выборка.ИНН;
								//новаяЗаписьБанкрот.СсылкаБанкрот=Выборка.Ссылка.Ссылка;
								
								новаяЗаписьБанкрот=БанкротТЧ.Добавить();
								новаяЗаписьБанкрот.ИНН=Выборка.ИНН;
								новаяЗаписьБанкрот.БанкротСпр=Выборка.Ссылка;
								

						
						КонецЕсли;
												
						
	                КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура IDDQD(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
        Сообщить("Первый запрос");
    КонецЕсли;	
 
КонецПроцедуры






&НаКлиенте
Процедура НайтиСудыБанкрот(Команда)
	
	 // получит таблицу банкрот --- 
	
		Объект.Банкроты.Очистить();
		БанкротТЧ.Очистить();
		
		ЗаполнитьТаблицуБанкрот();
		
		Shell = Новый COMОбъект("WScript.Shell");
		дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
				   
		


		Для каждого стрТ  Из БанкротТЧ  Цикл
			
			
			 			
			
					             программаОбр= дирМоиД+"\MessageServiceUsageExample.exe";
					             программаОбр=программаОбр+" "+стрТ.ИНН;
								     
								 
								 //Оповещение = Новый ОписаниеОповещения("IDDQD", ЭтотОбъект);

								 //НачатьЗапускПриложения(Оповещение,программаОбр,,Истина);
								 //
								 Shell.Run(программаОбр,0, 1);
								 //
								 WScript = Новый COMОбъект("WScript.Shell");
								 WScript.Run("timeout /t " + 2, 0, Истина);

								 ////  прочитаю файл ответ
								 имяфайлатемпответ=дирМоиД+"\bankrotperson_data"+стрТ.ИНН+".txt";
								
								 
								  ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
								  мСтрокФайла = Новый Массив();

								  Если ВыбранныйФайл.Существует() Тогда
									  
									   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
												
					                    Строка = ПрочитанныйТекст.ПрочитатьСтроку();
												//а не был ли файл пуст?
					
										Если Строка <> Неопределено Тогда
											  // Первая строка это ФИО
											
											  //мСтрокФайла.Добавить(Строка);
										     
										КонецЕсли;
										Пока Строка <> Неопределено Цикл
					                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
										   Если Строка <> Неопределено Тогда
											   
											     мСтрокФайла.Добавить(Строка);
											    
										     КонецЕсли;
										 КонецЦикла;
										 
										 
										 
										  судБанкрот=Новый Структура;

										 // обработать массив строк
										 
										  Для каждого стрд  Из мСтрокФайла Цикл
												
											    судБанкрот=РазбитьСтрокуСуд(стрд);
											
											
												//записать в тч банкрот суды
												
												 ЗаписатьВТЧБанкрот(судБанкрот,стрТ.БанкротСпр);
												
												 
												 
										  КонецЦикла;

									     
									    Попытка
									    	УдалитьФайлы(имяфайлатемпответ);
									    Исключение
									    	Сообщить(ОписаниеОшибки());
									    КонецПопытки; 
									  
																	  
									  
								  КонецЕсли;
								  
					  								  
								  
								 

			
			
			
		
		КонецЦикла;
		
		
	
	//НайтиСудыБанкротНаСервере();
	
	
КонецПроцедуры




