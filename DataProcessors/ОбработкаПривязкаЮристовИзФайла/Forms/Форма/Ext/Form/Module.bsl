
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= ИмяФайла; //АДРЕС
	//ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	//ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработатьФайлНаСервере(ДвоичныеДанные, Расширение)
	   
	
	
	  ФайлEXCELНаСервере = ПолучитьИмяВременногоФайла(Расширение);
	  ДвоичныеДанные.Записать(ФайлEXCELНаСервере);
	 	    
	   ФайлЕксел.Прочитать(ФайлEXCELНаСервере,СпособЧтенияЗначенийТабличногоДокумента.Текст);
	   УдалитьФайлы(ФайлEXCELНаСервере);
	   
	    
	   ПЗ = Новый ПостроительЗапроса;

	   ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ФайлЕксел.Область());

	   ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;

	   ПЗ.ЗаполнитьНастройки();

	   ПЗ.Выполнить();

	   ТаблицаЗначений = ПЗ.Результат.Выгрузить();
	   
	    Для каждого стр Из ТаблицаЗначений Цикл

	    	//стр.ДатаРождения
	    	//стр.НомерДоговора
			//стр.ФИОКлиента
	    	//стр.СотрудникЗаКоторымЗакрепленПланПодачи
			
			Попытка
			       Если стр.СотрудникЗаКоторымЗакрепленПланПодачи<>"" Тогда
				
						 ссылкаСотрудник= НайтиСотрудника(стр.СотрудникЗаКоторымЗакрепленПланПодачи);

						 данныеДоговор= НайтиДоговор(стр.НомерДоговора,стр.ФИОКлиента, стр.ДатаРождения);
						 
						 новаяСтрока=ТЗ.Добавить();
						 
						 новаяСтрока.Сотрудник=ссылкаСотрудник;
						 
						 новаяСтрока.Договор=данныеДоговор.Договор;
						 
						 новаяСтрока.Должник=данныеДоговор.Должник;
						 
                 		 
	    	
	         	КонецЕсли;

				
			
			Исключение
				
				Сообщить(стр.ФИОКлиента+" - "+стр.НомерДоговора);
			
			КонецПопытки;
	    	
	    		    	
	    	 
	    	
	    КонецЦикла;
		
	
КонецПроцедуры


&НаСервере
Функция НайтиДоговор(дог,долж, датарож)

	
	    данныеСтруктура=Новый Структура;
	
	    ссылкаДоговор=Неопределено;
	
		//Найду должника
		
		ссылкаДолжник=Неопределено;
		   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Должники.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.Должники КАК Должники
					|ГДЕ
					|	Должники.Наименование = &Наименование
					|	И Должники.ДатаРождения = &ДатаРождения";
				
				Запрос.УстановитьПараметр("ДатаРождения", Дата(датарож+" 00:00:00"));
				Запрос.УстановитьПараметр("Наименование", долж);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДолжник = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДолжник.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					
					ссылкаДолжник=ВыборкаДолжник.Ссылка;
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				
				Если ссылкаДолжник<>Неопределено Тогда
					
					   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	Договоры.Ссылка КАК Ссылка
							|ИЗ
							|	Справочник.Договоры КАК Договоры
							|ГДЕ
							|	Договоры.Владелец = &Владелец
							|	И Договоры.НомерДоговора = &НомерДоговора";
						
						Запрос.УстановитьПараметр("Владелец", ссылкаДолжник);
						Запрос.УстановитьПараметр("НомерДоговора", дог);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							ссылкаДоговор=ВыборкаДетальныеЗаписи.Ссылка;
							
							данныеСтруктура.Вставить("Договор",ссылкаДоговор);
							данныеСтруктура.Вставить("Должник", ссылкаДолжник);
							
							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					
					
					
					
				
				КонецЕсли;
					
				
	 Возврат  данныеСтруктура;			
	
	
	

КонецФункции // ()




&НаСервере
Функция НайтиСотрудника(стрСотр)

	   сотрудник="";
	   
	   индексПробела=Найти(стрСотр," ");
	   
	   фамилияСотр=Лев(стрСотр,индексПробела-1);
	   
	   ссылкаСотрудник=Неопределено;
	   
	          	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.Наименование ПОДОБНО  &Наименование ";
	
	Запрос.УстановитьПараметр("Наименование","%"+фамилияСотр +"%" );
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ссылкаСотрудник=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	Возврат ссылкаСотрудник;
	
	

КонецФункции // ()

	






&НаКлиенте
Процедура ОбработатьФайл(Команда)
	
	Файл = Новый Файл(ИмяФайла);
	Если НЕ Файл.Существует() Тогда
		Возврат;
	КонецЕсли;
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
	
	ОбработатьФайлНаСервере(ДвоичныеДанные,Файл.Расширение);
	
	Этаформа.Элементы.ГруппаТаблица.Видимость=Истина;
	
	ТЗ.Сортировать("Сотрудник");
	
	
	Сообщить("Ок");
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументПривязкаДоговоровНаСервере(сотрудникТемп)
	
		//сотрудникТемп=Неопределено; 
		
		
		
	   	
		 //сотрудникТемп=ТЗ[0].Сотрудник;
		 
		  Т3Темп= ТЗ.Выгрузить();

		  
		  Запрос = Новый Запрос;
		  Запрос.Текст = 
					"ВЫБРАТЬ
				    | *	
					|ПОМЕСТИТЬ ТВ_ТВ
					|ИЗ
					|	&Т3Темп КАК Т3Темп
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ТВ_ТВ.Сотрудник КАК Сотрудник,
					|	ТВ_ТВ.Договор КАК Договор,
					|	ТВ_ТВ.Должник КАК Должник
					|ИЗ
					|	ТВ_ТВ КАК ТВ_ТВ
					|ГДЕ
					|	ТВ_ТВ.Сотрудник = &Сотрудник
					|";
				
				Запрос.УстановитьПараметр("Сотрудник",сотрудникТемп);
				 Запрос.УстановитьПараметр("Т3Темп", Т3Темп);

				
				РезультатЗапроса = Запрос.Выполнить();

				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

				
							    массивСтруктур=Новый Массив;
				
				
				Если ВыборкаДетальныеЗаписи.Количество()>1 Тогда

				   Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					   
					     структураДанные=Новый Структура;
					     структураДанные.Вставить("Сотрудник",ВыборкаДетальныеЗаписи.Сотрудник);
						 структураДанные.Вставить("Договор",ВыборкаДетальныеЗаписи.Договор);
						 структураДанные.Вставить("Должник",ВыборкаДетальныеЗаписи.Должник);
						 
                         массивСтруктур.Добавить(структураДанные);

					   
				   КонецЦикла;
	
					
				КонецЕсли;
	
				СоздатьДокументПривязкаДоговора(массивСтруктур);

				
				СтрокиДляУдаления= ТЗ.НайтиСтроки(Новый Структура("Сотрудник",сотрудникТемп));
				
				Для каждого СтрокаТаблицы Из СтрокиДляУдаления Цикл
      

    	                ТЗ.Удалить(СтрокаТаблицы)
      

                 КонецЦикла;
      
	
	
КонецПроцедуры


&НаСервере
Процедура СоздатьДокументПривязкаДоговора(данныеМассив)

	             
	          
	            НовыйДокумент = Документы.ПередачаДоговоров.СоздатьДокумент();
				
				НовыйДокумент.Автор=данныеМассив[0].Сотрудник;
				
				НовыйДокумент.Дата=ДатаПривязки;
				
				НовыйДокумент.Сотрудник=данныеМассив[0].Сотрудник;
				
				Для каждого стр Из данныеМассив Цикл
					
					строкаТЧ= НовыйДокумент.Договора.Добавить();
					
					строкаТЧ.Договор=стр.Договор;
					
					строкаТЧ.Должник=стр.Должник;
					
					
				
				КонецЦикла;
				
				НачатьТранзакцию();
				Попытка
				
				 НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);	
					
				 ЗафиксироватьТранзакцию();
				Исключение
					
					 ОтменитьТранзакцию();
				КонецПопытки;
				
				
				
				
			
				
	
	

КонецПроцедуры



			 

&НаКлиенте
Процедура СоздатьДокументПривязкаДоговоров(Команда)
	
	
	  Пока  ТЗ.Количество()>0 Цикл
		  
		     сотрудникТемп=ТЗ[0].Сотрудник;
			 
			 СоздатьДокументПривязкаДоговоровНаСервере(сотрудникТемп);

	  	
	  
	  КонецЦикла;
	
	
		
	
	
КонецПроцедуры
