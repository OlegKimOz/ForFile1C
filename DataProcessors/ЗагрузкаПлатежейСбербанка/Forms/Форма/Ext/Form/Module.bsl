
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= Объект.ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 Объект.ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	ПриОткрытииНаСервере();
	
КонецПроцедуры



&НаСервере
Процедура ПриОткрытииНаСервере()
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = ПараметрыСеанса.Пользователь.Ссылка;  //#МРС - не забыть
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ДатаЗагрузки) = Ложь Тогда
		Объект.ДатаЗагрузки = ТекущаяДатаСеанса();
	КонецЕсли;
	
	спрБ=Справочники.Банки.НайтиПоНаименованию("Цессия Сбербанк");
	
	Объект.Банк=спрБ;
	
	//Цессия Сбербанк
	
КонецПроцедуры

&НаКлиенте
Процедура Обработать(Команда)
	
	стрДолж=ПолучитьКолонки(Объект.ИмяШаблона);
	
	стрДоговор=ПолучитьКолонкиДоговор(Объект.ИмяШаблона);
	
	стрПлатеж=ПолучитьКолонкиПлатежи(Объект.ИмяШаблона);
	
	
	 загодин=Ложь;
	 
	  фамилия= стрДолж["Фамилия"];
	  
	  //имя=стрДолж["Имя"];
	  
	  
	  отчество=стрДолж["Отчество"];
	  
	  
	  //Если фамилия=имя Тогда
	  //    //Значит  один заголовок для Должника
	  //    должникЗаг=фамилия;
	  //    загодин=Истина;
	  //Иначе
	  //    
	  //     //должникЗаг= стрДолж["Фамилия"]+" "+стрДолж["Имя"]+" "+ стрДолж["Отчество"];
	  //КонецЕсли;	  
	  //  
	  
	  массивЗаг=Новый Массив;

	
	    Для каждого стр Из стрДолж Цикл
	  
		  Если стр.Ключ<>"Имя" И стр.Ключ<>"Отчество" Тогда
			  
			   массивЗаг.Добавить(стр);
			   
			   
		  	
		  
		  КонецЕсли;
	  
	  КонецЦикла;
	  
	  
	  Для каждого стр Из стрДоговор Цикл
	  
			  
			   массивЗаг.Добавить(стр);
		  	
		  
	  КонецЦикла;

	  
	  
	  Для каждого стр Из стрПлатеж Цикл
	  
	  	     массивЗаг.Добавить(стр);
	  
	 КонецЦикла;
	 
	 
		 
	  
	  
	   //запишу врем файл и передам его  обработчику
	  
     	   Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		   
		   имяэксел=Объект.ИмяФайла;
		   
		   Если Х2=Истина  Тогда
			   
			    прогрпуть="D:\public\Distr";
		 
		        имяфайлатемп=прогрпуть+"\сберплат.txt";

				
				имяфайлатемпответ=прогрпуть+"\сберплат_out.txt";

    			 программаОбр=прогрпуть+"\ParseExcel86.exe";
		   
		   Иначе
			   
			   имяфайлатемп=дирМоиД+"\сберплат.txt";
			   
			   имяфайлатемпответ=дирМоиД+"\сберплат_out.txt";

			   программаОбр=дирМоиД+"\ExcelParse.exe";
			   
		   КонецЕсли; 
		   
		   
              ФайлТемп = Новый ЗаписьТекста(имяфайлатемп);
		   
		   Для каждого масстр Из массивЗаг  Цикл
			   
			 ФайлТемп.ЗаписатьСтроку(масстр.Значение);   
			 
			 
			 
			 
		   
		   КонецЦикла;
		   
		   ФайлТемп.ЗаписатьСтроку(Объект.ИмяФайла);
		   
		   ФайлТемп.Закрыть();

		   
		     
			 программаОбр=программаОбр+" "+"7";
			 
			 
	    	 Shell.Run(программаОбр,0, 1);

	  
			 // код 240 символа
			 
			 //  обработаем вернувшийся файл     долждопд_out.txt
			 
			   
	   
			   мСтрокФайла = Новый Массив();

				
				   
			   ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
			   Если ВыбранныйФайл.Существует() Тогда
				   
				   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
												
					Строка = ПрочитанныйТекст.ПрочитатьСтроку();
												//а не был ли файл пуст?
					Если Строка <> Неопределено Тогда
					     мСтрокФайла.Добавить(Строка);
					КонецЕсли;
					

					Пока Строка <> Неопределено Цикл
                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					     Если Строка <> Неопределено Тогда
					          мСтрокФайла.Добавить(Строка);
					     КонецЕсли;
					КонецЦикла;

				   
				   
			   КонецЕсли;
		 
			   
	  
	  
	   ПостроитьТаблицу(массивЗаг);

	   	  
	  
	          должДанныет=Новый Структура;
			  
			  
			  Для каждого стрд  Из мСтрокФайла Цикл
				  
				     должДанныет=РазбитьСтроку(стрд,массивЗаг);
				   
				   	Запись=ТЧ.Добавить();
				     Для каждого мстр Из должДанныет Цикл
						 
						стрк=мстр.Ключ; 
					
						
						Запись[Строка(стрк)]=мстр.Значение; 	
					 
					 КонецЦикла;
				   
				  
				  
			  КонецЦикла;

			
	  
	       ТЧкол();

	  
	  
	
	
КонецПроцедуры

&НаСервере
Процедура ТЧкол()

	Сообщить(ТЧ.Количество());
	

КонецПроцедуры

		  

&НаКлиенте
Функция РазбитьСтроку(стрк,массивзаг)

   должДанные=Новый Структура;

	
	Разделитель = Символ(240);
    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
		
		темпстр=массивзаг[Индекс-1].Ключ;
				
		
		должДанные.Вставить(темпстр,СтрПолучитьСтроку(Строки, Индекс));
		
    КонецЦикла;
	
	
	
	Возврат должДанные; 	

КонецФункции // ()




&НаСервере
Функция ПостроитьТаблицу(СтрМ)

	
	КС = Новый КвалификаторыСтроки(150);
    Массив = Новый Массив;
    Массив.Добавить(Тип("Строка"));
    ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);

	
	 ТЗ = РеквизитФормыВЗначение("ТЧ");
	
	 //ТЗ = Новый ТаблицаЗначений;
	 
	 
	 инд=0;
     Для каждого мас Из СтрМ Цикл
		  
		  //инд=инд+1;
		  //строк=Строка(инд);
		  //
    	  ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение),150);
		  
     	
     
     КонецЦикла;
     
       
     
     
     
     
     //Опишем массив реквизитов
    МассивРеквизитов = Новый Массив;
    МассивТипаВыбора = Новый Массив;
    МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
    ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
    
    //Добавим в массив реквизитов таблицу значений
    МассивРеквизитов.Добавить(Новый РеквизитФормы("ДанныеФайла", ОписаниеТипаВыбора));
  
	//Добавим в массив реквизитов колонки таблицы
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТЧ"));
		
	КонецЦикла;
  
    ИзменитьРеквизиты(МассивРеквизитов);
    
     //Добавим Таблицу на форму
    ТаблицаДанныхФайла             = Элементы.Добавить("ТаблицаДанныхФайла", Тип("ТаблицаФормы"));
    ТаблицаДанныхФайла.ПутьКДанным = "ТЧ";
    ТаблицаДанныхФайла.Отображение = ОтображениеТаблицы.Список;
	ТаблицаДанныхФайла.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
    //Добавим колонки
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаДанныхФайла);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "ТЧ." + Колонка.Имя;
		НовыйЭлемент.Заголовок=Колонка.Заголовок;
		
    КонецЦикла;  
    ЗначениеВРеквизитФормы(ТЗ,"ТЧ");
    
	
	
	
	
      	 
	
	
КонецФункции // ()





&НаСервере
Функция ПолучитьКолонкиПлатежи(стр)
	
	платежКол=Новый Структура;

	   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловПлатежи.Реквизит КАК Реквизит,
		|	ШаблоныФайловПлатежи.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Платежи КАК ШаблоныФайловПлатежи
		|ГДЕ
		|	ШаблоныФайловПлатежи.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		  платежКол.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);

	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат  платежКол;
	
	

КонецФункции // ()




&НаСервере
Функция ПолучитьКолонки(стр)

		
	//    Получить должника Колонку
	
	должФИО=Новый Структура;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДолжники.Реквизит КАК Реквизит,
		|	ШаблоныФайловДолжники.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Должники КАК ШаблоныФайловДолжники
		|ГДЕ
		|	ШаблоныФайловДолжники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	    должФИО.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
	 
		
	КонецЦикла;

	
	Возврат должФИО;
	  
	
	

КонецФункции // ()

&НаСервере
Функция ПолучитьКолонкиДоговор(стр)

	должДоговор=Новый Структура;

	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДоговоры.Реквизит КАК Реквизит,
		|	ШаблоныФайловДоговоры.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Договоры КАК ШаблоныФайловДоговоры
		|ГДЕ
		|	ШаблоныФайловДоговоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		   должДоговор.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	Возврат должДоговор;
	
	
КонецФункции // ()

&НаКлиенте
Процедура Записать(Команда)
	
	
	
	   массивошиб=СоздатьДокументПлатежи(); 
	
	   Если Х2=Истина Тогда
		   
		   
		       ПутьКФайлу="D:\public\Марин Евгений\ошибкизагрСбер.txt";
	   	
	   
	   Иначе
	   
			    Shell = Новый COMОбъект("WScript.Shell");
		       дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
			   
			   
			   ПутьКФайлу=дирМоиД+"\ошибкизагрСбер.txt";
			   
    	КонецЕсли;	   
			   
			   
			   
			   Если ЗначениеЗаполнено(ПутьКФайлу) Тогда

					ТекстовыйДок = Новый ТекстовыйДокумент;
					
					
					Для каждого стр  Из массивошиб Цикл
					
						 ТекстовыйДок.ДобавитьСтроку(стр);
					
					КонецЦикла;
					
				
					
					
					ТекстовыйДок.Записать(ПутьКФайлу, КодировкаТекста.UTF8);

				Конецесли;

		   
		   
		   
	   
	   
	   
	   
	   
	   
	
КонецПроцедуры



&НаСервере
Функция СоздатьДокументПлатежи()

	массивОшибок=Новый Массив();
	
	
	Документ = Документы.Платежи.СоздатьДокумент();
	
	Документ.Дата = Объект.ДатаЗагрузки;

	Документ.Банк=Объект.Банк;
	
	Документ.Комментарий=Объект.Ответственный;
	
	
	Для каждого стр Из ТЧ Цикл
		
			должСылка=ДолжПоДог(стр.Фамилия,стр.НомерДоговора);
			
				
			Если должСылка<> Неопределено Тогда
				
				 составПлат= Документ.Должники.Добавить();
				 составПлат.Должник=должСылка;
				 
				 
				 
				 
				   составПлат.Договор=ДоговорСсылка(должСылка,стр.НомерДоговора);
				 
				 
				 
				 составПлат.ДатаПлатежа=Дата(Прав(стр.ДатаПлатежа, 4) + Сред(стр.ДатаПлатежа, 4, 2) + Лев(стр.ДатаПлатежа, 2));;

				 составПлат.Сумма=СтрЗаменить(стр.Сумма," ","");
				 составПлат.ОтметкаФССП=стр.ОтметкаФССП;
				 
			Иначе	 
				
				
				 составПлат= Документ.Должники.Добавить();
				 
				 
				 
				 составПлат.Договор=ДоговорСсылкаПустая(стр.НомерДоговора,Объект.Банк);
				 
				 
				  Если стр.ДатаПлатежа<>""  Тогда
				  
				  	       составПлат.ДатаПлатежа=Дата(Прав(стр.ДатаПлатежа, 4) + Сред(стр.ДатаПлатежа, 4, 2) + Лев(стр.ДатаПлатежа, 2));
				  
				  КонецЕсли;
				
				 составПлат.Сумма=СтрЗаменить(стр.Сумма," ","");
				  составПлат.ОтметкаФССП=стр.ОтметкаФССП;
				
				  собвозвр="Нет в базе такого должника - "+стр.Фамилия + " или нет такого договора " + стр.НомерДоговора; 

				  
				  
				  
				  массивОшибок.Добавить(собвозвр);
				 
			
			КонецЕсли;	 
		
	
	КонецЦикла;
	
	
	Документ.Записать();

	 
	Возврат  массивОшибок;
	
	
	

КонецФункции // ()


&НаСервере
Функция ДолжПоДог(долж,номерд)

	  собвозвр="";
	  
			
	  
			должникСсылка=Неопределено;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Должники.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.Договоры КАК Договоры
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
				|		ПО Договоры.Владелец = Должники.Ссылка
				|ГДЕ
				|	Договоры.НомерДоговора = &НомерДоговора
				|	И Должники.Наименование ПОДОБНО &Наименование";
			
			Запрос.УстановитьПараметр("Наименование", долж);
			Запрос.УстановитьПараметр("НомерДоговора", номерд);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				должникСсылка=ВыборкаДетальныеЗаписи.Ссылка;
			КонецЦикла;

			
			
			
			
			
			
			Если должникСсылка<>Неопределено Тогда
				
				
				
				
				
				
			Иначе
				
				
				    Сообщить("Нет в базе такого должника - "+долж + " или нет такого договора " + номерд);
				   
				 
				   
			 КонецЕсли;

	
			 
		Возврат должникСсылка;	 
	

КонецФункции // ()


&НаСервере
Функция ДоговорСсылка(долж,дог)

	
	   ссылкаДог=Неопределено;
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.НомерДоговора = &НомерДоговора
		|	И Договоры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("НомерДоговора", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ссылкаДог=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат ссылкаДог;

КонецФункции // ()



&НаСервере
Функция ДоговорСсылкаПустая(дог,банксб)

	догссылка=Неопределено;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.НомерДоговора = &НомерДоговора
		|	И Договоры.Банк = &Банк";
	
	Запрос.УстановитьПараметр("Банк", банксб);
	Запрос.УстановитьПараметр("НомерДоговора", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		догссылка=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	
	Возврат  догссылка;
	
	

КонецФункции // ()

















