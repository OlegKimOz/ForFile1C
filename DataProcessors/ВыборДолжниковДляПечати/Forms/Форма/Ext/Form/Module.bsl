
&НаКлиенте
Процедура Выбрать(Команда)
	// Вставить содержимое обработчика.
	
	  
	  ПараметрыПодбора = Новый Структура;
	  ПараметрыПодбора.Вставить("ЗакрыватьПриВыборе", Истина);
      ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
	  
	  
	  ОписаниеВыбора = Новый ОписаниеОповещения("ОбработатьВыборДолжника",ЭтаФорма); 
	  
	  
	 ОткрытьФорму("Справочник.Должники.Форма.ФормаВыбораПечать",ПараметрыПодбора,,,,,ОписаниеВыбора,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	  
	 
КонецПроцедуры



&НаКлиенте
Процедура ОбработатьВыборДолжника(РезультатЗакрытия,ДопПараметры) Экспорт

Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
  Возврат;
КонецЕсли;

	
	  Для каждого стр Из РезультатЗакрытия Цикл
		  
		  
		 новСтр=ТЧ.Добавить();
    	 новСтр.Должник=стр;
		 
	
	  
	  КонецЦикла;
	
	

  КонецПроцедуры

&НаКлиенте
  Процедура ВидЗаявленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	  // Вставить содержимое обработчика.
	  
	     СтандартнаяОбработка=Ложь;
		 
	     ДанныеВыбора= Новый СписокЗначений;

		 ДанныеВыбора.Добавить("Заявление на выдачу судебного приказа");
		 
		 ДанныеВыбора.Добавить("Заявления Обращение О Ходе ИП");
		 
		 ДанныеВыбора.Добавить("(ЭКСПО)Заявления Обращение О Ходе ИП");
		 
		 
		 ДанныеВыбора.Добавить("Заявление о возбуждении ИП");
		 
		 
		 
		 
		 
	  
  КонецПроцедуры

&НаКлиенте
  Процедура Печать(Команда)
	  // Вставить содержимое обработчика.
	  
	  
	  // Пройду по ТЧ и отпечатаю...
	  
	  Для каждого стр Из Тч  Цикл
		  
		  
		   //ПечатьЗаявления(ВидЗаявления,стр.Должник);
		   
		   ПечатьЗаявленияНомерДоговора(ВидЗаявления,стр.Должник,стр.НомерДоговора); 
	  
	  КонецЦикла;	  
	  
	     
	  
	  
	  
	  Сообщить("Печать");
	  
  КонецПроцедуры
  
  
  
  &НаКлиенте
Процедура ПечатьЗаявленияНомерДоговора(видз,долж,номердог) 

	   // получу все записи из справочника видз по должнику - долж
	   
	   
	   Если видз="Заявление на выдачу судебного приказа" Тогда
	   
		    массивр=ПолучитьЗаявлениеНаВыдачуСудебногоПриказаНомерДог(долж,номердог); 
			
			
			Для каждого стрм Из массивр  Цикл
				    
				   ПечатьЗаявлениеНаВыдачуСудебногоПриказа(стрм,долж);
			
			КонецЦикла;
	   КонецЕсли;
	   
	   
	   Если видз="Заявления Обращение О Ходе ИП" Тогда
	        
	         массивр= ПолучитьЗаявленияОбращениеОХодеИПЭкспо(долж);
			
			Для каждого стрм Из массивр  Цикл
				
				
				       ПечатьЗаявленияОбращениеОХодеИП(стрм,долж);
					   
			
			КонецЦикла;

		   
		   
	   КонецЕсли;
	   
	   
	   
	    Если видз="(ЭКСПО)Заявления Обращение О Ходе ИП" Тогда
	       
	    	
	    	массивр= ПолучитьЗаявленияОбращениеОХодеИПЭкспо(долж);
	    	
	    	Для каждого стрм Из массивр  Цикл
	    		
	    		       ПечатьЗаявленияОбращениеОХодеИПЭкспо(стрм,долж);
	    	
	    	КонецЦикла;
	    	   
	   КонецЕсли;
	   
	    		   
	       
	   Если видз="Заявление о возбуждении ИП" Тогда
	   
	    	массивр=ПолучитьЗаявлениеОВозбужденииИП(долж);
	    	
	    	
	       Для каждого стрм Из массивр  Цикл
	    		
	    	    ПечатьЗаявленияОВозбужденииИП(стрм,долж,Впервые);
	    			   
	    	КонецЦикла;

	    	
	    	
	   КонецЕсли;
	   
	

КонецПроцедуры

  

 &НаСервере   
Функция ПолучитьЗаявлениеНаВыдачуСудебногоПриказаНомерДог(долж,дог) Экспорт

	
	   массивВ = Новый Массив;
	
	  
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Ссылка КАК Ссылка,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ВерсияДанных КАК ВерсияДанных,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ПометкаУдаления КАК ПометкаУдаления,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Владелец КАК Владелец,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Код КАК Код,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Наименование КАК Наименование,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.АдресСуда КАК АдресСуда,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ТипШаблона КАК ТипШаблона,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НомерКредитногоДоговора КАК НомерКредитногоДоговора,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаКредитногоДоговора КАК ДатаКредитногоДоговора,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.АдресРегистрацииДолжника КАК АдресРегистрацииДолжника,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаДоговораЦессии КАК ДатаДоговораЦессии,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Выписка КАК Выписка,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ИнформацияОДолге КАК ИнформацияОДолге,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаПодачиДокумента КАК ДатаПодачиДокумента,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаОтветаНаЗаявление КАК ДатаОтветаНаЗаявление,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.МестоРожденияДолж КАК МестоРожденияДолж,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.СуммаКредита КАК СуммаКредита,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.СуммаГосПошлины КАК СуммаГосПошлины,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Предопределенный КАК Предопределенный,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Представление КАК Представление
		|ИЗ
		|	Справочник.ЗаявлениеНаВыдачуСудебногоПриказа КАК ЗаявлениеНаВыдачуСудебногоПриказа
		|ГДЕ
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Владелец = &Владелец
		|	И ЗаявлениеНаВыдачуСудебногоПриказа.НомерКредитногоДоговора.НомерДоговора = &НомерДоговора";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("НомерДоговора", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		
		         	
		данСтруктура=Новый Структура;
		
	  данСтруктура.Вставить("НаименованиеСуда",ВыборкаДетальныеЗаписи.НаименованиеСуда);
	  данСтруктура.Вставить("АдресСуда",ВыборкаДетальныеЗаписи.АдресСуда);
	  данСтруктура.Вставить("НомерКредитногоДоговора",ВыборкаДетальныеЗаписи.НомерКредитногоДоговора);
	  данСтруктура.Вставить("ДатаКредитногоДоговора",ВыборкаДетальныеЗаписи.ДатаКредитногоДоговора);
	  данСтруктура.Вставить("СуммаКредита",ВыборкаДетальныеЗаписи.СуммаКредита);
	  данСтруктура.Вставить("МестоРожденияДолж",ВыборкаДетальныеЗаписи.МестоРожденияДолж);
	  данСтруктура.Вставить("СуммаГосПошлины",ВыборкаДетальныеЗаписи.СуммаГосПошлины);
	  данСтруктура.Вставить("АдресРегистрацииДолжника",ВыборкаДетальныеЗаписи.АдресРегистрацииДолжника);
	  массивВ.Добавить(данСтруктура);

		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	
	     	
	//	данСтруктура=Новый Структура;
	//	
	//  данСтруктура.Вставить("НаименованиеСуда",ВыборкаДетальныеЗаписи.НаименованиеСуда);
	//  данСтруктура.Вставить("АдресСуда",ВыборкаДетальныеЗаписи.АдресСуда);
	//  данСтруктура.Вставить("НомерКредитногоДоговора",ВыборкаДетальныеЗаписи.НомерКредитногоДоговора);
	//  данСтруктура.Вставить("ДатаКредитногоДоговора",ВыборкаДетальныеЗаписи.ДатаКредитногоДоговора);
	//  данСтруктура.Вставить("СуммаКредита",ВыборкаДетальныеЗаписи.СуммаКредита);
	//  данСтруктура.Вставить("МестоРожденияДолж",ВыборкаДетальныеЗаписи.МестоРожденияДолж);
	//  данСтруктура.Вставить("СуммаГосПошлины",ВыборкаДетальныеЗаписи.СуммаГосПошлины);
	//  данСтруктура.Вставить("АдресРегистрацииДолжника",ВыборкаДетальныеЗаписи.АдресРегистрацииДолжника);
	//  массивВ.Добавить(данСтруктура);

	//
	
	
	Возврат  массивВ;
	

КонецФункции // ()


  
  
  
  &НаКлиенте
Процедура ПечатьЗаявления(видз,долж) 

	   // получу все записи из справочника видз по должнику - долж
	   
	   
	   Если видз="Заявление на выдачу судебного приказа" Тогда
	   
		    массивр=ПолучитьЗаявлениеНаВыдачуСудебногоПриказа(долж); 
			
			
			Для каждого стрм Из массивр  Цикл
				    
				   ПечатьЗаявлениеНаВыдачуСудебногоПриказа(стрм,долж);
			
			КонецЦикла;
	   КонецЕсли;
	   
	   
	   Если видз="Заявления Обращение О Ходе ИП" Тогда
		    
		   
		   массивр= ПолучитьЗаявленияОбращениеОХодеИПЭкспо(долж);
			
			Для каждого стрм Из массивр  Цикл
				
				
				       ПечатьЗаявленияОбращениеОХодеИП(стрм,долж);
					   
			
			КонецЦикла;
			   
	   КонецЕсли;
	   
	   
	   
	    Если видз="(ЭКСПО)Заявления Обращение О Ходе ИП" Тогда
		   
			
			массивр= ПолучитьЗаявленияОбращениеОХодеИПЭкспо(долж);
			
			Для каждого стрм Из массивр  Цикл
				
				       ПечатьЗаявленияОбращениеОХодеИПЭкспо(стрм,долж);
			
			КонецЦикла;
			   
	   КонецЕсли;
	   
				   
		   
	   Если видз="Заявление о возбуждении ИП" Тогда
	   
			массивр=ПолучитьЗаявлениеОВозбужденииИП(долж);
			
			
           Для каждого стрм Из массивр  Цикл
				
			    ПечатьЗаявленияОВозбужденииИП(стрм,долж,Впервые);
					   
			КонецЦикла;

			
			
	   КонецЕсли;
	   
	

КонецПроцедуры


&НаКлиенте
Процедура ПечатьЗаявленияОВозбужденииИП(дан,долж,впер)
   
	     адррег= НайтиАдресРегистр(долж);
		  
		  Если адррег="" Тогда
		  
		  	    адррег="Нет адреса регистрации";
		  
		  КонецЕсли;

		  ДвоичныеДанные=ПолучитьФайлИзХран(дан["Вид"],впер);

		  Если ДвоичныеДанные<>Неопределено  Тогда

			  Попытка
				  
				  стрф=ПолучитьФИОИДР(долж);
				  
				  стрбпр = СтрЗаменить(стрф["ФИО"], Символы.НПП, "");  
   		 	      имяД=стрбпр+"_ЗаявОВозбИП";

				  
				  
				  				
				ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
				ВыбранныйФайл = Новый Файл(ИмяФайла);
				Если ВыбранныйФайл.Существует() Тогда
					
					УдалитьФайлы(ВыбранныйФайл);
					
				
				КонецЕсли; 
				
				
				ДвоичныеДанные.Записать(ИмяФайла);
				  
				 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				  MSWord.Documents.Open(ИмяФайла);	
				  MSWordDoc = MSWord.ActiveDocument();
				  
				  
				   MSWordDoc.Bookmarks("НаименованиеОИСП").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(дан["НаименованиеОИСП"]);

				    
				   MSWordDoc.Bookmarks("АдресОИСП").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(дан["АдресОИСП"]);
				   
				   
				   MSWordDoc.Bookmarks("ФИО").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   фио=стрф["ФИО"];
                   MSWordDoc.Application.Selection.TypeText(фио);
				   
				   
				   MSWordDoc.Bookmarks("ДатаРож").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   датаРождения=Формат(стрф["ДатаРождения"], "ДЛФ=DD");

	               MSWordDoc.Application.Selection.TypeText(датаРождения);
				   
				   
				   
				    
				   MSWordDoc.Bookmarks("АдресРегистрации").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(дан["АдресДолжникаДляДок"]);
				   

				   MSWordDoc.Bookmarks("НомерИспЛиста").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   НомерИспЛистаД=дан["НомерИспЛиста"]+" от "+Формат(дан["ДатаИспЛиста"],"ДЛФ=ДД");
				   
                   MSWordDoc.Application.Selection.TypeText(НомерИспЛистаД);
				  

				     //НаименованиеСуда
				   
				   
		           MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   наимсуда=Строка(дан["НаименованиеСуда"]);
				   
                   MSWordDoc.Application.Selection.TypeText(наимсуда+" ");
				   
				   
				     //НомерДела
				   
				   MSWordDoc.Bookmarks("НомерДела").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(дан["НомерДела"]+" ");
				   
				   
				   
				      //СведенияОДолжнике
				   
				   СведенияОДолжнике=фио+", "+ дан["АдресДолжникаДляДок"]+", "+дан["ТелефонДолжДляДок"]+" , "+дан["МестоРаботыДолжДляДок"];
				   
				   MSWordDoc.Bookmarks("СведенияОДолжнике").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(СведенияОДолжнике+" ");
				   
				   
				     
				   //СуммаДолга
				   
				  суммапр= ЧислоПрописью(дан["СуммаДолга"], "Л=ru_RU;ДП=Истина;НП=Истина;", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
				  
				  сумчисло=Строка(дан["СуммаДолга"]);
				  
				  сумчисло=сумчисло+" ( "+ суммапр+" ) ";
				   MSWordDoc.Bookmarks("СуммаДолга").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(сумчисло);

				  

				   
				      //МестоРаботыДолж
				   
				   MSWordDoc.Bookmarks("МестоРаботыДолж").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText("Место работы: "+ дан["МестоРаботыДолжДляДок"]);
				   
				   
				   
				    //ТелефонДолж
				   
				   MSWordDoc.Bookmarks("ТелефонДолж").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText("Телефон: "+ дан["ТелефонДолжДляДок"]);
				   
				   
				      
					//НомерИспЛистПрошу
				   
				   MSWordDoc.Bookmarks("НомерИспЛистПрошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   НомерИспЛистаД=дан["НомерИспЛиста"]+" от "+Формат(дан["ДатаИспЛиста"],"ДЛФ=ДД");
				   
                   MSWordDoc.Application.Selection.TypeText(НомерИспЛистаД);
				
				 

                      //ФИОПрошу
				   
				   MSWordDoc.Bookmarks("ФИОПрошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
                   MSWordDoc.Application.Selection.TypeText(фио+" , "+датаРождения);
				   
				    
				   
				   
				   	//НомерИспЛистаПеречень
				   

				   MSWordDoc.Bookmarks("НомерИспЛистаПеречень").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   НомерИспЛистаД=дан["НомерИспЛиста"]+" от "+Формат(дан["ДатаИспЛиста"],"ДЛФ=ДД");
				   
                   MSWordDoc.Application.Selection.TypeText(" № "+НомерИспЛистаД);
				 
				   
				   
				    //ДатаПодачиЗаявления
				   
         		   MSWordDoc.Bookmarks("ДатаПодачиЗаявления").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Формат(дан["ДатаПодачиЗаявления"],"ДЛФ=ДД"));
				   


				   
 				        MSWord.Visible=0;
						
						//MSWord.Activate();
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

				
				
				
				  
			  
			  Исключение
				  
				  ТекстОшибки = ОписаниеОшибки();
					  
			      Сообщить(ТекстОшибки);
				  Сообщить("Ошибка----- ПечатьЗаявОВИП");

				  
			  КонецПопытки;
			  
			  
			  
		  КонецЕсли;	  
		  
		  
		  
		  
		  
		  
	
	

КонецПроцедуры


&НаСервере
Функция ПолучитьФайлИзХран(видиспд,впер)
	
	   Если видиспд=Перечисления.ВидыИспДокументов.ИсполнительныйЛист И впер  Тогда
	   
	   	      НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию("Заявление о возбуждении ИП (исполнительный лист-впервые)",ИСТИНА);
    	
	   
	   КонецЕсли;
	   
	   
	   Если видиспд=Перечисления.ВидыИспДокументов.ИсполнительныйЛист И НЕ впер  Тогда
	   
	   	      НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию("Заявление о возбуждении ИП (исполнительный лист-повторно)",ИСТИНА);
    	
	   
	   КонецЕсли;
	   
	   
	   Если видиспд=Перечисления.ВидыИспДокументов.СудебныйПриказ И впер  Тогда
	   
	   	      НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию("Заявление о возбуждении ИП (судебный приказ-впервые)",ИСТИНА);
    	
	   
	   КонецЕсли;
	   
	   
	   Если видиспд=Перечисления.ВидыИспДокументов.СудебныйПриказ И НЕ впер  Тогда
	   
	   	      НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию("Заявление о возбуждении ИП (судебный приказ-повторно)",ИСТИНА);
    	
	   
	   КонецЕсли;
	   
	   
	   
	   
	   
	
         Двоичные=Неопределено;
		 
		 Если НайтиШабл<>Неопределено Тогда
		 
		 	 Если НЕ НайтиШабл.ПУСТАЯ() Тогда  
 
        		Хран=НайтиШабл.ФайлШаблона;
        		Двоичные=Хран.Получить(); 
    			
    		КонецЕсли;
			

		 
		 КонецЕсли; 
    	
    	  			
			
			
			
	  Возврат Двоичные;		
	

КонецФункции // ()




&НаКлиенте
Процедура ПечатьЗаявленияОбращениеОХодеИП(дан,долж)

	   //// найти адрес
		  
		  адррег= НайтиАдресРегистр(долж);
		  
		  Если адррег="" Тогда
		  
		  	    адррег="Нет адреса регистрации";
		  
		  КонецЕсли;
		  
		  ДвоичныеДанные=ПолучитьФайлИзХранОбрОХодеИП();
		   

		  Если ДвоичныеДанные<>Неопределено  Тогда
			  
			  Попытка
			  
				  
				        стрф=ПолучитьФИОИДР(долж);
						   
						   
						стрбпр = СтрЗаменить(стрф["ФИО"], Символы.НПП, "");  
				 	    имяД=стрбпр+"_ЗаявОбрОХодеИПЭ";
					 
				  
				    	
						ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
						
						 ВыбранныйФайл = Новый Файл(ИмяФайла);
							Если ВыбранныйФайл.Существует() Тогда
								
								УдалитьФайлы(ВыбранныйФайл);
								
							
							КонецЕсли; 

							
							
									
  	 	    	     ДвоичныеДанные.Записать(ИмяФайла);
			
				  
					  MSWord = новый COMОбъект("Word.Application");
					 //Передаем текущие параметры форм в MSWord
					  MSWord.Documents.Open(ИмяФайла);	
					  MSWordDoc = MSWord.ActiveDocument();
					  
				  	
					  
  					   MSWordDoc.Bookmarks("НаименованиеФССП").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(дан["НаименованиеФССП"]);
					   
					   
					   		
					   MSWordDoc.Bookmarks("АдресФССП").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(дан["АдресФССП"]);
					   
					   
					    фио=стрф["ФИО"];
					
				        датаРождения=Формат(стрф["ДатаРождения"], "ДЛФ=DD");
						
						
						  MSWordDoc.Bookmarks("ФИОИГР").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(фио+","+датаРождения);
					   
					     MSWordDoc.Bookmarks("АдресРегистрации").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(адррег);

					  
					   
					   MSWordDoc.Bookmarks("НаименованиеСуда").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   
					   стрнаимсуда=Строка(дан["НаименованиеСуда"]);
					   
					   MSWordDoc.Application.Selection.TypeText(стрнаимсуда);


					     MSWordDoc.Bookmarks("НомерДелаИДата").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(" "+дан["НомерДелаИДата"]+"  ");
					   
					   
					   
					    MSWordDoc.Bookmarks("ФИОИспонителяИн").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   
                   MSWordDoc.Application.Selection.TypeText(дан["НаименованиеФССП"]+" "+ дан["ФИОИспонителяИн"]);
				   
				   

					   
					   
 					   MSWord.Visible=0;
						
						//MSWord.Activate();
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

					    
				  
			  
			  Исключение
				  
				  ТекстОшибки = ОписаниеОшибки();
					  
				  Сообщить(ТекстОшибки);
				  Сообщить("Ошибка --- ПечатьОбрОХодеИПЭкспо");

			  
			  КонецПопытки;
			  
			  
		  КонецЕсли;
	  

	
	
	

КонецПроцедуры



&НаКлиенте
Процедура ПечатьЗаявленияОбращениеОХодеИПЭкспо(дан,долж)

	   //// найти адрес
		  
		  адррег= НайтиАдресРегистр(долж);
		  
		  Если адррег="" Тогда
		  
		  	    адррег="Нет адреса регистрации";
		  
		  КонецЕсли;
		  
		  ДвоичныеДанные=ПолучитьФайлИзХранОбрОХодеИПЭкспо();
		   

		  Если ДвоичныеДанные<>Неопределено  Тогда
			  
			  Попытка
			  
				  
				        стрф=ПолучитьФИОИДР(долж);
						   
						   
						стрбпр = СтрЗаменить(стрф["ФИО"], Символы.НПП, "");  
				 	    имяД=стрбпр+"_ЗаявОбрОХодеИПЭ";
					 
				  
				    	
						ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
						
						 ВыбранныйФайл = Новый Файл(ИмяФайла);
							Если ВыбранныйФайл.Существует() Тогда
								
								УдалитьФайлы(ВыбранныйФайл);
								
							
							КонецЕсли; 

							
							
									
  	 	    	     ДвоичныеДанные.Записать(ИмяФайла);
			
				  
					  MSWord = новый COMОбъект("Word.Application");
					 //Передаем текущие параметры форм в MSWord
					  MSWord.Documents.Open(ИмяФайла);	
					  MSWordDoc = MSWord.ActiveDocument();
					  
				  	
					  
  					   MSWordDoc.Bookmarks("НаименованиеФССП").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(дан["НаименованиеФССП"]);
					   
					   
					   		
					   MSWordDoc.Bookmarks("АдресФССП").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(дан["АдресФССП"]);
					   
					   
					    фио=стрф["ФИО"];
					
				        датаРождения=Формат(стрф["ДатаРождения"], "ДЛФ=DD");
						
						
						  MSWordDoc.Bookmarks("ФИОИГР").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(фио+","+датаРождения);
					   
					     MSWordDoc.Bookmarks("АдресРегистрации").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(адррег);

					  
					   
					   MSWordDoc.Bookmarks("НаименованиеСуда").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   
					   стрнаимсуда=Строка(дан["НаименованиеСуда"]);
					   
					   MSWordDoc.Application.Selection.TypeText(стрнаимсуда);


					     MSWordDoc.Bookmarks("НомерДелаИДата").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(" "+дан["НомерДелаИДата"]+"  ");
					   
					   
					   
					    MSWordDoc.Bookmarks("ФИОИспонителяИн").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   
				   
                   MSWordDoc.Application.Selection.TypeText(дан["НаименованиеФССП"]+" "+ дан["ФИОИспонителяИн"]);
				   

				       MSWordDoc.Bookmarks("ФИОДолж").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(фио);
					     
				   

					   
					   
 					   MSWord.Visible=0;
						
						//MSWord.Activate();
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

					    
				  
			  
			  Исключение
				  
				  Сообщить("Ошибка --- ПечатьОбрОХодеИПЭкспо");

			  
			  КонецПопытки;
			  
			  
		  КонецЕсли;
	  

	
	
	

КонецПроцедуры


Функция НайтиАдресРегистр(долж)

	  типР=Справочники.ТипыАдресов.НайтиПоНаименованию("Регистрации");
	  
	  стрАдр="";
	  
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Адреса.Адрес КАК Адрес
		|ИЗ
		|	Справочник.Адреса КАК Адреса
		|ГДЕ
		|	Адреса.Владелец = &Владелец
		|	И Адреса.Тип = &Тип";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Тип", типР);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		стрАдр=ВыборкаДетальныеЗаписи.Адрес;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	  
	  Возврат стрАдр;
	

КонецФункции // ()


&НаСервере
Функция ПолучитьФайлИзХранОбрОХодеИП()
	
	     
		 
		 НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию("Обращение о ходе ИП",ИСТИНА);
		 
	
	       
	  	
		Двоичные=Неопределено;
		 
		 Если НайтиШабл<>Неопределено Тогда
		 
		 	 Если НЕ НайтиШабл.ПУСТАЯ() Тогда  
 
        		Хран=НайтиШабл.ФайлШаблона;
        		Двоичные=Хран.Получить(); 
    			
    		КонецЕсли;
			
		 
		 КонецЕсли; 
    	
			
	  Возврат Двоичные;		
	
  КонецФункции // ()


&НаСервере
Функция ПолучитьФайлИзХранОбрОХодеИПЭкспо()
	
	     
		 
		 НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию("ЭКСПО Обращение о ходе ИП",ИСТИНА);
		 
	
	       
	  	
		Двоичные=Неопределено;
		 
		 Если НайтиШабл<>Неопределено Тогда
		 
		 	 Если НЕ НайтиШабл.ПУСТАЯ() Тогда  
 
        		Хран=НайтиШабл.ФайлШаблона;
        		Двоичные=Хран.Получить(); 
    			
    		КонецЕсли;
			
		 
		 КонецЕсли; 
    	
			
	  Возврат Двоичные;		
	
  КонецФункции // ()
  
  
  


&НаСервере
Функция ПолучитьФайлИзХранЗаявлениеНаВыдачуСудебногоПриказа()

	    НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию("Шаблон заявления о выдаче судебного  приказа, решения",ИСТИНА);
		
		Двоичные=Неопределено;
		 
		 Если НайтиШабл<>Неопределено Тогда
		 
		 	 Если НЕ НайтиШабл.ПУСТАЯ() Тогда  
 
        		Хран=НайтиШабл.ФайлШаблона;
        		Двоичные=Хран.Получить(); 
    			
    		КонецЕсли;
			
		 
		 КонецЕсли; 
    	
			
	  Возврат Двоичные;	
	
	

КонецФункции // ()


&НаСервере
Функция ПолучитьФИОИДР (долж)
	
	фиодр=Новый Структура; 
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Наименование КАК Наименование,
		|	Должники.ДатаРождения КАК ДатаРождения
		|ИЗ
		|	Справочник.Должники КАК Должники
		|ГДЕ
		|	Должники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		фиодр.Вставить("ФИО",ВыборкаДетальныеЗаписи.Наименование);
		фиодр.Вставить("ДатаРождения",ВыборкаДетальныеЗаписи.ДатаРождения);
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	Возврат фиодр;

	
	

КонецФункции // ()


&НаКлиенте
Процедура ПечатьЗаявлениеНаВыдачуСудебногоПриказа(дан,долж)

	        ДвоичныеДанные=ПолучитьФайлИзХранЗаявлениеНаВыдачуСудебногоПриказа();

		    страдррег=дан["АдресРегистрацииДолжника"];

		   
		     Если ДвоичныеДанные<>Неопределено  Тогда
				 
				 Попытка
					 
					    стрф=ПолучитьФИОИДР(долж);
						   
						   
						стрбпр = СтрЗаменить(стрф["ФИО"], Символы.НПП, "");  
				 	    имяД=стрбпр+"_ЗаявНаВыдСудПриказа";
					 
					//Shell = Новый COMОбъект("WScript.Shell");
					//дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
					//ИмяФайла=дирМоиД+"\"+имяД+".docx"; 	
					
								
					ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
					
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

				 
				 	ДвоичныеДанные.Записать(ИмяФайла);
				  
					  MSWord = новый COMОбъект("Word.Application");
					 //Передаем текущие параметры форм в MSWord
					  MSWord.Documents.Open(ИмяФайла);	
					  MSWordDoc = MSWord.ActiveDocument();
					  
					  
				 				  
					   MSWordDoc.Bookmarks("НаименованиеСуда").Select();
					   
					   наимсуда=Строка(дан["НаименованиеСуда"]);
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(наимсуда);
					   
					   
					   MSWordDoc.Bookmarks("АдресСуда").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(дан["АдресСуда"]);
					   
					   
					//фиодр=ПолучитьФИОИДР(долж);

					   
					    фио=стрф["ФИО"];
					
				        датаРождения=Формат(стрф["ДатаРождения"], "ДЛФ=DD");
						
						
						
						
					   MSWordDoc.Bookmarks("ФИОДолжИДР").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Size = 8;
					   MSWordDoc.Application.Selection.TypeText(фио+Символы.ПС+датаРождения);
					   
					   
					   
					   //Адрес_должника    можно ли отформатировать
					   
					   MSWordDoc.Bookmarks("Адрес_должника").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   //MSWordDoc.Application.Selection.FitTextWidth=20;
					   
					   MSWordDoc.Application.Selection.Range.ParagraphFormat.Alignment =0;
					   
					   //страдррег=данСтруктура["АдресРегистрацииДолжника"];
					   
					   
					   НужнаяСтрока=СтрЗаменить(страдррег,",,"," "); 
					   
	                   MSWordDoc.Application.Selection.TypeText(НужнаяСтрока);
					   
					   
					   //МестоРожденДолж
					   
					   MSWordDoc.Bookmarks("МестоРожденДолж").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Size = 7;
					   MSWordDoc.Application.Selection.Font.Bold =0;
					   MSWordDoc.Application.Selection.TypeText(дан["МестоРожденияДолж"]);
					   
					   
					   //ФИОДолж
					   
					   MSWordDoc.Bookmarks("ФИОДолж").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(фио);
					   
					   
					   //НомерДИДата
					   
					   
					   
					   номДог=НайтиНомерДог(дан["НомерКредитногоДоговора"]);
					   
					   номерДИДата=номДог+" от "+Формат(дан["ДатаКредитногоДоговора"],"ДЛФ=DD");
					   
					   
					   
					   MSWordDoc.Bookmarks("НомерДИДата").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(номерДИДата);
					  
					   
					   
					   //СуммаКркдита
					   
					   MSWordDoc.Bookmarks("СуммаКркдита").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(Строка(дан["СуммаКредита"])+" рублей");
					   
					   
					   //НомерДоговораИДата

					   MSWordDoc.Bookmarks("НомерДоговораИДата").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(номерДИДата);
					  

					   //ФИОДолжника
					   
					   MSWordDoc.Bookmarks("ФИОДолжника").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(фио);
					   
					   
					   //НомерДогИДата_2
					   
  				       MSWordDoc.Bookmarks("НомерДогИДата_2").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(номерДИДата);
					  

					   //ВсегоЗадолж
					   
					   
					   номдог= дан["НомерКредитногоДоговора"];
					   
					   всегоЗадолж=НайтиДолгДолжника(долж,номдог);
					   
					   
					    
				      суммапр= ЧислоПрописью(всегоЗадолж, "Л=ru_RU;ДП=Истина;НП=Истина;", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
				  
				      сумчисло=Формат(Строка(всегоЗадолж),"ЧДЦ=2");
				  
				      сумчисло=сумчисло+" ( "+ суммапр+" ) ";

					   

					   MSWordDoc.Bookmarks("ВсегоЗадолж").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(сумчисло);
					   
					   
					   //СуммаЗадПер
					   MSWordDoc.Bookmarks("СуммаЗадПер").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(Формат(Строка(всегоЗадолж),"ЧДЦ=2")+" ");
					   
					   
					   //Госпошлина
					   
					   
					   госп= дан["СуммаГосПошлины"];
					   
					   MSWordDoc.Bookmarks("Госпошлина").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(Формат(Строка(госп),"ЧДЦ=2")+" рублей.");
					   
					   
					   
					   //ОстатокПросроченЗад
					   
					   прзадпоосндол=НайтиПросроченныйОсновнойДолг(долж,номдог);
					   
					   
                       суммапр= ЧислоПрописью(прзадпоосндол, "Л=ru_RU;ДП=Истина;НП=Истина;", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
				    
					   сумчи=Строка(прзадпоосндол);
					   стрф=Формат(сумчи,"ЧДЦ=2");
					   стрф=ДобавитьНоль(стрф);
			  	       сумчислоПросроченЗад=стрф+" ( "+ суммапр+" ) ";
  					   
					   MSWordDoc.Bookmarks("ОстатокПросроченЗад").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
					   
					   
					   MSWordDoc.Application.Selection.TypeText(сумчислоПросроченЗад);
					  					   
					   					   
					   //ОстатокПоПроц
					   
					   прзадпоосндол=НайтиПросроченныеПроценты(долж,номдог);
                       суммапр= ЧислоПрописью(прзадпоосндол, "Л=ru_RU;ДП=Истина;НП=Истина;", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
				    
					   сумчи=Строка(прзадпоосндол);
					   стрф=Формат(сумчи,"ЧДЦ=2");
					   стрф=ДобавитьНоль(стрф);
			  	       сумчислоОстатокПоПроц=стрф+" ( "+ суммапр+" ) ";

					   
					   MSWordDoc.Bookmarks("ОстатокПоПроц").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(сумчислоОстатокПоПроц);
					   

					   
					   //ОстатокНеустойка
					   
					    прзадпнеуст= НайтиНеустойка(долж,номдог);
						суммапр= ЧислоПрописью(прзадпнеуст, "Л=ru_RU;ДП=Истина;НП=Истина;", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
				    
					   сумчи=Строка(прзадпнеуст);
					   стрф=Формат(сумчи,"ЧДЦ=2");
					   стрф=ДобавитьНоль(стрф);
			  	       сумчислоОстатокНеустойка=стрф+" ( "+ суммапр+" ) ";

					   
					   MSWordDoc.Bookmarks("ОстатокНеустойка").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(сумчислоОстатокНеустойка);
					   
					   
					   
					   
					   
					   //ФИОД_Прошу
					   
					    MSWordDoc.Bookmarks("ФИОД_Прошу").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(фио);
					   
					   
					   //СуммаЗад_Прошу
					   
					   
					   
					  
                       MSWordDoc.Bookmarks("СуммаЗад_Прошу").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   //MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(сумчисло);
					   
					    
					    
					   
					   //НомерДогИдата_Прошу
					   
					   MSWordDoc.Bookmarks("НомерДогИдата_Прошу").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
					   MSWordDoc.Application.Selection.Font.Underline=1;

	                   MSWordDoc.Application.Selection.TypeText(номерДИДата+" ");
					  
					   
					   //ФИО_Прошу_2
					   
					   MSWordDoc.Bookmarks("ФИО_Прошу_2").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(фио+" ");
					   
					   //СуммаПошлина_прошу
					   
					   
					  суммапр= ЧислоПрописью(дан["СуммаГосПошлины"], "Л=ru_RU;ДП=Истина;НП=Истина;", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
				  
				      сумчисло=Строка(дан["СуммаГосПошлины"]);
				  
				      сумчислоПошлина_прошу=сумчисло+" ( "+ суммапр+" ) ";

					   
					  
					   MSWordDoc.Bookmarks("СуммаПошлина_прошу").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.Font.Bold =1;
	                   MSWordDoc.Application.Selection.TypeText(сумчислоПошлина_прошу);
					   
					   
					   
					   //НомерКредДогИДата_Прилож
					   MSWordDoc.Bookmarks("НомерКредДогИДата_Прилож").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   
					   
	                   MSWordDoc.Application.Selection.TypeText(номерДИДата+"(копия)");
					   
					   
					   
					   
					
						MSWord.Visible=0;
						
						//MSWord.Activate();
						
						MSWordDoc.Application.PrintOut();
						
						//MSWordDoc.SaveAs2("\\tsclient\C\1\1234567.doc");
						
						//  MsWord.PrintOut(0, , 4, , , , , 1, "1-2", , False, True);
						// PrintOut (Background, Append, Range, OutputFileName, From, To, Item, Copies, Pages, PageType, PrintToFile, Collate, FileName)
						
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

						
					
						
				 
				 Исключение
					 
					  ТекстОшибки = ОписаниеОшибки();
					  
					  Сообщить(ТекстОшибки);
					  Сообщить("Ошибка - ПечатьЗаявлениеНаВыдачуСудебногоПриказа");
					 
				 КонецПопытки;
				 
									
				 
			 КонецЕсли;	  
		  
		    
		  
	

	
	
	
КонецПроцедуры



&НаСервере
Функция НайтиПросроченныеПроценты(долж,номд)

	     	суммаДолга=0;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДоговоровСрезПоследних.Период КАК Период,
		|	ДанныеДоговоровСрезПоследних.ПросроченныеПроценты КАК ПросроченныеПроценты
		|ИЗ
		|	РегистрСведений.ДанныеДоговоров.СрезПоследних(&МоментВремени, ) КАК ДанныеДоговоровСрезПоследних
		|ГДЕ
		|	ДанныеДоговоровСрезПоследних.Договор.Владелец = &Владелец
		|	И ДанныеДоговоровСрезПоследних.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Договор", номд);
	Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		   суммаДолга=ВыборкаДетальныеЗаписи.ПросроченныеПроценты;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА




	//суммаДолга=ВыборкаДетальныеЗаписи.ПросроченныеПроценты;


	   //суммаДолга=суммаДолга+ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
		//суммаДолга=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	   Возврат суммаДолга;

	

КонецФункции // ()




&НаСервере
Функция НайтиПросроченныйОсновнойДолг(долж,номдог)

	
	 суммаДолга=0;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДоговоровСрезПоследних.Период КАК Период,
		|	ДанныеДоговоровСрезПоследних.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг
		|ИЗ
		|	РегистрСведений.ДанныеДоговоров.СрезПоследних(&МоментВремени, ) КАК ДанныеДоговоровСрезПоследних
		|ГДЕ
		|	ДанныеДоговоровСрезПоследних.Договор.Владелец = &Владелец
		|	И ДанныеДоговоровСрезПоследних.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Договор", номдог);
	Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		  суммаДолга=ВыборкаДетальныеЗаписи.ПросроченныйОсновнойДолг;

	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА






	   //суммаДолга=суммаДолга+ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
		//суммаДолга=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	   Возврат суммаДолга;

	

КонецФункции // ()




&НаСервере
Функция НайтиНомерДог(дог)

	номер="";
	
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.НомерДоговора КАК НомерДоговора
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		 номер=ВыборкаДетальныеЗаписи.НомерДоговора;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	   Возврат номер;

КонецФункции // ()



&НаКлиенте
Функция ДобавитьНоль(стр)

	поз=Найти(стр,",");
	
	Если поз=0 Тогда
		 
		поз=Найти(стр,".");
		
		длстр=СтрДлина(стр);
		
		
		Если (длстр-поз)<2 Тогда
		
			   стр=стр+"0";
		
		КонецЕсли;
	
	Иначе
		
		длстр=СтрДлина(стр);
		
		
		Если (длстр-поз)<2 Тогда
		
			   стр=стр+"0";
		
		КонецЕсли;
	 	
	
	КонецЕсли;
	
	 Возврат стр;

КонецФункции // ()


&НаСервере
Функция НайтиНеустойка(долж,номд)

	         	суммаДолга=0;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДоговоровСрезПоследних.Период КАК Период,
		|	ДанныеДоговоровСрезПоследних.Неустойка КАК Неустойка
		|ИЗ
		|	РегистрСведений.ДанныеДоговоров.СрезПоследних(&МоментВремени, ) КАК ДанныеДоговоровСрезПоследних
		|ГДЕ
		|	ДанныеДоговоровСрезПоследних.Договор.Владелец = &Владелец
		|	И ДанныеДоговоровСрезПоследних.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Договор", номд);
	Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		суммаДолга=ВыборкаДетальныеЗаписи.Неустойка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	
		//суммаДолга=ВыборкаДетальныеЗаписи.Неустойка;

	   //суммаДолга=суммаДолга+ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
		//суммаДолга=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	   Возврат суммаДолга;

	

КонецФункции // ()



&НаСервере
 Функция НайтиДолгДолжника(долж,дог)

	 
	 //  переработать - найти долг по договору   
	 
	суммаДолга=0;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДоговоровСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность,
		|	ДанныеДоговоровСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.ДанныеДоговоров.СрезПоследних(&МоментВремени, ) КАК ДанныеДоговоровСрезПоследних
		|ГДЕ
		|	ДанныеДоговоровСрезПоследних.Договор.Владелец = &Владелец
		|	И ДанныеДоговоровСрезПоследних.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("Договор", дог);
	Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		суммаДолга=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА





	   //суммаДолга=суммаДолга+ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
		//суммаДолга=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	   Возврат суммаДолга;

КонецФункции // ()




//ЗаявлениеОВозбужденииИП

&НаСервере
Функция ПолучитьЗаявлениеОВозбужденииИП(долж)

    	массивОВозбуждИП = Новый Массив;

		
		   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеОВозбужденииИП.Ссылка КАК Ссылка,
		|	ЗаявлениеОВозбужденииИП.ВерсияДанных КАК ВерсияДанных,
		|	ЗаявлениеОВозбужденииИП.ПометкаУдаления КАК ПометкаУдаления,
		|	ЗаявлениеОВозбужденииИП.Владелец КАК Владелец,
		|	ЗаявлениеОВозбужденииИП.Код КАК Код,
		|	ЗаявлениеОВозбужденииИП.Наименование КАК Наименование,
		|	ЗаявлениеОВозбужденииИП.НаименованиеОИСП КАК НаименованиеОИСП,
		|	ЗаявлениеОВозбужденииИП.НомерИспЛиста КАК НомерИспЛиста,
		|	ЗаявлениеОВозбужденииИП.ДатаИспЛиста КАК ДатаИспЛиста,
		|	ЗаявлениеОВозбужденииИП.НаименованиеСуда КАК НаименованиеСуда,
		|	ЗаявлениеОВозбужденииИП.НомерДелаСуд КАК НомерДелаСуд,
		|	ЗаявлениеОВозбужденииИП.СуммаДолга КАК СуммаДолга,
		|	ЗаявлениеОВозбужденииИП.ДатаПодачиЗаявления КАК ДатаПодачиЗаявления,
		|	ЗаявлениеОВозбужденииИП.Вид КАК Вид,
		|	ЗаявлениеОВозбужденииИП.АдресОИСП КАК АдресОИСП,
		|	ЗаявлениеОВозбужденииИП.АдресДолжникаДляДок КАК АдресДолжникаДляДок,
		|	ЗаявлениеОВозбужденииИП.МестоРаботыДолжДляДок КАК МестоРаботыДолжДляДок,
		|	ЗаявлениеОВозбужденииИП.ТелефонДолжДляДок КАК ТелефонДолжДляДок,
		|	ЗаявлениеОВозбужденииИП.Предопределенный КАК Предопределенный,
		|	ЗаявлениеОВозбужденииИП.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	ЗаявлениеОВозбужденииИП.Представление КАК Представление
		|ИЗ
		|	Справочник.ЗаявлениеОВозбужденииИП КАК ЗаявлениеОВозбужденииИП
		|ГДЕ
		|	ЗаявлениеОВозбужденииИП.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		          данСтруктура=Новый Структура;
	  
				  данСтруктура.Вставить("НаименованиеОИСП",ВыборкаДетальныеЗаписи.НаименованиеОИСП);
				  
				  данСтруктура.Вставить("АдресОИСП",ВыборкаДетальныеЗаписи.АдресОИСП);
				  
				  данСтруктура.Вставить("НомерИспЛиста",ВыборкаДетальныеЗаписи.НомерИспЛиста);
				  
				  данСтруктура.Вставить("ДатаИспЛиста",ВыборкаДетальныеЗаписи.ДатаИспЛиста);
				  
				  данСтруктура.Вставить("НаименованиеСуда",ВыборкаДетальныеЗаписи.НаименованиеСуда);
				  
				  данСтруктура.Вставить("НомерДела",ВыборкаДетальныеЗаписи.НомерДелаСуд);
				  
				  данСтруктура.Вставить("АдресДолжникаДляДок",ВыборкаДетальныеЗаписи.АдресДолжникаДляДок);
				  
				  данСтруктура.Вставить("МестоРаботыДолжДляДок",ВыборкаДетальныеЗаписи.МестоРаботыДолжДляДок);
				  
				  данСтруктура.Вставить("ТелефонДолжДляДок",ВыборкаДетальныеЗаписи.ТелефонДолжДляДок);
				  
				  
				  данСтруктура.Вставить("СуммаДолга",ВыборкаДетальныеЗаписи.СуммаДолга);
				  
				  данСтруктура.Вставить("ДатаПодачиЗаявления",ВыборкаДетальныеЗаписи.ДатаПодачиЗаявления);
				  
				  данСтруктура.Вставить("Вид",ВыборкаДетальныеЗаписи.Вид);
				  

				  массивОВозбуждИП.Добавить(данСтруктура);
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	            Возврат массивОВозбуждИП;

	
	

КонецФункции // ()




 


//ЗаявленияОбращениеОХодеИП

&НаСервере
Функция ПолучитьЗаявленияОбращениеОХодеИПЭкспо(долж) Экспорт
	
	 массивХодИП = Новый Массив;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявленияОбращениеОХодеИП.Ссылка КАК Ссылка,
		|	ЗаявленияОбращениеОХодеИП.ВерсияДанных КАК ВерсияДанных,
		|	ЗаявленияОбращениеОХодеИП.ПометкаУдаления КАК ПометкаУдаления,
		|	ЗаявленияОбращениеОХодеИП.Владелец КАК Владелец,
		|	ЗаявленияОбращениеОХодеИП.Код КАК Код,
		|	ЗаявленияОбращениеОХодеИП.Наименование КАК Наименование,
		|	ЗаявленияОбращениеОХодеИП.НаименованиеФССП КАК НаименованиеФССП,
		|	ЗаявленияОбращениеОХодеИП.АдресФССП КАК АдресФССП,
		|	ЗаявленияОбращениеОХодеИП.НаименованиеСуда КАК НаименованиеСуда,
		|	ЗаявленияОбращениеОХодеИП.НомерДелаИДата КАК НомерДелаИДата,
		|	ЗаявленияОбращениеОХодеИП.ФИОИспонителяИн КАК ФИОИспонителяИн,
		|	ЗаявленияОбращениеОХодеИП.НомерИПИДата КАК НомерИПИДата,
		|	ЗаявленияОбращениеОХодеИП.Предопределенный КАК Предопределенный,
		|	ЗаявленияОбращениеОХодеИП.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	ЗаявленияОбращениеОХодеИП.Представление КАК Представление
		|ИЗ
		|	Справочник.ЗаявленияОбращениеОХодеИП КАК ЗаявленияОбращениеОХодеИП
		|ГДЕ
		|	ЗаявленияОбращениеОХодеИП.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		          
	     данСтруктура=Новый Структура;
	  
	     данСтруктура.Вставить("НаименованиеФССП",ВыборкаДетальныеЗаписи.НаименованиеФССП);
	     данСтруктура.Вставить("АдресФССП",ВыборкаДетальныеЗаписи.АдресФССП);
		 данСтруктура.Вставить("НаименованиеСуда",ВыборкаДетальныеЗаписи.НаименованиеСуда);
	     данСтруктура.Вставить("НомерДелаИДата",ВыборкаДетальныеЗаписи.НомерДелаИДата);
		 
		 
		 
		 данСтруктура.Вставить("ФИОИспонителяИн",ВыборкаДетальныеЗаписи.ФИОИспонителяИн);
	  
	     данСтруктура.Вставить("НомерИПИДата",ВыборкаДетальныеЗаписи.НомерИПИДата);
		 
		 массивХодИП.Добавить(данСтруктура);


		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат массивХодИП;
	
	
	

КонецФункции // ()
 
 

 &НаСервере   
Функция ПолучитьЗаявлениеНаВыдачуСудебногоПриказа(долж) Экспорт

	
	   массивВ = Новый Массив;
	
	  
	
	         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Ссылка КАК Ссылка,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ВерсияДанных КАК ВерсияДанных,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ПометкаУдаления КАК ПометкаУдаления,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Владелец КАК Владелец,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Код КАК Код,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Наименование КАК Наименование,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.АдресСуда КАК АдресСуда,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ТипШаблона КАК ТипШаблона,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НомерКредитногоДоговора КАК НомерКредитногоДоговора,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаКредитногоДоговора КАК ДатаКредитногоДоговора,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.АдресРегистрацииДолжника КАК АдресРегистрацииДолжника,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаДоговораЦессии КАК ДатаДоговораЦессии,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Выписка КАК Выписка,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ИнформацияОДолге КАК ИнформацияОДолге,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаПодачиДокумента КАК ДатаПодачиДокумента,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаОтветаНаЗаявление КАК ДатаОтветаНаЗаявление,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.МестоРожденияДолж КАК МестоРожденияДолж,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.СуммаКредита КАК СуммаКредита,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.СуммаГосПошлины КАК СуммаГосПошлины,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Предопределенный КАК Предопределенный,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Представление КАК Представление
		|ИЗ
		|	Справочник.ЗаявлениеНаВыдачуСудебногоПриказа КАК ЗаявлениеНаВыдачуСудебногоПриказа
		|ГДЕ
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		данСтруктура=Новый Структура;
		
      данСтруктура.Вставить("НаименованиеСуда",ВыборкаДетальныеЗаписи.НаименованиеСуда);
	  данСтруктура.Вставить("АдресСуда",ВыборкаДетальныеЗаписи.АдресСуда);
	  данСтруктура.Вставить("НомерКредитногоДоговора",ВыборкаДетальныеЗаписи.НомерКредитногоДоговора);
	  данСтруктура.Вставить("ДатаКредитногоДоговора",ВыборкаДетальныеЗаписи.ДатаКредитногоДоговора);
	  данСтруктура.Вставить("СуммаКредита",ВыборкаДетальныеЗаписи.СуммаКредита);
	  данСтруктура.Вставить("МестоРожденияДолж",ВыборкаДетальныеЗаписи.МестоРожденияДолж);
	  данСтруктура.Вставить("СуммаГосПошлины",ВыборкаДетальныеЗаписи.СуммаГосПошлины);
	  данСтруктура.Вставить("АдресРегистрацииДолжника",ВыборкаДетальныеЗаписи.АдресРегистрацииДолжника);
      массивВ.Добавить(данСтруктура);
	  
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат  массивВ;
	

КонецФункции // ()


 &НаСервере   
Функция ПолучитьЗаявлениеНаВыдачуСудебногоПриказаПоДоговору(долж, дог) Экспорт

	
	   массивВ = Новый Массив;
	  
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Ссылка КАК Ссылка,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ВерсияДанных КАК ВерсияДанных,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ПометкаУдаления КАК ПометкаУдаления,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Владелец КАК Владелец,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Код КАК Код,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Наименование КАК Наименование,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.АдресСуда КАК АдресСуда,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ТипШаблона КАК ТипШаблона,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НомерКредитногоДоговора КАК НомерКредитногоДоговора,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаКредитногоДоговора КАК ДатаКредитногоДоговора,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.АдресРегистрацииДолжника КАК АдресРегистрацииДолжника,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаДоговораЦессии КАК ДатаДоговораЦессии,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Выписка КАК Выписка,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ИнформацияОДолге КАК ИнформацияОДолге,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаПодачиДокумента КАК ДатаПодачиДокумента,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ДатаОтветаНаЗаявление КАК ДатаОтветаНаЗаявление,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.МестоРожденияДолж КАК МестоРожденияДолж,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.СуммаКредита КАК СуммаКредита,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.СуммаГосПошлины КАК СуммаГосПошлины,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Предопределенный КАК Предопределенный,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных,
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Представление КАК Представление
		|ИЗ
		|	Справочник.ЗаявлениеНаВыдачуСудебногоПриказа КАК ЗаявлениеНаВыдачуСудебногоПриказа
		|ГДЕ
		|	ЗаявлениеНаВыдачуСудебногоПриказа.Владелец = &Владелец
		|	И ЗаявлениеНаВыдачуСудебногоПриказа.НомерКредитногоДоговора.НомерДоговора = &НомерДоговора";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("НомерДоговора", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
			данСтруктура=Новый Структура;
		
      данСтруктура.Вставить("НаименованиеСуда",ВыборкаДетальныеЗаписи.НаименованиеСуда);
	  данСтруктура.Вставить("АдресСуда",ВыборкаДетальныеЗаписи.АдресСуда);
	  данСтруктура.Вставить("НомерКредитногоДоговора",ВыборкаДетальныеЗаписи.НомерКредитногоДоговора);
	  данСтруктура.Вставить("ДатаКредитногоДоговора",ВыборкаДетальныеЗаписи.ДатаКредитногоДоговора);
	  данСтруктура.Вставить("СуммаКредита",ВыборкаДетальныеЗаписи.СуммаКредита);
	  данСтруктура.Вставить("МестоРожденияДолж",ВыборкаДетальныеЗаписи.МестоРожденияДолж);
	  данСтруктура.Вставить("СуммаГосПошлины",ВыборкаДетальныеЗаписи.СуммаГосПошлины);
	  данСтруктура.Вставить("АдресРегистрацииДолжника",ВыборкаДетальныеЗаписи.АдресРегистрацииДолжника);
      массивВ.Добавить(данСтруктура);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	
	Возврат  массивВ;
	

КонецФункции // ()


&НаКлиенте
Процедура ВидЗаявленияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	
	Если ВыбранноеЗначение="Заявление о возбуждении ИП" Тогда
		
		   Элементы.Впервые.Видимость=Истина;
	Иначе	
		
		   Элементы.Впервые.Видимость=Ложь;
		   
		   Впервые=Ложь;
		   
	
	КонецЕсли; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	
	       // запишу врем файл и передам его  обработчику
	  
     	   Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		   имяэксел=Объект.ИмяФайла;
		   
		   Если Х2=Истина  Тогда
			   
			    прогрпуть="D:\public\Distr";
		 
		        имяфайлатемп=прогрпуть+"\должВыборДляПечати.txt";

				
				имяфайлатемпответ=прогрпуть+"\должВыборДляПечати_out.txt";

    			 программаОбр=прогрпуть+"\ParseExcel86.exe";
		   
		   Иначе
			   
			   имяфайлатемп=дирМоиД+"\должВыборДляПечати.txt";
			   
			   имяфайлатемпответ=дирМоиД+"\должВыборДляПечати_out.txt";

			   программаОбр=дирМоиД+"\ExcelParse.exe";
			   
		   КонецЕсли; 
		   
		    Если Объект.ИмяФайла<>""  Тогда
				
				ФайлТемп = Новый ЗаписьТекста(имяфайлатемп);

			
			   ФайлТемп.ЗаписатьСтроку("ФИО");
			   ФайлТемп.ЗаписатьСтроку("Номер договора");
			   ФайлТемп.ЗаписатьСтроку(Объект.ИмяФайла);
              
			
		       ФайлТемп.Закрыть();
			  
			  
			  
			   программаОбр=программаОбр+" "+"15";

			   Shell.Run(программаОбр,0, 1);
			   
			   мСтрокФайла = Новый Массив();

			    ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
			   Если ВыбранныйФайл.Существует() Тогда

				        	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
														
							Строка = ПрочитанныйТекст.ПрочитатьСтроку();

							Если Строка <> Неопределено Тогда
								   мСтрокФайла.Добавить(Строка);
							КонецЕсли;	
							
							Пока Строка <> Неопределено Цикл
		                          Строка = ПрочитанныйТекст.ПрочитатьСтроку();
							  	   мСтрокФайла.Добавить(Строка);
							     
							КонецЦикла;

							
						  Для каждого стрд  Из мСтрокФайла Цикл
							  
							    Если стрд<>Неопределено Тогда
								
									    должДанныет=РазбитьСтроку(стрд);

							      
								  	    Запись= ИзФайла.Добавить();
							  
									    Запись.Должник=должДанныет["Должник"];
									  
									    Запись.НоменДоговора=должДанныет["НомерДоговора"];

								
								КонецЕсли;
															 					  
							  
							КонецЦикла;	 
							
							
							Для каждого должФ Из ИзФайла Цикл
							
								ссылкаДолж=ДолжникСсылка(должФ.Должник, должФ.НоменДоговора);

								Если ссылкаДолж<>Неопределено Тогда
									
									ЗаписьТЧ=ТЧ.Добавить();
									ЗаписьТЧ.Должник=ссылкаДолж;
									
									ЗаписьТЧ.НомерДоговора= должФ.НоменДоговора;
									
									
								
								КонецЕсли;
								
							
							КонецЦикла;	
								

					  
				   
			 КонецЕсли;
				
			
			Иначе
			
				Сообщить("Выберите файл...");
			
			КонецЕсли;
		   
КонецПроцедуры


&НаСервере
Функция ДолжникСсылка(долж, догном)
	
	    должСсылка=Неопределено;
	
								
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Должники.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.Должники КАК Должники
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Договоры КАК Договоры
					|		ПО Договоры.Владелец = Должники.Ссылка
					|ГДЕ
					|	Договоры.НомерДоговора = &НомерДоговора
					|	И Должники.Наименование = &Наименование";
				
				Запрос.УстановитьПараметр("Наименование", долж);
				Запрос.УстановитьПараметр("НомерДоговора", догном);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					должСсылка=ВыборкаДетальныеЗаписи.Ссылка;
					
				КонецЦикла;
				
				
	   Возврат должСсылка;

				
КонецФункции // ()




&НаКлиенте
Функция РазбитьСтроку(стрк)

  	     должДанные=Новый Структура;

	
	Разделитель = Символ(240);
    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
				
		  Если Индекс = 1 Тогда
		  
		  	     должДанные.Вставить("Должник",СтрПолучитьСтроку(Строки, Индекс));

		  
		  КонецЕсли;
		  
		  Если Индекс = 2 Тогда
		  
		  	     должДанные.Вставить("НомерДоговора",СтрПолучитьСтроку(Строки, Индекс));

		  
		  КонецЕсли;
		  
		
		
    КонецЦикла;
	
	
	
	Возврат должДанные; 
	
КонецФункции // ()

		
		

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	  	
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= Объект.ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));

	
	
КонецПроцедуры

 
&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 Объект.ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Х2=Истина;
	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТест(Команда)
	// Вставить содержимое обработчика.
	
	  ПараметрыПодбора = Новый Структура;
	  ПараметрыПодбора.Вставить("ЗакрыватьПриВыборе", Истина);
      ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
	  
	  
	  ОписаниеВыбора = Новый ОписаниеОповещения("ОбработатьВыборДолжникаДоговор",ЭтаФорма); 
	  
	  
	 ОткрытьФорму("Справочник.Должники.Форма.ФормаВыбораНомерДоговора",ПараметрыПодбора,,,,,ОписаниеВыбора,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	  

	
	
	
КонецПроцедуры

  
  
&НаКлиенте
Процедура ОбработатьВыборДолжникаДоговор(РезультатЗакрытия,ДопПараметры) Экспорт

Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
  Возврат;
КонецЕсли;

       инд=0;
	
	  Для каждого стр Из РезультатЗакрытия Цикл
		  
		  
		  
		 должник= НайтиДолжникаПоДоговору(РезультатЗакрытия[инд]);
		  
		 новСтр=ТЧ.Добавить();
		 новСтр.Должник=должник;
		 
		 новСтр.НомерДоговора=НайтиНомерДоговораПоСсылке(РезультатЗакрытия[инд]);
		 
	      инд=инд+1;
	  
	  КонецЦикла;
	
	

  КонецПроцедуры
  
  
  
&НаСервере
Функция НайтиНомерДоговораПоСсылке(ссылкаДог)
	номерДог="";
	
	
	       	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.НомерДоговора КАК НомерДоговора
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ссылкаДог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		номерДог=ВыборкаДетальныеЗаписи.НомерДоговора;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат номерДог;

КонецФункции // ()

  
  
  
&НаСервере
Функция НайтиДолжникаПоДоговору(догов)

	   должник=Неопределено;
	   владелец=догов.Владелец;
	
	
	          	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Должники КАК Должники
		|ГДЕ
		|	Должники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",владелец );
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		  должник=ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

    Возврат должник;	

КонецФункции // ()

  



  
  
