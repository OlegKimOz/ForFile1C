&НаКлиенте
Процедура ОбработатьКомандуФормы(Команда)
	Если Команда.Имя = "Пересчитать" Тогда
		Пересчитать();
	ИначеЕсли Команда.Имя = "Распределить" Тогда
		Распределить();
	ИначеЕсли Команда.Имя = "СоздатьКонтакт" Тогда
		СоздатьКонтакт();
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура Пересчитать()
	ОтборПоСтатусу = Объект.ОтборПоСтатусу;
	ОтборПоСотруднику = Объект.ОтборПоСотруднику;
	ОтборПоОтделу = Объект.ОтборПоОтделу;
	НеПривязанные = Объект.НеПривязанные;
	
	МассивСотрудников = Новый Массив;
	Если ОтборПоОтделу Тогда
		ЗапросОтдел = Новый Запрос;
		ЗапросОтдел.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиОтделовСрезПоследних.Сотрудник
		|ИЗ
		|	РегистрСведений.СотрудникиОтделов.СрезПоследних КАК СотрудникиОтделовСрезПоследних
		|ГДЕ
		|	СотрудникиОтделовСрезПоследних.Отдел = &Отдел";
		ЗапросОтдел.УстановитьПараметр("Отдел", Объект.Отдел);
		МассивСотрудников = ЗапросОтдел.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВыбДата", Объект.ВыбДата);
	Запрос.УстановитьПараметр("Сотрудники", Объект.Должники);
	Запрос.УстановитьПараметр("Статус", Объект.Статус);
	Если ОтборПоСотруднику Тогда
		МассивСотрудников.Добавить(Объект.Сотрудник);
	КонецЕсли;
	Запрос.УстановитьПараметр("Сотрудник", МассивСотрудников);
	
	Если Объект.ВсеРеестры Тогда
		Если (ОтборПоСотруднику ИЛИ ОтборПоОтделу) И (НЕ ОтборПоСтатусу) Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	ПривязкаСотрудникСрезПоследних.Должник,
			               |	ВложенныйЗапрос.Договор
			               |ИЗ
			               |	РегистрСведений.ПривязкаСотрудник.СрезПоследних(&ВыбДата, ) КАК ПривязкаСотрудникСрезПоследних
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			               |			РеестрДолжники.Должник КАК Должник,
			               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеестрДолжники.Ссылка) КАК Ссылка,
			               |			РеестрДолжники.Договор КАК Договор
			               |		ИЗ
			               |			Документ.Реестр.Должники КАК РеестрДолжники
			               |		ГДЕ
			               |			РеестрДолжники.Ссылка.Проведен = ИСТИНА
			               |			И РеестрДолжники.Ссылка.ДатаПередачи <= &ВыбДата
			               |			И РеестрДолжники.Ссылка.ДатаВозврата > &ВыбДата
			               |		
			               |		СГРУППИРОВАТЬ ПО
			               |			РеестрДолжники.Должник,
			               |			РеестрДолжники.Договор) КАК ВложенныйЗапрос
			               |		ПО (ВложенныйЗапрос.Должник = ПривязкаСотрудникСрезПоследних.Должник)
			               |ГДЕ
			               |	ПривязкаСотрудникСрезПоследних.Сотрудник В (&Сотрудник)";
		ИначеЕсли (НЕ (ОтборПоСотруднику ИЛИ ОтборПоОтделу)) И ОтборПоСтатусу Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	СтатусыДолжниковСрезПоследних.Должник,
			               |	Договоры.Ссылка КАК Договор
			               |ИЗ
			               |	РегистрСведений.СтатусыДолжников.СрезПоследних(&ВыбДата, ) КАК СтатусыДолжниковСрезПоследних
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Договоры КАК Договоры
			               |		ПО СтатусыДолжниковСрезПоследних.Должник = Договоры.Владелец
			               |ГДЕ
			               |	СтатусыДолжниковСрезПоследних.Статус = &Статус";
		ИначеЕсли (ОтборПоСотруднику ИЛИ ОтборПоОтделу) И ОтборПоСтатусу Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	ПривязкаСотрудникСрезПоследних.Должник,
			               |	ВложенныйЗапрос.Договор
			               |ИЗ
			               |	РегистрСведений.ПривязкаСотрудник.СрезПоследних(&ВыбДата, ) КАК ПривязкаСотрудникСрезПоследних
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			               |			РеестрДолжники.Должник КАК Должник,
			               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РеестрДолжники.Ссылка) КАК Ссылка,
			               |			РеестрДолжники.Договор КАК Договор
			               |		ИЗ
			               |			Документ.Реестр.Должники КАК РеестрДолжники
			               |		ГДЕ
			               |			РеестрДолжники.Ссылка.Проведен = ИСТИНА
			               |			И РеестрДолжники.Ссылка.ДатаПередачи <= &ВыбДата
			               |			И РеестрДолжники.Ссылка.ДатаВозврата > &ВыбДата
			               |		
			               |		СГРУППИРОВАТЬ ПО
			               |			РеестрДолжники.Должник,
			               |			РеестрДолжники.Договор) КАК ВложенныйЗапрос
			               |		ПО (ВложенныйЗапрос.Должник = ПривязкаСотрудникСрезПоследних.Должник)
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДолжников.СрезПоследних(&ВыбДата, ) КАК СтатусыДолжниковСрезПоследних
			               |		ПО ПривязкаСотрудникСрезПоследних.Должник = СтатусыДолжниковСрезПоследних.Должник
			               |ГДЕ
			               |	ПривязкаСотрудникСрезПоследних.Сотрудник В (&Сотрудник)
			               |	И СтатусыДолжниковСрезПоследних.Статус = &Статус";
		КонецЕсли;
	ИначеЕсли Объект.Реестры.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Реестры", Объект.Реестры.Выгрузить());
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Реестры.НомерСтроки,
		|	Реестры.Реестр
		|ПОМЕСТИТЬ ВТ_Реестры
		|ИЗ
		|	&Реестры КАК Реестры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Реестры.НомерСтроки КАК НомерРеестра,
		|	РеестрДолжники.НомерСтроки КАК НомерДолжника,
		|	РеестрДолжники.Должник,
		|	РеестрДолжники.Договор
		|ПОМЕСТИТЬ ВТ_ДолжникиИзРеестра
		|ИЗ
		|	ВТ_Реестры КАК ВТ_Реестры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Реестр.Должники КАК РеестрДолжники
		|		ПО ВТ_Реестры.Реестр = РеестрДолжники.Ссылка
		|ГДЕ
		|	РеестрДолжники.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТ_Реестры.Реестр
		|			ИЗ
		|				ВТ_Реестры)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК НомерСтроки,
		|	ВТ_Должники.НомерРеестра КАК НомерРеестра,
		|	ВТ_Должники.НомерДолжника КАК НомерДолжника,
		|	ВТ_Должники.Должник,
		|	ЕСТЬNULL(СтатусыДолжниковСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.Статусы.ПустаяСсылка)) КАК Статус,
		|	ЕСТЬNULL(ПривязкаСотрудникСрезПоследних.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК СотрудникПривязка,
		|	ЕСТЬNULL(ПривязкаСотрудникСрезПоследних.СотрМенеджер, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК МенеджерПривязка,
		|	ВТ_Должники.Договор
		|ПОМЕСТИТЬ ВТ_Должники
		|ИЗ
		|	ВТ_ДолжникиИзРеестра КАК ВТ_Должники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДолжников.СрезПоследних(
		|				&ВыбДата,
		|				Должник В
		|					(ВЫБРАТЬ
		|						ВТ_ДолжникиИзРеестра.Должник
		|					ИЗ
		|						ВТ_ДолжникиИзРеестра)) КАК СтатусыДолжниковСрезПоследних
		|		ПО ВТ_Должники.Должник = СтатусыДолжниковСрезПоследних.Должник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаСотрудник.СрезПоследних(
		|				&ВыбДата,
		|				Должник В
		|					(ВЫБРАТЬ
		|						ВТ_ДолжникиИзРеестра.Должник
		|					ИЗ
		|						ВТ_ДолжникиИзРеестра)) КАК ПривязкаСотрудникСрезПоследних
		|		ПО ВТ_Должники.Должник = ПривязкаСотрудникСрезПоследних.Должник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Должники.НомерСтроки,
		|	ВТ_Должники.НомерРеестра,
		|	ВТ_Должники.НомерДолжника,
		|	ВТ_Должники.Должник,
		|	ВТ_Должники.Статус,
		|	ВТ_Должники.СотрудникПривязка,
		|	ВТ_Должники.МенеджерПривязка,
		|	ВТ_Должники.Договор
		|ИЗ
		|	ВТ_Должники КАК ВТ_Должники
		|ГДЕ
		|	ИСТИНА" + ?(ОтборПоСтатусу," И ВТ_Должники.Статус = &Статус","") + "
		|	" + ?((ОтборПоСотруднику ИЛИ ОтборПоОтделу)," И ВТ_Должники.МенеджерПривязка В (&Сотрудник)","") + "
		|	" + ?(НеПривязанные," И ВТ_Должники.МенеджерПривязка = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)","");
	ИначеЕсли Объект.Банки.Количество() > 0 Тогда	
		Запрос.УстановитьПараметр("Банки", Объект.Банки);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Банки.НомерСтроки,
		|	Банки.Банк
		|ПОМЕСТИТЬ ВТ_Банки
		|ИЗ
		|	&Банки КАК Банки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РеестрДолжники.НомерСтроки КАК НомерДолжника,
		|	РеестрДолжники.Должник,
		|	РеестрДолжники.Договор
		|ПОМЕСТИТЬ ВТ_ДолжникиИзРеестра
		|ИЗ
		|		Документ.Реестр.Должники КАК РеестрДолжники
		|ГДЕ
		|	РеестрДолжники.Ссылка.Банк В
		|			(ВЫБРАТЬ
		|				ВТ_Банки.Банк
		|			ИЗ
		|				ВТ_Банки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК НомерСтроки,
		|	ВТ_Должники.НомерДолжника КАК НомерДолжника,
		|	ВТ_Должники.Должник,
		|	ЕСТЬNULL(СтатусыДолжниковСрезПоследних.Статус, ЗНАЧЕНИЕ(Справочник.Статусы.ПустаяСсылка)) КАК Статус,
		|	ЕСТЬNULL(ПривязкаСотрудникСрезПоследних.Сотрудник, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК СотрудникПривязка,
		|	ЕСТЬNULL(ПривязкаСотрудникСрезПоследних.СотрМенеджер, ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)) КАК МенеджерПривязка,
		|	ВТ_Должники.Договор
		|ПОМЕСТИТЬ ВТ_Должники
		|ИЗ
		|	ВТ_ДолжникиИзРеестра КАК ВТ_Должники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДолжников.СрезПоследних(
		|				&ВыбДата,
		|				Должник В
		|					(ВЫБРАТЬ
		|						ВТ_ДолжникиИзРеестра.Должник
		|					ИЗ
		|						ВТ_ДолжникиИзРеестра)) КАК СтатусыДолжниковСрезПоследних
		|		ПО ВТ_Должники.Должник = СтатусыДолжниковСрезПоследних.Должник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПривязкаСотрудник.СрезПоследних(
		|				&ВыбДата,
		|				Должник В
		|					(ВЫБРАТЬ
		|						ВТ_ДолжникиИзРеестра.Должник
		|					ИЗ
		|						ВТ_ДолжникиИзРеестра)) КАК ПривязкаСотрудникСрезПоследних
		|		ПО ВТ_Должники.Должник = ПривязкаСотрудникСрезПоследних.Должник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Должники.НомерСтроки,
		|	ВТ_Должники.НомерДолжника,
		|	ВТ_Должники.Должник,
		|	ВТ_Должники.Статус,
		|	ВТ_Должники.СотрудникПривязка,
		|	ВТ_Должники.МенеджерПривязка,
		|	ВТ_Должники.Договор
		|ИЗ
		|	ВТ_Должники КАК ВТ_Должники
		|ГДЕ
		|	ИСТИНА" + ?(ОтборПоСтатусу," И ВТ_Должники.Статус В (&Статус)","") + "
		|	" + ?((ОтборПоСотруднику ИЛИ ОтборПоОтделу)," И ВТ_Должники.МенеджерПривязка В (&Сотрудник)","") + "
		|	" + ?(НеПривязанные," И ВТ_Должники.МенеджерПривязка = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)","");
	КонецЕсли;
	
	
	ТЗ_врем = Запрос.Выполнить().Выгрузить();
	ЧислоДолжников = ТЗ_врем.Количество();
	ЗначениеВРеквизитФормы(ТЗ_врем, "ТЗ");
	Объект.ЧислоДолжников = ЧислоДолжников;
	
КонецПроцедуры

&НаКлиенте
Процедура Распределить()
	Если Объект.ЧислоДолжников = 0 ИЛИ ТЗ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаДолжника Из Объект.Должники Цикл
		Форма = ПолучитьФорму("Документ.ПередачаДолжников.ФормаОбъекта");
		ДанныеФормы = Форма.Объект;
		ПередатьНаСервере(ДанныеФормы, СтрокаДолжника.ПолучитьИдентификатор()); // Заполняем документ на сервере
		Если ДанныеФормы = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		КопироватьДанныеФормы(ДанныеФормы, Форма.Объект); // копируем наш объект в объект формы и далее открываем ее
		Форма.Открыть();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередатьНаСервере(ДанныеФормы, ИдентификаторСтрокиДолжника)
	СтрокаДолжника = Объект.Должники.НайтиПоИдентификатору(ИдентификаторСтрокиДолжника);
	Если СтрокаДолжника = Неопределено Тогда
		ДанныеФормы = Неопределено;
		Возврат;
	КонецЕсли;
	
	ДокументПередачи = Документы.ПередачаДолжников.СоздатьДокумент();
	ДокументПередачи.Дата = ТекущаяДатаСеанса();
	ДокументПередачи.Менеджер = СтрокаДолжника.Сотрудник;
	ДокументПередачи.СотрМенеджер = СтрокаДолжника.Сотрудник;
	ДокументПередачи.Сотрудник = СтрокаДолжника.Сотрудник;
	ДокументПередачи.Отдел = СтрокаДолжника.Отдел;
	
	ТекСтр = 0;
	Для а = 0 По СтрокаДолжника.Число-1 Цикл
		
		Если ТекСтр >= ТЗ.Количество() Тогда
			Прервать;
		КонецЕсли;
		
		НовСтр = ДокументПередачи.Должники.Добавить();
		НовСтр.Должник = ТЗ[ТекСтр].Должник;
		НовСтр.Договор = ПолучитьДоговорДолжника(ТЗ[ТекСтр].Должник);
		ТекСтр = ТекСтр+1;
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ДокументПередачи, ДанныеФормы);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДоговорДолжника(Знач Должник)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Договоры.Ссылка КАК Договор
	               |ИЗ
	               |	Справочник.Договоры КАК Договоры
	               |ГДЕ
	               |	Договоры.Владелец = &Владелец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Договоры.ДатаВозникновенияДолга УБЫВ,
	               |	Договоры.ДатаРасчетаЗадолженности УБЫВ";
	Запрос.УстановитьПараметр("Владелец", Должник);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Договор;
	Иначе
		Возврат Справочники.Договоры.ПустаяСсылка();
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ВсеРеестрыНеПривязанныеПриИзменении(Элемент)
	Если Элемент.Имя = Элементы.ВсеРеестры.Имя И Объект.ВсеРеестры = Истина Тогда
		Объект.НеПривязанные = Ложь;
	ИначеЕсли Элемент.Имя = Элементы.НеПривязанные.Имя И Объект.НеПривязанные = Истина Тогда
		Объект.ВсеРеестры = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура СоздатьКонтакт()

	Если Объект.ЧислоДолжников = 0 ИЛИ ТЗ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ_врем = ТЗ.Выгрузить();
	ТЗ_врем.Свернуть("Должник");
	ДолжникИзДокумента = Объект.ДокументКонтакт.Должник;
	Для каждого Стр Из ТЗ_врем Цикл
		Если Стр.Должник = ДолжникИзДокумента Тогда
			Продолжить;
		КонецЕсли;
		ДокКонтакт = Документы.Контакт.СоздатьДокумент();
		ДокКонтакт.Автор = ПараметрыСеанса.Пользователь;
		ЗаполнитьЗначенияСвойств(ДокКонтакт, Объект.ДокументКонтакт, 
			"Дата, ДатаПланирования, Должник, Комментарий, Сотрудник, Статус, ТипКонтакта");
		ДокКонтакт.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОтбора(Элемент)
	Если Элемент.Имя = "Статус" Тогда
		Объект.ОтборПоСтатусу = ЗначениеЗаполнено(Объект.Статус);
	ИначеЕсли Элемент.Имя = "Сотрудник" Тогда
		Объект.ОтборПоСотруднику = ЗначениеЗаполнено(Объект.Сотрудник);
	ИначеЕсли Элемент.Имя = "Отдел" Тогда
		Объект.ОтборПоОтделу = ЗначениеЗаполнено(Объект.Отдел);
	КонецЕсли;
КонецПроцедуры
