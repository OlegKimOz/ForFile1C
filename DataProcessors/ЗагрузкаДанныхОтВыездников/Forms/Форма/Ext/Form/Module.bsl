
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ОбработатьНаСервере()

	    	
	 стрДолж=ПолучитьКолонкиДолжник(Объект.ИмяШаблона);
	 
	 трДоговор=ПолучитьКолонкиДоговор(Объект.ИмяШаблона);
	 
	 стрКомментарий= ПолучитьКолонкуКомментарий(Объект.ИмяШаблона);
	 
	 
	 
	 
	  загодин=Ложь;
	 
	 
	  фамилия= стрДолж["Фамилия"];
	  
	  имя=стрДолж["Имя"];
	  отчество=стрДолж["Отчество"];
	  
	  
	  Если фамилия=имя Тогда
	      //Значит  один заголовок для Должника
	      должникЗаг=фамилия;
	      загодин=Истина;
	  Иначе
	      
		   //должникЗаг= стрДолж["Фамилия"]+" "+стрДолж["Имя"]+" "+ стрДолж["Отчество"];
	  КонецЕсли;	  
	    
	  
	   массивЗаг=Новый Массив;
	  

	  
	  Для каждого стр Из стрДолж Цикл
	  
		  Если стр.Ключ<>"Имя" И стр.Ключ<>"Отчество" Тогда
			  
			   массивЗаг.Добавить(стр);
			   
			   //СписокПолейДолжник.Добавить(стр.Ключ);
		  	
		  
		  КонецЕсли;
	  
	  КонецЦикла;
	  
	  
	  Для каждого стр Из трДоговор Цикл
	  
			  
			   массивЗаг.Добавить(стр);
			   //СписокПолейДоговор.Добавить(стр.Ключ);
		  
      КонецЦикла;
	  
	  Для каждого стр Из стрКомментарий Цикл
	  
			  
			   массивЗаг.Добавить(стр);
			   //СписокПолейДоговор.Добавить(стр.Ключ);
		  
      КонецЦикла;
	  
	  
	  
	  
	  
	  
	   ФайлДанных = ИмяФайла;
	    
	   ФайлЕксел.Прочитать(ИмяФайла,СпособЧтенияЗначенийТабличногоДокумента.Текст);
	    
	   ПЗ = Новый ПостроительЗапроса;

	   ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ФайлЕксел.Область());

	   ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;

	   ПЗ.ЗаполнитьНастройки();

	   ПЗ.Выполнить();

	   ТаблицаЗначений = ПЗ.Результат.Выгрузить();
	   
	     должСтр=массивЗаг[0].Значение;	  
		 договСтр=массивЗаг[1].Значение;
		 комментСтр=массивЗаг[2].Значение;
		 должСтр=СтрЗаменить(должСтр," ","");
		 договСтр=СтрЗаменить(договСтр," ","");
		 комментСтр=СтрЗаменить(комментСтр," ","");
		 
		 
	      Для каждого стр Из ТаблицаЗначений Цикл
			  
	    	   Если  стр[должСтр]<>"" и стр[договСтр]<>""  Тогда
	   			 СоздатьДокументКонтакт(стр[должСтр],стр[договСтр],стр[комментСтр]);
				 
			   КонецЕсли;
  
	   
	      КонецЦикла;
	

	

КонецПроцедуры


&НаСервере
Процедура  СоздатьДокументКонтакт(долж,догов,стрКомментарий)

	
		//  найти должника 
		должСсылка=Неопределено;
		
		
		    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Должники.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.Должники КАК Должники
						|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Договоры КАК Договоры
						|		ПО Договоры.Владелец = Должники.Ссылка
						|ГДЕ
						|	Договоры.НомерДоговора = &НомерДоговора
						|	И Должники.Наименование = &Наименование";
					
					Запрос.УстановитьПараметр("Наименование", долж);
					Запрос.УстановитьПараметр("НомерДоговора", догов);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						должСсылка=ВыборкаДетальныеЗаписи.Ссылка;
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		          Если должСсылка<>Неопределено Тогда
					  
					  //найти привязку 
					 сотрСсылка= НайтиПривязкуДолж(должСсылка);
					 
					 Если сотрСсылка<>Неопределено Тогда
						 
						  докКонтакт=Документы.Контакт.СоздатьДокумент();
						  докКонтакт.Дата=ТекущаяДата();
						  докКонтакт.Автор=сотрСсылка;
						  докКонтакт.Должник=должСсылка;
						  докКонтакт.ТипКонтакта=Справочники.ТипыКонтактов.НайтиПоНаименованию("Выезд");
						  докКонтакт.Сотрудник=сотрСсылка;
						  докКонтакт.КомментарийСотрудника=стрКомментарий+" ;по договору - "+догов;
						  
						  докКонтакт.Записать(РежимЗаписиДокумента.Проведение);
					 
					 КонецЕсли;
					 
					  
				  	
				  
				  КонецЕсли;
					
					
	

КонецПроцедуры


&НаСервере
Функция НайтиПривязкуДолж(долж)

	                 
	                 сотрудникСсылка=Неопределено;
					//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ПривязкаСотрудникСрезПоследних.Сотрудник КАК Сотрудник
						|ИЗ
						|	РегистрСведений.ПривязкаСотрудник.СрезПоследних(&МоментВремени, Должник = &Должник) КАК ПривязкаСотрудникСрезПоследних";
					
					Запрос.УстановитьПараметр("Должник", долж);
					Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						сотрудникСсылка=ВыборкаДетальныеЗаписи.Сотрудник;
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА





	     Возврат сотрудникСсылка;

КонецФункции // ()




&НаКлиенте
Процедура ОбработатьФайл(Команда)
	
	  ОбработатьНаСервере();
	  
	  Сообщить("Ок");
	
КонецПроцедуры




&НаСервере
Функция ПолучитьКолонкуКомментарий(стр)

	    должКомментарий=Новый Структура;
	    
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ШаблоныФайловДокументКонтакт.Реквизит КАК Реквизит,
				|	ШаблоныФайловДокументКонтакт.Заголовки КАК Заголовки
				|ИЗ
				|	Справочник.ШаблоныФайлов.ДокументКонтакт КАК ШаблоныФайловДокументКонтакт
				|ГДЕ
				|	ШаблоныФайловДокументКонтакт.Ссылка.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", стр);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				
				Если ВыборкаДетальныеЗаписи.Реквизит="Комментарий"  Тогда
		            должКомментарий.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
		
         		КонецЕсли;
			     	
			КонецЦикла;
			
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		Возврат должКомментарий;	

КонецФункции // ()






&НаСервере
Функция ПолучитьКолонкиДолжник(стр)

		
	//    Получить должника Колонку
	
	должФИО=Новый Структура;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДолжники.Реквизит КАК Реквизит,
		|	ШаблоныФайловДолжники.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Должники КАК ШаблоныФайловДолжники
		|ГДЕ
		|	ШаблоныФайловДолжники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	    должФИО.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
	 
		
	КонецЦикла;

	
	Возврат должФИО;
	  
	
	

КонецФункции // ()


&НаСервере
Функция ПолучитьКолонкиДоговор(стр)

	должДоговор=Новый Структура;

	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДоговоры.Реквизит КАК Реквизит,
		|	ШаблоныФайловДоговоры.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Договоры КАК ШаблоныФайловДоговоры
		|ГДЕ
		|	ШаблоныФайловДоговоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		//НомерДоговора
		Если ВыборкаДетальныеЗаписи.Реквизит="НомерДоговора"  Тогда
		       должДоговор.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
			
		
		КонецЕсли;
	
		   
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	Возврат должДоговор;
	
	
КонецФункции // ()

