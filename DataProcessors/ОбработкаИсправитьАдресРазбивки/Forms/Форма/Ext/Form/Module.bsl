
&НаСервере
Процедура СтартИсправитьНаСервере()
	
		  типРегистрации=Справочники.ТипыАдресов.НайтиПоНаименованию("Регистрации",Истина);
		  типДом=Справочники.ТипыАдресов.НайтиПоНаименованию("Дом",Истина);
		  типИндекс=Справочники.ТипыАдресов.НайтиПоНаименованию("Индекс",Истина);
		  типРайон=Справочники.ТипыАдресов.НайтиПоНаименованию("Район",Истина);
		  типТипДома=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип дома",Истина);
		  типТипРегиона=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип региона",Истина);
		  типРегионТекст=Справочники.ТипыАдресов.НайтиПоНаименованию("Регион текст",Истина);
		  типТипН_П=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип н/п",Истина);
		  типТипРайона=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип района",Истина);
		  типСтрана=Справочники.ТипыАдресов.НайтиПоНаименованию("Страна",Истина);
		  типУлица=Справочники.ТипыАдресов.НайтиПоНаименованию("Улица",Истина);
		  типТипУлицы=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип улицы",Истина);
		  типНаселенныйПункт=Справочники.ТипыАдресов.НайтиПоНаименованию("Населенный пункт",Истина);
		  типФедеральныйОкруг=Справочники.ТипыАдресов.НайтиПоНаименованию("Федеральный округ",Истина);
		  типТипКорпуса_Строения=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип корпуса / строения",Истина);
		  типТип_Квартиры=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип квартиры",Истина);
		  типКорпус_Строение=Справочники.ТипыАдресов.НайтиПоНаименованию("Корпус / строение",Истина);
		  типКвартира=Справочники.ТипыАдресов.НайтиПоНаименованию("Квартира",Истина);
		  типАдминистративный_Округ=Справочники.ТипыАдресов.НайтиПоНаименованию("Административный округ",Истина);
		  
		  
		  
	       	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Адреса.Владелец КАК Владелец,
					|	Адреса.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.Адреса КАК Адреса
					|ГДЕ
					|	Адреса.Тип = &Тип";
				
				Запрос.УстановитьПараметр("Тип", типРегистрации);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаРегистрации = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаРегистрации.Следующий() Цикл
					
					               
					
					   ИсправитьАдресРегистрации(ВыборкаРегистрации.Ссылка,ВыборкаРегистрации.Владелец);
					
					
					
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				   
	
	
	
	
КонецПроцедуры



&НаСервере
Процедура ИсправитьАдресРегистрации(ссылкаАдрес, ссылкаВладелец)

	      типРегистрации=Справочники.ТипыАдресов.НайтиПоНаименованию("Регистрации",Истина);
		  типДом=Справочники.ТипыАдресов.НайтиПоНаименованию("Дом",Истина);
		  типИндекс=Справочники.ТипыАдресов.НайтиПоНаименованию("Индекс",Истина);
		  типРайон=Справочники.ТипыАдресов.НайтиПоНаименованию("Район",Истина);
		  типТипДома=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип дома",Истина);
		  типТипРегиона=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип региона",Истина);
		  типРегионТекст=Справочники.ТипыАдресов.НайтиПоНаименованию("Регион текст",Истина);
		  типТипН_П=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип н/п",Истина);
		  типТипРайона=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип района",Истина);
		  типСтрана=Справочники.ТипыАдресов.НайтиПоНаименованию("Страна",Истина);
		  типУлица=Справочники.ТипыАдресов.НайтиПоНаименованию("Улица",Истина);
		  типТипУлицы=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип улицы",Истина);
		  типНаселенныйПункт=Справочники.ТипыАдресов.НайтиПоНаименованию("Населенный пункт",Истина);
		  типФедеральныйОкруг=Справочники.ТипыАдресов.НайтиПоНаименованию("Федеральный округ",Истина);
		  типТипКорпуса_Строения=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип корпуса / строения",Истина);
		  типТип_Квартиры=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип квартиры",Истина);
		  типКорпус_Строение=Справочники.ТипыАдресов.НайтиПоНаименованию("Корпус / строение",Истина);
		  типКвартира=Справочники.ТипыАдресов.НайтиПоНаименованию("Квартира",Истина);
		  типАдминистративный_Округ=Справочники.ТипыАдресов.НайтиПоНаименованию("Административный округ",Истина);
          типТип_Города=Справочники.ТипыАдресов.НайтиПоНаименованию("Тип города",Истина);
		  типГород=Справочники.ТипыАдресов.НайтиПоНаименованию("Город",Истина);
		  типРайон_Города=Справочники.ТипыАдресов.НайтиПоНаименованию("Район города",Истина);
		  
		  
		   НачатьТранзакцию();
		  Попытка
		  
		  	      об=ссылкаАдрес.ПолучитьОбъект();
		   
			   об.Индекс= ПолучитьЗначениеТипа(типИндекс, ссылкаВладелец);
			   
			   Если Не ЗначениеЗаполнено(об.Регион)   Тогда
			   
			   	 об.Регион=НайтиРегионПоТексту(ПолучитьЗначениеТипа(типРегионТекст, ссылкаВладелец));
			   
			   КонецЕсли;
			   
			   
			   
			   
			   
			   
			   об.ТипРегиона= ПолучитьЗначениеТипа(типТипРегиона, ссылкаВладелец);
			   об.РегионТекст= ПолучитьЗначениеТипа(типРегионТекст, ссылкаВладелец);
			   об.Страна= ПолучитьЗначениеТипа(типСтрана, ссылкаВладелец);
			   об.ТипРайона= ПолучитьЗначениеТипа(типТипРайона, ссылкаВладелец);
			   об.Район= ПолучитьЗначениеТипа(типРайон, ссылкаВладелец);
			   об.ТипГорода= ПолучитьЗначениеТипа(типТип_Города, ссылкаВладелец);
			   об.Город= ПолучитьЗначениеТипа(типГород, ссылкаВладелец);
			   об.ТипНаселенногоПункта= ПолучитьЗначениеТипа(типТипН_П, ссылкаВладелец);
			   об.НаселенныйПункт= ПолучитьЗначениеТипа(типНаселенныйПункт, ссылкаВладелец);
			   об.ТипУлицы= ПолучитьЗначениеТипа(типТипУлицы, ссылкаВладелец);
			   об.Улица= ПолучитьЗначениеТипа(типУлица, ссылкаВладелец);
			   об.ТипДома= ПолучитьЗначениеТипа(типТипДома, ссылкаВладелец);
			   об.Дом= ПолучитьЗначениеТипа(типДом, ссылкаВладелец);
			   об.ТипКорпусаСтроения= ПолучитьЗначениеТипа(типТипКорпуса_Строения, ссылкаВладелец);
			   об.КорпусСтроение= ПолучитьЗначениеТипа(типКорпус_Строение, ссылкаВладелец);
			   об.ТипКвартиры= ПолучитьЗначениеТипа(типТип_Квартиры, ссылкаВладелец);
			   об.Квартира= ПолучитьЗначениеТипа(типКвартира, ссылкаВладелец);
			   об.АдмОкруг= ПолучитьЗначениеТипа(типАдминистративный_Округ, ссылкаВладелец);
			   
			   об.РайонГорода= ПолучитьЗначениеТипа(типРайон_Города, ссылкаВладелец);
			   
			  
			   		   
			   об.Записать();

			   ЗафиксироватьТранзакцию();
		  
		  Исключение
			    ОтменитьТранзакцию();
			    ТекстОшибки = ОписаниеОшибки();
				Сообщить(ТекстОшибки);
			  
		  КонецПопытки;
	
	    		   
	
	    	                   
	
	

КонецПроцедуры


&НаСервере
Функция НайтиРегионПоТексту(стрТекст)

	 ссылкаРегион=Неопределено;
	
	           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Регионы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Регионы КАК Регионы
		|ГДЕ
		|	Регионы.Наименование ПОДОБНО &Наименование";
	
	Запрос.УстановитьПараметр("Наименование","%"+ стрТекст+"%");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ссылкаРегион=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат  ссылкаРегион;
	

КонецФункции // ()



&НаСервере
Функция ПолучитьЗначениеТипа(ссылкаТип, ссылкаВладелец)
	
	    данныеАдрес="";
	
	
	        	               	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Адреса.Тип КАК Тип,
						|	Адреса.Адрес КАК Адрес
						|ИЗ
						|	Справочник.Адреса КАК Адреса
						|ГДЕ
						|	Адреса.Владелец = &Владелец
						|	И Адреса.Тип = &Тип";
					
					Запрос.УстановитьПараметр("Владелец", ссылкаВладелец);
					Запрос.УстановитьПараметр("Тип", ссылкаТип);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						данныеАдрес=ВыборкаДетальныеЗаписи.Адрес;
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	    Возврат данныеАдрес;

КонецФункции // ()





			
			

&НаКлиенте
Процедура СтартИсправить(Команда)
	СтартИсправитьНаСервере();
	Сообщить("Ок");
	
КонецПроцедуры
