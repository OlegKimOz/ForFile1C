
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));

	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФайл(Команда)
	
	  стрКолонки=ПолучитьКолонки(ИмяШаблона);
	  
	   массивЗаг=Новый Массив;
	  

	  
       Для каждого стр Из стрКолонки Цикл
			  
		   массивЗаг.Добавить(стр);
		   СписокПолейУведомленияОбУступкеПраваТребования.Добавить(стр.Ключ);
		  
		КонецЦикла;

	  
		  ФайлДанных = ИмяФайла;
	       
	   	 // запишу врем файл и передам его  обработчику
	  
     	   Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		   имяэксел=ИмяФайла;
		   
		    имяфайлатемп=дирМоиД+"\ЗагрузкаУведомленияОбУступкеПраваТребования.txt";
			   
		    имяфайлатемпответ=дирМоиД+"\ЗагрузкаУведомленияОбУступкеПраваТребования_out.txt";

		    программаОбр=дирМоиД+"\ExcelParse.exe";


		 ФайлТемп = Новый ЗаписьТекста(имяфайлатемп);
		    		   
		   Для каждого масстр Из массивЗаг  Цикл
			   
				 //ФайлТемп.ЗаписатьСтроку(масстр.Значение);   
				 
				  Если ТипЗнч(масстр.Значение) = Тип("Массив")  Тогда
				  
				  	 ФайлТемп.ЗаписатьСтроку(масстр.Значение[1]); 
				  
				  Иначе
				  
				  	 ФайлТемп.ЗаписатьСтроку(масстр.Значение);
				  
	            КонецЕсли;

			 
			 
		   
		   КонецЦикла;
		   
		   ФайлТемп.ЗаписатьСтроку(ИмяФайла);
		   
		   ФайлТемп.Закрыть();

	       	
	       программаОбр=программаОбр+" "+"16";
	    	 
	    	 
	    	 Shell.Run(программаОбр,0, 1);

	  
	    	 // код 240 символа
	    	 
	      
		  
 			   мСтрокФайла = Новый Массив();
			   
			   ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
			   Если ВыбранныйФайл.Существует() Тогда
				   
				   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
												
					Строка = ПрочитанныйТекст.ПрочитатьСтроку();
												//а не был ли файл пуст?
												
					Если Строка <> Неопределено Тогда

						 Если Лев(Строка, 4)<>"---ð"  Тогда
						 
						 	   мСтрокФайла.Добавить(Строка);
						 
						 КонецЕсли; 
						 //---ð---ð
						 
						 
						
					     
					КонецЕсли;
					

					Пока Строка <> Неопределено Цикл
                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					   Если Строка <> Неопределено Тогда
						      Если Лев(Строка, 4)<>"---ð"  Тогда
						 
						 	   мСтрокФайла.Добавить(Строка);
						 
						    КонецЕсли; 
						 
					        
					     КонецЕсли;
					КонецЦикла;
		   
				   
			   КонецЕсли;
		 
		  
		  
	  
  	      ПостроитьТаблицу(массивЗаг);
		  
		  
		      должДанныет=Новый Структура;
			  
			  
			  Для каждого стрд  Из мСтрокФайла Цикл
				  
				     должДанныет=РазбитьСтроку(стрд,массивЗаг);
				   
				   	Запись=ТЧ.Добавить();
				     Для каждого мстр Из должДанныет Цикл
						 
						стрк=мстр.Ключ; 
					
						
						Запись[Строка(стрк)]=мстр.Значение; 	
					 
					 КонецЦикла;
					 
					 
				  
				  
			  КонецЦикла;

		 Элементы.ГруппаЗаписать.Видимость=Истина;  

	
КонецПроцедуры


&НаКлиенте
Функция РазбитьСтроку(стрк,массивзаг)

    должДанные=Новый Структура;

	Попытка
	
		    Разделитель = Символ(240);
		    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
		    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
				
				
				  Если ТипЗнч(массивзаг[Индекс-1]) = Тип("Массив")  Тогда
					  
					  темпстр=массивзаг[Индекс-1].Значение[1];
					  
					  //ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение[1]),150);
				  
				  Иначе
				  
				  	 темпстр=массивзаг[Индекс-1].Ключ;
				  

				  
				  КонецЕсли;
				  
		  
						
				
				
				    темпстр=массивзаг[Индекс-1].Ключ;
						
				
				должДанные.Вставить(темпстр,СтрПолучитьСтроку(Строки, Индекс));
				
		    КонецЦикла;
			

	
    Исключение
		
		Сообщить(стрк);
		
	
	КонецПопытки;
	
		
	
	Возврат должДанные; 	

КонецФункции // ()

  
  


&НаСервере
Функция ПостроитьТаблицу(СтрМ)

	
	КС = Новый КвалификаторыСтроки(250);
    Массив = Новый Массив;
    Массив.Добавить(Тип("Строка"));
    ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);

	
	 ТЗ = РеквизитФормыВЗначение("ТЧ");
	
	 //ТЗ = Новый ТаблицаЗначений;
	 
	 
	 //инд=0;
	 
     Для каждого мас Из СтрМ Цикл
		  
		  //инд=инд+1;
		  //строк=Строка(инд);
		  //
		  
	
		  Если ТипЗнч(мас.Значение) = Тип("Массив")  Тогда
		  
		  	  ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение[1]),250);
		  
		  Иначе
		  
		  	 ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение),250);
		  

		  
		  КонецЕсли;
		  
		 	   
		 
     	
     
     КонецЦикла;
     
     
     
     
     //Опишем массив реквизитов
    МассивРеквизитов = Новый Массив;
    МассивТипаВыбора = Новый Массив;
    МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
    ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
    
    //Добавим в массив реквизитов таблицу значений
    МассивРеквизитов.Добавить(Новый РеквизитФормы("ДанныеФайла", ОписаниеТипаВыбора));
  
	//Добавим в массив реквизитов колонки таблицы
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТЧ"));
		
	КонецЦикла;
  
    ИзменитьРеквизиты(МассивРеквизитов);
    
     //Добавим Таблицу на форму
    ТаблицаДанныхФайла             = Элементы.Добавить("ТаблицаДанныхФайла", Тип("ТаблицаФормы"),ЭтаФорма.Элементы.ГруппаОбработка);
    ТаблицаДанныхФайла.ПутьКДанным = "ТЧ";
    ТаблицаДанныхФайла.Отображение = ОтображениеТаблицы.Список;
	ТаблицаДанныхФайла.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
	
	
	//ТаблицаДанныхФайла.Родитель=ЭтаФорма.Элементы.ГруппаОбработка;
	
    //Добавим колонки
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаДанныхФайла);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "ТЧ." + Колонка.Имя;
		НовыйЭлемент.Заголовок=Колонка.Заголовок;
		НовыйЭлемент.ТолькоПросмотр = Истина;
		
    КонецЦикла;  
    ЗначениеВРеквизитФормы(ТЗ,"ТЧ");
    
	
	
	
	
      	 
	
	
КонецФункции // ()


  
  
  


&НаСервере
Процедура ОбработатьНаСервере(стрКолонки)
	
	
	
	  	
			 //программаОбр=программаОбр+" "+"9";
			 //
			 //
			 //Shell.Run(программаОбр,0, 1);

			 //   
			 //мСтрокФайла = Новый Массив();

			 //   
	   
	   
		  
		  
		  

КонецПроцедуры	   




&НаСервере
Функция ПолучитьКолонки(стр)

	
	структУведомленияОбУступкеПраваТребования=Новый Структура;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловУведомленияОбУступкеПраваТребования.Реквизит КАК Реквизит,
		|	ШаблоныФайловУведомленияОбУступкеПраваТребования.Заголовок КАК Заголовок
		|ИЗ
		|	Справочник.ШаблоныФайлов.УведомленияОбУступкеПраваТребования КАК ШаблоныФайловУведомленияОбУступкеПраваТребования
		|ГДЕ
		|	ШаблоныФайловУведомленияОбУступкеПраваТребования.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	    структУведомленияОбУступкеПраваТребования.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовок);
	КонецЦикла;
	
	Возврат структУведомленияОбУступкеПраваТребования;

	
	
	
	
КонецФункции // ()

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	
	       ЗаписатьДанныеНаСервере();

	        Сообщить("Ок");
	
КонецПроцедуры



&НаСервере
Процедура ЗаписатьДанныеНаСервере()

	

	
	Для каждого стр  Из ТЧ Цикл
		
		      ДанныеСтруктура=Новый Структура;
		
			  Для каждого сппол  Из СписокПолейУведомленияОбУступкеПраваТребования  Цикл
				 
				 ДанныеСтруктура.Вставить(сппол.Значение,стр[сппол.Значение]);
			 
			  КонецЦикла;

			  
			  ЗаписатьСтрокуНаСервере(ДанныеСтруктура);

			  
			  
			  
		
	КонецЦикла;	


КонецПроцедуры


&НаСервере
Процедура ЗаписатьСтрокуНаСервере(структураДан)

		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УведомленияОбУступкеПраваТребования.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УведомленияОбУступкеПраваТребования КАК УведомленияОбУступкеПраваТребования
		|ГДЕ
		|	УведомленияОбУступкеПраваТребования.ШПИ = &ШПИ";
	
	
	Запрос.УстановитьПараметр("ШПИ", структураДан.ШПИ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаШПИ = РезультатЗапроса.Выбрать();
	
	Если ВыборкаШПИ.Количество()>0  Тогда
		ВыборкаШПИ.Следующий();
		
		  спрОбъект=ВыборкаШПИ.Ссылка.ПолучитьОбъект();
		  
		  структДан=НайтиДолжникДоговор(структураДан.КредитныйДоговор, структураДан.Должник);
		  
		  спрОбъект.Должник=структДан.Должник;
			спрОбъект.КредитныйДоговор=структДан.Договор;
			спрОбъект.АдресДолжника=структураДан.АдресДолжника;
			спрОбъект.Госпошлина=Число(структураДан.Госпошлина);
			спрОбъект.ДатаПереходаПравТребований=СтроковыеФункцииКлиентСервер.СтрокаВДату(структураДан.ДатаПереходаПравТребований);
			спрОбъект.ДатаЦессии=СтроковыеФункцииКлиентСервер.СтрокаВДату(структураДан.ДатаЦессии);
			спрОбъект.ДоговорЦессии=структураДан.ДоговорЦессии;
			спрОбъект.СуммаДолга=Число(структураДан.СуммаДолга);
			спрОбъект.ШПИ=структураДан.ШПИ;
			спрОбъект.ПросроченныйОсновнойДолг=Число(структураДан.ПросроченныйОсновнойДолг);
		    спрОбъект.ПросроченныеПроценты=Число(структураДан.ПросроченныеПроценты);
		
			
		
		спрОбъект.Штрафы=Число(структураДан.Штрафы);
		
		спрОбъект.Записать();
		

			 
		
	
	Иначе
		        
		//  создать новый
		спрОбъектНовый=Справочники.УведомленияОбУступкеПраваТребования.СоздатьЭлемент();
		структДан=НайтиДолжникДоговор(структураДан.КредитныйДоговор, структураДан.Должник);
		спрОбъектНовый.Должник=структДан.Должник;
		спрОбъектНовый.КредитныйДоговор=структДан.Договор;
		
		спрОбъектНовый.АдресДолжника=структураДан.АдресДолжника;
		спрОбъектНовый.Госпошлина=Число(структураДан.Госпошлина);
		спрОбъектНовый.ДатаПереходаПравТребований=СтроковыеФункцииКлиентСервер.СтрокаВДату(структураДан.ДатаПереходаПравТребований);
		спрОбъектНовый.ДатаЦессии=СтроковыеФункцииКлиентСервер.СтрокаВДату(структураДан.ДатаЦессии);
		спрОбъектНовый.ДоговорЦессии=структураДан.ДоговорЦессии;
		спрОбъектНовый.СуммаДолга=Число(структураДан.СуммаДолга);
		спрОбъектНовый.ШПИ=структураДан.ШПИ;
		спрОбъектНовый.Штрафы=Число(структураДан.Штрафы);
		спрОбъектНовый.ПросроченныйОсновнойДолг=Число(структураДан.ПросроченныйОсновнойДолг);
		спрОбъектНовый.ПросроченныеПроценты=Число(структураДан.ПросроченныеПроценты);
		
		
		спрОбъектНовый.Записать();
		
		
		
		
		

		
		
	
	КонецЕсли;
	
	 	

КонецПроцедуры
  

&НаСервере
Функция НайтиДолжникДоговор(дог, долж)

	  должСсылка=Неопределено;
      договорСсылка=Неопределено;

	  
	  данныеДогДолж=Новый Структура;
	  
	  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Должники.Ссылка КАК ДолжникСсылка,
						|	Договоры.Ссылка КАК ДоговорСсылка
						|ИЗ
						|	Справочник.Договоры КАК Договоры
						|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
						|		ПО Договоры.Владелец = Должники.Ссылка
						|ГДЕ
						|	Должники.Наименование = &Наименование
						|	И Договоры.НомерДоговора ПОДОБНО &НомерДоговора";
					
					Запрос.УстановитьПараметр("Наименование", долж);
					Запрос.УстановитьПараметр("НомерДоговора", СокрЛ(дог)+"%");

					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДолжникДоговор = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДолжникДоговор.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						должСсылка=ВыборкаДолжникДоговор.ДолжникСсылка;
						договорСсылка=ВыборкаДолжникДоговор.ДоговорСсылка;
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					данныеДогДолж.Вставить("Должник",должСсылка);
					
					данныеДогДолж.Вставить("Договор",договорСсылка);
					
	
	      Возврат данныеДогДолж;

КонецФункции // ()



  






