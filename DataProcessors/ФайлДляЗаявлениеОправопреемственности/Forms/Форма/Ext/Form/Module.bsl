
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

    ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= ИмяФайла; //АДРЕС
	//ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	//ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
 	

	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьФайлНаСервере()
	
	//     Направлено заявление о процессуальном правопреемстве
	   
	   спрСудСтатус=Справочники.СудебныеСтатусы.НайтиПоНаименованию("Направлено заявление о процессуальном правопреемстве",Истина);
	
	
	   ФайлДанных = ИмяФайла;
		
	   ФайлЕксел.Прочитать(ИмяФайла,СпособЧтенияЗначенийТабличногоДокумента.Текст);
		
       ПЗ = Новый ПостроительЗапроса;

	   ПЗ.ИсточникДанных = Новый ОписаниеИсточникаДанных(ФайлЕксел.Область());

	   ПЗ.ДобавлениеПредставлений = ТипДобавленияПредставлений.НеДобавлять;

	   ПЗ.ЗаполнитьНастройки();

	   ПЗ.Выполнить();

	   ТаблицаЗначений = ПЗ.Результат.Выгрузить();

	    Для каждого стр Из ТаблицаЗначений Цикл
		   
			
			  //ТекущийСтатус
			  //  Суд
			  //  АдресСуда
			  
			 
			  
			  
			  стрСт=Найти(стр.ТекущийСтатус,"заявление");
			  
			  Если стрСт<>0 Тогда
				  
				   стрСотрудник=стр.СОТРУДНИК;
			       позПробел=Найти(стрСотрудник," ");
			  
			       стрСотрудник=Лев(стрСотрудник,позПробел);
			  
				   сотрудникСсылка=Справочники.Сотрудники.НайтиПоНаименованию(стрСотрудник);
				   
				   спрСуд=Неопределено;
				   
				   спрСуд=НайтиСуд(стр.Суд,стр.АдресСуда); 
				   
				  
				   
				   Если ЗначениеЗаполнено(спрСуд.Наименование) Тогда
					       
							  НачатьТранзакцию();
							  Попытка
							    
								 
								 
								 структДанные=НайтиВладельцаЗаявл(стр.ФИО,стр.НомерДоговора);
								 
								 //  создам элемент справочника ЗаявленияОПравеПреемственности
								 
								 //спрСудТемп=спрСуд.ПолучитьОбъект();
								 
								 спрЗаявлОпрПреем=Справочники.ЗаявленияОПравеПреемственности.СоздатьЭлемент();
								 спрЗаявлОпрПреем.Владелец=структДанные.Должник;
								 
								 спрЗаявлОпрПреем.НаименованиеСуда=спрСуд.Ссылка;
								 
								 спрЗаявлОпрПреем.АдресСуда=спрСуд.Адрес;
								 спрЗаявлОпрПреем.НомерДела=стр.НомерСудебногоДела;
								 
								 спрЗаявлОпрПреем.ДатаПодачиДокумента=Дата(стр.ДатаОтправкиВСуд+" 00:00:00");
								 
								 спрЗаявлОпрПреем.НомерКредитногоДоговора=стр.НомерДоговора;
								 спрЗаявлОпрПреем.ДатаКредитногоДоговора=структДанные.ДатаФин;
								 спрЗаявлОпрПреем.Сотрудник=сотрудникСсылка;
								 спрЗаявлОпрПреем.Записать();
								 
								 
								 
								 
								 //  создам элемент справочника ДоговорыСудебныеСтатусы
								 
								            новыйЭлементДогСудСт=Справочники.ДоговорыСудебныеСтатусы.СоздатьЭлемент();
											новыйЭлементДогСудСт.Владелец=структДанные.Должник;
											новыйЭлементДогСудСт.Договор=структДанные.Договор;
											новыйЭлементДогСудСт.СудебныйСтатус=спрСудСтатус;
											
											новыйЭлементДогСудСт.ДатаСудСтатус=Дата(стр.ДатаОтправкиВСуд+" 00:00:00");
											
											новыйЭлементДогСудСт.Записать();

								 ЗафиксироватьТранзакцию();
							  
							  Исключение
								     
									 ОтменитьТранзакцию();  
									 
									  ТекстОшибки = ОписаниеОшибки();
					                 Сообщить(стр.ФИО+"  - "+стр.НомерДоговора);
									 Сообщить(ТекстОшибки);
									 
									 
							  КонецПопытки;

					   
				   Иначе
					   
				   	  Сообщить(стр.Суд);
				   
				   КонецЕсли;
							 							  
							   
				  
					
					
					 
			  
			  КонецЕсли;
			  
			
						
	   КонецЦикла;
	
КонецПроцедуры


&НаСервере
Функция НайтиВладельцаЗаявл(фиовл,дог)
	
	                  структДанные=Новый Структура;     
					  
	
	                 //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Договоры.Ссылка КАК СсылкаДоговор,
						|	Должники.Ссылка КАК СсылкаДолжник,
						|	Договоры.ДатаФинансирования КАК ДатаФинансирования
						|ИЗ
						|	Справочник.Договоры КАК Договоры
						|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
						|		ПО Договоры.Владелец = Должники.Ссылка
						|ГДЕ
						|	Должники.Наименование = &Наименование
						|	И Договоры.НомерДоговора = &НомерДоговора";
					
					Запрос.УстановитьПараметр("Наименование", фиовл);
					Запрос.УстановитьПараметр("НомерДоговора", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						структДанные.Вставить("Договор",ВыборкаДетальныеЗаписи.СсылкаДоговор);
						структДанные.Вставить("Должник",ВыборкаДетальныеЗаписи.СсылкаДолжник);
						структДанные.Вставить("ДатаФин",ВыборкаДетальныеЗаписи.ДатаФинансирования);
						
						
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					
					//  Сразу найду номер и дату цессии
					
											 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ДоговорЦессии.НомерДоговора КАК НомерДоговора,
								|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии
								|ИЗ
								|	Справочник.ДоговорЦессии КАК ДоговорЦессии
								|ГДЕ
								|	ДоговорЦессии.Владелец = &Владелец";
							
							Запрос.УстановитьПараметр("Владелец", структДанные.Договор);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							Выборка = РезультатЗапроса.Выбрать();
							
							Пока Выборка.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								структДанные.Вставить("НомерЦессии",Выборка.НомерДоговора);
								структДанные.Вставить("ДатаЦессии",Выборка.ДатаЦессии);
								
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

											
	
	       Возврат  структДанные;
	

КонецФункции // ()




&НаСервере
Функция НайтиСуд(стрСуд,стрАдресСуда)

	 ссылкаСуд=Неопределено;
	 // //Вытащу индекс -
	 //ин=0; 
	 //Пока  (КодСимвола(стрАдресСуда,ин)>= 48 И  КодСимвола(стрАдресСуда,ин)<= 57)  Цикл
	 //    
	 //   ин=ин+1; 

	 //КонецЦикла;
	
////	 
	 //стрИндексСуда=Лев(стрАдресСуда,ин);
	 
     спрСуды=Справочники.Суды.НайтиПоНаименованию(стрСуд);
	 
	 Если  ЗначениеЗаполнено(спрСуды.Наименование) Тогда
	 
		 ссылкаСуд=спрСуды;
		 
			
	Иначе
		
	
		ссылкаСуд=Справочники.Суды.СоздатьЭлемент();
		
		ссылкаСуд.Наименование=стрСуд;
		
		ссылкаСуд.Адрес=стрАдресСуда;
		
		ссылкаСуд.Записать();
		
	  
	
		
	КонецЕсли;
	 
	 
	 
	 
    Возврат ссылкаСуд;	

 КонецФункции // ()
 
 



 
   
   

&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	ЗагрузитьФайлНаСервере();
	Сообщить("Ок");
КонецПроцедуры
