&НаСервере
Процедура НайтиДвойникНаСервере(реестр)
	
	           ТЧТЕМП.Очистить();
	
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	РеестрДолжники.Должник КАК Должник
					|ИЗ
					|	Документ.Реестр.Должники КАК РеестрДолжники
					|ГДЕ
					|	РеестрДолжники.Ссылка = &Ссылка";
				
				Запрос.УстановитьПараметр("Ссылка", реестр);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					   долж=ВыборкаДетальныеЗаписи.Должник;
					   
						 // проверит сколько таких
						 
						  СколькоДолжнОдинак(долж);

						 
					   
					
				КонецЦикла;
				
				
				
				Для каждого стр  Из ТЧТЕМП  Цикл
					
					
					   					//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Должники.Ссылка КАК Ссылка,
						|	Должники.Наименование КАК Наименование,
						|	Должники.Код КАК Код,
						|	Должники.ДатаРождения КАК ДатаРождения,
						|	Должники.НомерПаспорта КАК НомерПаспорта
						|ИЗ
						|	Справочник.Должники КАК Должники
						|ГДЕ
						|	Должники.Наименование = &Наименование
						|	И Должники.ДатаРождения = &ДатаРождения
						|	И Должники.НомерПаспорта = &НомерПаспорта
						|
						|УПОРЯДОЧИТЬ ПО
						|	Код";
					
					Запрос.УстановитьПараметр("ДатаРождения", стр.ДатаРождения);
					Запрос.УстановитьПараметр("Наименование", стр.ФИО);
					Запрос.УстановитьПараметр("НомерПаспорта",стр.НомерПаспорт);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						Запись=Объект.ТЧ.Добавить();
						Запись.Должник=ВыборкаДетальныеЗаписи.Ссылка;
						
						Запись.ДатаРождения=ВыборкаДетальныеЗаписи.ДатаРождения;
						
						Запись.НомерПаспорта=ВыборкаДетальныеЗаписи.НомерПаспорта;

						Запись.код=ВыборкаДетальныеЗаписи.Код;

						
						
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					
					
					
				
				КонецЦикла;
				
				
				
								
								
				
				
	
	
КонецПроцедуры


&НаСервере
Функция СколькоДолжнОдинак(долж)

	     фиоДолж="";
		 датРожд=Неопределено;
		 номерПасп="";
	   			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Должники.Наименование КАК Наименование,
				|	Должники.ДатаРождения КАК ДатаРождения,
				|	Должники.НомерПаспорта КАК НомерПаспорта
				|ИЗ
				|	Справочник.Должники КАК Должники
				|ГДЕ
				|	Должники.Наименование = &Наименование
				|	И Должники.ДатаРождения = &ДатаРождения
				|	И Должники.НомерПаспорта = &НомерПаспорта";
			
			Запрос.УстановитьПараметр("ДатаРождения",долж.ДатаРождения);
			Запрос.УстановитьПараметр("Наименование", долж.Наименование);
			Запрос.УстановитьПараметр("НомерПаспорта", долж.НомерПаспорта);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
		             ВыборкаДетальныеЗаписи.Следующий();

					Если ВыборкаДетальныеЗаписи.Количество()>1  Тогда
					   
					   фиоДолж=ВыборкаДетальныеЗаписи.Наименование;
					   датРожд=ВыборкаДетальныеЗаписи.ДатаРождения;
					   номерПасп=ВыборкаДетальныеЗаписи.НомерПаспорта;
					
					   
					   
					    ПараметрыОтбора = Новый Структура;
		                ПараметрыОтбора.Вставить("ФИО",фиоДолж );
		 	    	    НайденнаяСтрока = ТЧТЕМП.НайтиСтроки(ПараметрыОтбора);
					  
				  	    Если НайденнаяСтрока.Количество() = 0  Тогда
							  
							    Запись=ТЧТЕМП.Добавить();
				    			
				    			Запись.ФИО=фиоДолж;
				    			Запись.ДатаРождения=датРожд;
				    			Запись.НомерПаспорт=номерПасп;
 
						    						
					    КонецЕсли;

					   
					   
					     						   
				   	           				    			
				    			
				    		
				 
				 КонецЕсли;
			

				
			
	
			
			
			
						
			 
			 
			 
			 
			
			
		

	

КонецФункции // ()


			
			

&НаКлиенте
Процедура НайтиДвойник(Команда)
	НайтиДвойникНаСервере(Объект.Реестр);
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере()
	
	
	     счетчик=0;
		 
		 
		 счетчикТЧ=1;
		 
		 Пока счетчикТЧ<>0  Цикл
			 
			 
			  счетчикТЧ=Объект.ТЧ.Количество();

			    НачатьТранзакцию();

		    
						  
				      Для каждого стр Из Объект.ТЧ  Цикл
							  
								
								 Если счетчик<=100 Тогда
											  
									 
									 ПометитьДвойников(стр.Должник.Наименование,стр.ДатаРождения);  
								  				 
								 Иначе
									 
								   счетчик=0;	 
								  
								   
								  Прервать;
								   

								 КонецЕсли; 
								 
							 счетчик=счетчик+1;  	 
							 			 
							 
						  КонецЦикла;


						 
						  
						  Для каждого стр Из Объект.ТЧ  Цикл
							  
							  
								  Если  стр.Пометка Тогда
									  
									      УдалитьДолжника(стр.Должник);
										  
										  
								  
								  КонецЕсли;
								  
							 
							 
						  КонецЦикла;

					  ЗафиксироватьТранзакцию();
					  
						  
					 Объект.ТЧ.Очистить();  

							 
							 
				НайтиДвойникНаСервере(Объект.Реестр);			 
							 
			 
			 //счетчикТЧ=счетчикТЧ-1;
			   
		 
		 КонецЦикла;
		 
		 		  
		  
		  
	
КонецПроцедуры


&НаСервере
Процедура УдалитьДолжника(долж)

	       справ=долж.ПолучитьОбъект();

		   справ.Удалить();
	
	

КонецПроцедуры



&НаСервере
Процедура ПометитьДвойников(стр,датар)
	
	
	Попытка
		    	
				 	ТЗ=Объект.ТЧ.Выгрузить();
				
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	*
					|ПОМЕСТИТЬ ТВ_ТВ
					|ИЗ
					|	&ТЗ КАК ТЗ
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ТВ_ТВ.НомерСтроки КАК НомерСтроки,
					|	ТВ_ТВ.Код КАК Код,
					|	ТВ_ТВ.Должник КАК Должник
					|ИЗ
					|	ТВ_ТВ КАК ТВ_ТВ
					|ГДЕ
					|	ТВ_ТВ.Должник.Наименование = &Должник И ТВ_ТВ.ДатаРождения=&датаР";
				
				Запрос.УстановитьПараметр("Должник", стр);
				Запрос.УстановитьПараметр("датаР", датар);
			    Запрос.УстановитьПараметр("ТЗ", ТЗ);

				
				  массивДолж=Новый Массив;
			      массивНомерстр=Новый Массив;

				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					  
					   массивДолж.Добавить(ВыборкаДетальныеЗаписи.Должник);
					   массивНомерстр.Добавить(ВыборкаДетальныеЗаписи.Код);
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				
				
				
				
				
				Для Индекс = 0 По  массивНомерстр.Количество() - 1 Цикл
					номерОсн=массивНомерстр[0];
					  Если Индекс>0 И массивНомерстр[Индекс]<>номерОсн Тогда
						  
						    ПараметрыОтбора = Новый Структура;
			                ПараметрыОтбора.Вставить("Код", массивНомерстр[Индекс]);
			 	    	    НайденнаяСтрока = Объект.ТЧ.НайтиСтроки(ПараметрыОтбора);
						  
					  	    Если НайденнаяСтрока <> Неопределено Тогда
								  
								  	    НайденнаяСтрока[0].Пометка=Истина;
							    						
						    КонецЕсли;
								  
					  КонецЕсли;
					  
					
				КонецЦикла;
				
				
				
				Для Индекс = 0 По  массивДолж.Количество() - 1 Цикл
					должОсн=массивДолж[0];
					  Если Индекс<>0 Тогда
						  
						  //НачатьТранзакцию();
						  
						        ПоменятьВладельцаВДоговоре(массивДолж[Индекс], должОсн);
								
							Если НЕ привязкаНет Тогда
							
								  ПоменятьПривязкаСотрудник(массивДолж[Индекс], должОсн);
							
							КонецЕсли;	
								
								
								ПоменятьВРеестрах(массивДолж[Индекс], должОсн)
								
						//ЗафиксироватьТранзакцию();		
									  
					  
					  КонецЕсли;
					  
					
				КонецЦикла;
	
  Исключение
	  
	       Сообщить(ОписаниеОшибки());
	  
  КонецПопытки;
	
   
	

КонецПроцедуры


&НаСервере
Процедура ПоменятьВРеестрах(должИст, должРез)

	        	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	РеестрДолжники.Ссылка КАК Ссылка,
					|	РеестрДолжники.Должник КАК Должник
					|ИЗ
					|	Документ.Реестр.Должники КАК РеестрДолжники
					|ГДЕ
					|	РеестрДолжники.Должник = &Должник
					|
					|УПОРЯДОЧИТЬ ПО
					|	РеестрДолжники.Должник.Код";
				
				Запрос.УстановитьПараметр("Должник", должИст);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				Если НЕ РезультатЗапроса.Пустой() Тогда
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						док=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
						
						 Для каждого стр  Из док.Должники Цикл
							 
							  Если стр.Должник=должИст Тогда
							  
							  	   стр.Должник=должРез;
							  
							  КонецЕсли;
						 	
						 
						 КонецЦикла;
						
						 док.Записать();
						
					КонецЦикла;

					
				
				КонецЕсли;
				
								
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			 
	
	

КонецПроцедуры



&НаСервере
Процедура ПоменятьПривязкаСотрудник(должИст, должРез)

	
	  
					
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ПривязкаСотрудник.Должник КАК Должник,
				|	ПривязкаСотрудник.Регистратор КАК Регистратор
				|ИЗ
				|	РегистрСведений.ПривязкаСотрудник КАК ПривязкаСотрудник
				|ГДЕ
				|	ПривязкаСотрудник.Должник = &Должник";
			
			Запрос.УстановитьПараметр("Должник", должИст);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				  НаборЗаписей = РегистрыСведений.ПривязкаСотрудник.СоздатьНаборЗаписей();
				  
				  НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
				  //НаборЗаписей.Отбор.Должник.Установить(ВыборкаДетальныеЗаписи.Должник);
				  
				  
				  НаборЗаписей.Прочитать();
				  
				  Для каждого стр Из НаборЗаписей Цикл
					    Если стр.Должник=ВыборкаДетальныеЗаписи.Должник   Тогда
							 
							   стр.Должник=должРез;
							     НаборЗаписей.Записать();

						
						КонецЕсли;
					    
				  	 				  
				  КонецЦикла; 
				  
				
			КонецЦикла;
		
			//ПривязкаОтветственный
			
			   					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ПривязкаОтветственный.Должник КАК Должник,
						|	ПривязкаОтветственный.Регистратор КАК Регистратор
						|ИЗ
						|	РегистрСведений.ПривязкаОтветственный КАК ПривязкаОтветственный
						|ГДЕ
						|	ПривязкаОтветственный.Должник = &Должник";
					
					Запрос.УстановитьПараметр("Должник", должИст);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						   НаборЗаписей = РегистрыСведений.ПривязкаОтветственный.СоздатьНаборЗаписей();
				  
						   НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
							  
							  
							  НаборЗаписей.Прочитать();
							  
							  Для каждого стр Из НаборЗаписей Цикл
								    Если стр.Должник=ВыборкаДетальныеЗаписи.Должник   Тогда
										 
										   стр.Должник=должРез;
										
									
									КонецЕсли;
								    
							  	  НаборЗаписей.Записать();
							  
							  КонецЦикла; 

						
					КонецЦикла;
					
					

				//  ПривязкаОтдел
							
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПривязкаОтдел.Регистратор КАК Регистратор,
					|	ПривязкаОтдел.Должник КАК Должник
					|ИЗ
					|	РегистрСведений.ПривязкаОтдел КАК ПривязкаОтдел
					|ГДЕ
					|	ПривязкаОтдел.Должник = &Должник";
				
				Запрос.УстановитьПараметр("Должник", должИст);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					     
						   НаборЗаписей = РегистрыСведений.ПривязкаОтдел.СоздатьНаборЗаписей();
				  
						   НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
						   //НаборЗаписей.Отбор.Должник.Установить(ВыборкаДетальныеЗаписи.Должник);
						   
						   
						   
							  НаборЗаписей.Прочитать();
							  
							  
							  
							  Для каждого стр Из НаборЗаписей Цикл
								    Если стр.Должник=ВыборкаДетальныеЗаписи.Должник   Тогда
										 
										   стр.Должник=должРез;
										   НаборЗаписей.Записать();

									
									КонецЕсли;
								    
							  	  							  
							  КонецЦикла; 

					
					
				КонецЦикла;
				
				// Адреса
				
			     	
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Адреса.Ссылка КАК Ссылка,
						|	Адреса.Владелец КАК Владелец
						|ИЗ
						|	Справочник.Адреса КАК Адреса
						|ГДЕ
						|	Адреса.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", должИст);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						
						  справ=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
                           справ.Владелец=должРез;
				   
 	         			   справ.Записать();
						
					КонецЦикла;
					
					
				//  Телефоны
					
				
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Телефоны.Ссылка КАК Ссылка,
						|	Телефоны.Владелец КАК Владелец
						|ИЗ
						|	Справочник.Телефоны КАК Телефоны
						|ГДЕ
						|	Телефоны.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", должИст);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						   справ=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
                           справ.Владелец=должРез;
				   
 	         			   справ.Записать();
			
						
					КонецЦикла;
					
				
					
					//   Доп данные
					
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ДополнительныеДанные.Владелец КАК Владелец,
						|	ДополнительныеДанные.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
						|ГДЕ
						|	ДополнительныеДанные.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", должИст);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						   справ=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
                           справ.Владелец=должРез;
				   
 	         			   справ.Записать();
			

						
					КонецЦикла;
					
					
					
				//  Документ контакт
								
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Контакт.Ссылка КАК Ссылка,
					|	Контакт.Должник КАК Должник
					|ИЗ
					|	Документ.Контакт КАК Контакт
					|ГДЕ
					|	Контакт.Должник = &Должник";
				
				Запрос.УстановитьПараметр("Должник", должИст);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					       справ=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
                           справ.Должник=должРез;
				   
 	         			   справ.Записать(РежимЗаписиДокумента.Проведение);
					
					
				КонецЦикла;
				
    	// платежи
		
							//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ПлатежиДолжники.Ссылка КАК Ссылка,
								|	ПлатежиДолжники.Должник КАК Должник
								|ИЗ
								|	Документ.Платежи.Должники КАК ПлатежиДолжники
								|ГДЕ
								|	ПлатежиДолжники.Должник = &Должник
								|	И ПлатежиДолжники.Ссылка.ПометкаУдаления = &ПометкаУдаления";
							
							Запрос.УстановитьПараметр("Должник", должИст);
							Запрос.УстановитьПараметр("ПометкаУдаления", Ложь);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								
								       пров=Ложь;
									   справ=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
									   
									   
									  	   Для каждого стр Из  справ.Должники Цикл
										   
										   	   Если стр.Должник=должИст  Тогда
										       
										       	    стр.Должник=должРез;
													пров=Истина;
										       
										       КонецЕсли; 
										   
										   КонецЦикла; 
										   
										Если пров Тогда
										
											справ.Записать(РежимЗаписиДокумента.Проведение);

										
										КонецЕсли;   
									    		
										   //справ.Записать(РежимЗаписиДокумента.Проведение);
										   

												
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


					
				
					  //
					  // справ=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
					  //     
					  //     Для каждого стр Из  справ.Должники Цикл
					  //     
					  //     	   Если стр.Должник=должИст  Тогда
					  //  	   
					  //  	   	    стр.Должник=должРез;
					  //  	   
					  //  	   КонецЕсли; 
					  //     
					  //     КонецЦикла; 
					  //  		
					  //  		
					  //     справ.Записать(РежимЗаписиДокумента.Проведение);

					
	
	
КонецПроцедуры

&НаСервере
Процедура ПоменятьВладельцаВДоговоре(должИст, должРез)

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.Ссылка КАК Ссылка,
		|	Договоры.Владелец КАК Владелец,
		|	Договоры.НомерДоговора КАК НомерДоговора
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", должИст);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
	      номерДог=ВыборкаДетальныеЗаписи.НомерДоговора; 	
		
		  естьДог=ЕстьЛиТакойДоговор(должРез,номерДог);
		  
		  Если НЕ естьДог Тогда
			  
			       справ=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			  
		  	       справ.Владелец=должРез;
				   
				   справ.Записать();
		  
		  КонецЕсли;
		  
		  
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	

КонецПроцедуры




&НаСервере
Функция ЕстьЛиТакойДоговор(долж,номерд)

	  догЕсть=Ложь;
	
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.НомерДоговора КАК НомерДоговора
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.Владелец = &Владелец
		|	И Договоры.НомерДоговора = &НомерДоговора";
	
	Запрос.УстановитьПараметр("Владелец", долж);
	Запрос.УстановитьПараметр("НомерДоговора", номерд);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
	
		  догЕсть=Истина;
	
	КонецЕсли;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 Возврат догЕсть;

КонецФункции // ()





	  
	  

&НаКлиенте
Процедура Удалить(Команда)
	
	//Сообщить(Объект.ТЧ.Количество());
	
	УдалитьНаСервере();
	
	
КонецПроцедуры

&НаСервере
Процедура ОбъединитьНаСервере()
	// Вставить содержимое обработчика.
	
	
	   
	
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Объединить(Команда)
	ОбъединитьНаСервере();
КонецПроцедуры



















