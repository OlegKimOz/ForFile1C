&НаКлиенте
Перем сервисОткр,флагВозр,структураФильтрПечать,входящиеОткр,СтраницаШаблоныОткр;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ОткрытьФорму("Справочник.Договоры.Форма.ФормаВыбораДогДолж",,ЭтаФорма);
	
	   МенеджерВТ = Новый МенеджерВременныхТаблиц;
	   
	  сотрудникСеанс=ПараметрыСеанса.Пользователь; 
	  
	  ПользовательТк=ПараметрыСеанса.Пользователь;
	  
	  
	  //Очищу регистр
	  ОчиститьРегистр(сотрудникСеанс);
	   
	   видимФСП=Новый Структура;
	
		видимФСП.Вставить("Период", ТекущаяДата());
		видимФСП.Вставить("Сотрудник", ПараметрыСеанса.Пользователь);
		
		УстановитьПараметрыФункциональныхОпцийФормы(видимФСП);

	  
	  
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.Ссылка КАК Договор,
		|	Договоры.НомерДоговора КАК НомерДоговора,
		|	Должники.Ссылка КАК Должник,
		|	ПривязкаДоговорСрезПоследних.Сотрудник КАК Сотрудник,
		|	ПривязкаДоговорСрезПоследних.ДатаПодгрузки КАК ДатаПодгрузки,
		|	Договоры.ДатаФинансирования КАК ДатаФинансирования,
		|	Договоры.ТипКредита КАК ТипКредита
		|ПОМЕСТИТЬ Договора
		|ИЗ
		|	РегистрСведений.ПривязкаДоговор.СрезПоследних КАК ПривязкаДоговорСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Договоры КАК Договоры
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
		|			ПО Договоры.Владелец = Должники.Ссылка
		|		ПО ПривязкаДоговорСрезПоследних.Договор = Договоры.Ссылка
		|ГДЕ
		|	ПривязкаДоговорСрезПоследних.Сотрудник = &Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Договора.Договор КАК Договор,
		|	Договора.НомерДоговора КАК НомерДоговора,
		|	Договора.Должник КАК Должник,
		|	Договора.Сотрудник КАК Сотрудник,
		|	Договора.ДатаПодгрузки КАК ДатаПодгрузки,
		|	Договора.ДатаФинансирования КАК ДатаФинансирования,
		|	Договора.ТипКредита КАК ТипКредита
		|ПОМЕСТИТЬ ДоговорВР
		|ИЗ
		|	Договора КАК Договора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорВР.Договор КАК Договор,
		|	ДоговорВР.НомерДоговора КАК НомерДоговора,
		|	ДоговорВР.Должник КАК Должник,
		|	ДоговорВР.ДатаПодгрузки КАК ДатаПодгрузки,
		|	НачальныеДанныеДоговораСрезПервых.Регистратор.Дата КАК ДатаЗагрузки,
		|	НачальныеДанныеДоговораСрезПервых.Регистратор.Банк КАК Цедент,
		|	ДоговорВР.Сотрудник КАК Сотрудник,
		|	ДоговорВР.ДатаФинансирования КАК ДатаФинансирования,
		|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии,
		|	ДоговорЦессии.НомерДоговора КАК НомерЦессии,
		|	НачальныеДанныеДоговораСрезПервых.СуммаЗадолженности КАК СуммаЗадолженностиНачальная,
		|	ДоговорВР.ТипКредита КАК ТипКредита
		|ИЗ
		|	ДоговорВР КАК ДоговорВР
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачальныеДанныеДоговора.СрезПервых КАК НачальныеДанныеДоговораСрезПервых
		|		ПО ДоговорВР.Договор = НачальныеДанныеДоговораСрезПервых.Договор
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорЦессии КАК ДоговорЦессии
		|		ПО (ДоговорЦессии.Владелец = ДоговорВР.Договор)";
	
	
	Запрос.УстановитьПараметр("Сотрудник", сотрудникСеанс);
    
	


	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	         счет=0;
	Пока Выборка.Следующий() Цикл
		
		//////////////
		
			 счет=счет+1;
			 новаяСтр=ТЗ.Добавить();
			 новаяСтр.ДатаЗагрузки=Выборка.ДатаЗагрузки;
			 новаяСтр.Ном=счет;
			 новаяСтр.Цедент=Выборка.Цедент;

			 новаяСтр.НомерКредитногоДоговора=Выборка.НомерДоговора;
			 
			 новаяСтр.КрДоговор=Выборка.Договор;
			 новаяСтр.ФИОДолжника=Выборка.Должник;
			 
			 новаяСтр.ОтветственныйСотрудник=Выборка.Сотрудник;
			 
			 новаяСтр.ДатаКредитногоДоговора=Выборка.ДатаФинансирования;
			 
			 новаяСтр.НомерДоговораЦессии=Выборка.НомерЦессии;
			 новаяСтр.ДатаЦессии=Выборка.ДатаЦессии;
			 
			 новаяСтр.ВидПродукта=Выборка.ТипКредита;
			 
			 новаяСтр.ДатаПодгрузки=Выборка.ДатаПодгрузки;
			 
			 новаяСтр.СуммаЗадолженностиПереданная=Выборка.СуммаЗадолженностиНачальная;
			 
			 //новаяСтр.СуммаЗадолженностиТекущая=Выборка.ВсегоЗадолженность;

			 //
			 //       //новаяСтр.СуммаЗадолженностиТекущая=ВсегоЗадолженность(Выборка.Договор);
			 //
			//новаяСтр.ДатаПоследнегоПлатежа= ДатаПоследнегоПлатежа(Выборка.Договор);
			 
			 новаяСтр.ДатаПоследнегоЗаседания=ДатаПоследнегоЗаседания(Выборка.Договор);

			 новаяСтр.ДатаЗаявленияОПП=ДатаЗаявленияОПП(Выборка.Договор);
			 
			 //////////
			 
			 
			 // Запишу в регистр
			МенеджерЗаписи = РегистрыСведений.РегистрСведенийДляНачальныйРабочийСтолЮристы.СоздатьМенеджерЗаписи();
	    	МенеджерЗаписи.ДатаЗагрузки=Выборка.ДатаЗагрузки;
			МенеджерЗаписи.Цедент=Выборка.Цедент;
			МенеджерЗаписи.НомерКредитногоДоговора=Выборка.НомерДоговора;

			МенеджерЗаписи.КрДоговор=Выборка.Договор;

			МенеджерЗаписи.ФИОДолжника=Выборка.Должник;
			
			МенеджерЗаписи.ДатаПодгрузки=Выборка.ДатаПодгрузки;
			
			МенеджерЗаписи.ОтветственныйСотрудник=Выборка.Сотрудник;
			МенеджерЗаписи.ДатаКредитногоДоговора=Выборка.ДатаФинансирования;
			МенеджерЗаписи.НомерДоговораЦессии=Выборка.НомерЦессии;
			
			МенеджерЗаписи.ДатаЦессии=Выборка.ДатаЦессии;
			МенеджерЗаписи.ВидПродукта=Выборка.ТипКредита;
			МенеджерЗаписи.СуммаЗадолженностиПереданная=Выборка.СуммаЗадолженностиНачальная;
			//
			//МенеджерЗаписи.СуммаЗадолженностиТекущая=Выборка.ВсегоЗадолженность;
			//
			////МенеджерЗаписи.СуммаЗадолженностиТекущая=ВсегоЗадолженность(Выборка.Договор);
			//
			
			//МенеджерЗаписи.ДатаПоследнегоПлатежа= ДатаПоследнегоПлатежа(Выборка.Договор);
			МенеджерЗаписи.ДатаПоследнегоЗаседания=ДатаПоследнегоЗаседания(Выборка.Договор);
			МенеджерЗаписи.ДатаЗаявленияОПП=ДатаЗаявленияОПП(Выборка.Договор);
			
			
			МенеджерЗаписи.Записать();
						 
						 
			 
			 
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	               

	     
	

	//ЗаполнитьВсюБазу ();
	
	          ТЗКопия.Очистить();
	   
	          ТаблицаКопия=ТЗ.Выгрузить();
	   
	          ТЗКопия.Загрузить(ТаблицаКопия);

			  
			  
			 
			  
	        ДинСписок.Параметры.УстановитьЗначениеПараметра("ОтветственныйСотрудник", сотрудникСеанс);
			
			ГруппаДоговоровЮрист.Параметры.УстановитьЗначениеПараметра("Владелец", сотрудникСеанс);
			


			// новаяСтр=ТЗ.Добавить();
			//новаяСтр.ДатаЗагрузки=Выборка.ДатаЗагрузки;
			//новаяСтр.Цедент=Выборка.Цедент;
			//
	
			УстановитьУсловноеОформление();
			
КонецПроцедуры


&НаСервере
Процедура УстановитьУсловноеОформление()

	
    УсловноеОформление.Элементы.Очистить();
	
	ЭлементОформления = ДинСписок.УсловноеОформление.Элементы.Добавить();     
    ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("КрДоговор");   
    ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;    
    ЭлементОтбора.ПравоеЗначение = ДоговораВгруппе();
    ЭлементОтбора.Использование  = Истина;
    ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Аквамарин);
	
	
	
КонецПроцедуры


&НаСервере
Функция ДоговораВгруппе()

	      массивДоговоров=Новый Массив;
	
			       	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ГруппыДоговоровЮристТЧ.КрДоговор КАК КрДоговор
				|ИЗ
				|	Справочник.ГруппыДоговоровЮрист.ТЧ КАК ГруппыДоговоровЮристТЧ
				|ГДЕ
				|	ГруппыДоговоровЮристТЧ.Ссылка.Владелец = &Владелец";
			
			Запрос.УстановитьПараметр("Владелец", ПользовательТк);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				массивДоговоров.Добавить(ВыборкаДетальныеЗаписи.КрДоговор);
			КонецЦикла;
			
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

			
	    Возврат массивДоговоров;

КонецФункции // ()





&НаСервере
Функция ВсегоЗадолженность(дог)

	  
	           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДанныеДоговоровСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность
		|ИЗ
		|	РегистрСведений.ДанныеДоговоров.СрезПоследних КАК ДанныеДоговоровСрезПоследних
		|ГДЕ
		|	ДанныеДоговоровСрезПоследних.Договор = &Договор
		|УПОРЯДОЧИТЬ ПО
	    |Период УБЫВ";
	
	Запрос.УстановитьПараметр("Договор", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		всегоЗадолж=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 Возврат всегоЗадолж;

КонецФункции // ()

		
		



&НаСервере
Процедура ОчиститьРегистр(сотрудник)
	
	 Набор = РегистрыСведений.РегистрСведенийДляНачальныйРабочийСтолЮристы.СоздатьНаборЗаписей();
     Набор.Отбор.ОтветственныйСотрудник.Установить(сотрудник);
	 Набор.Записать();
	

КонецПроцедуры




//Дата заявления  ОПП    - исходящий документ (динамическое)

&НаСервереБезКонтекста
Функция ДатаЗаявленияОПП(дог)
	
	               датаЗаявления= '00010101';
	
	                массивОПП=Новый массив;   
	
	
	
						                   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ЗаявлениеОПроцессуальномПравопреемстве.Ссылка КАК Ссылка
							|ИЗ
							|	Справочник.ЗаявлениеОПроцессуальномПравопреемстве КАК ЗаявлениеОПроцессуальномПравопреемстве
							|ГДЕ
							|	ЗаявлениеОПроцессуальномПравопреемстве.Владелец = &Владелец";
						
						Запрос.УстановитьПараметр("Владелец", дог);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							
							 массивОПП.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
							
						КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	         Если массивОПП.Количество()>0  Тогда
				 
				 
				      					     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ ПЕРВЫЕ 1
						|	ДокументИсходящий.Ссылка КАК Ссылка,
						|	ДокументИсходящий.ДатаРегистрации КАК ДатаРегистрации
						|ИЗ
						|	Справочник.ДокументИсходящий КАК ДокументИсходящий
						|ГДЕ
						|	ДокументИсходящий.СсылкаНаДокумент В(&СсылкаНаДокумент)
						|
						|УПОРЯДОЧИТЬ ПО
						|	ДатаРегистрации УБЫВ";
					
					Запрос.УстановитьПараметр("СсылкаНаДокумент", массивОПП);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
					
						    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								
								  датаЗаявления=ВыборкаДетальныеЗаписи.ДатаРегистрации;
								
								
							КонецЦикла;

					
					КонецЕсли;
					
					
					
										
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

			 	
			 
			 КонецЕсли;
	
	
	 
	
	    Возврат датаЗаявления;

КонецФункции // ()




&НаСервереБезКонтекста
Функция ДатаПоследнегоЗаседания(дог)
	
	    ДатаЗаседания=Неопределено;
	    
					       	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ ПЕРВЫЕ 1
						|	ВкладкаСудСудебнаяСтадияТЧ.ДатаЗаседания КАК ДатаЗаседания
						|ИЗ
						|	Справочник.ВкладкаСудСудебнаяСтадия.ТЧ КАК ВкладкаСудСудебнаяСтадияТЧ
						|ГДЕ
						|	ВкладкаСудСудебнаяСтадияТЧ.Ссылка.Владелец = &Владелец
						|
						|УПОРЯДОЧИТЬ ПО
						|	ДатаЗаседания УБЫВ";
					
					Запрос.УстановитьПараметр("Владелец", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						 ДатаЗаседания=ВыборкаДетальныеЗаписи.ДатаЗаседания;
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					
		  Возврат ДатаЗаседания;			
					
	

КонецФункции // ()

		

&НаСервереБезКонтекста
Функция ДатаПоследнегоПлатежа(дог)

	        датаПослПлат=Дата(1, 1, 1, 0, 0, 0); 
	
					             	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ ПЕРВЫЕ 1
						|	Платежи.Период КАК Период,
						|	Платежи.Договор КАК Договор
						|ИЗ
						|	РегистрНакопления.Платежи КАК Платежи
						|ГДЕ
						|	Платежи.Договор = &Договор
						|
						|УПОРЯДОЧИТЬ ПО
						|	Период УБЫВ";
					
					Запрос.УстановитьПараметр("Договор", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						датаПослПлат=ВыборкаДетальныеЗаписи.Период;
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	       Возврат датаПослПлат;

КонецФункции // ()




&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
	   //УстановитьУсловноеОформление();
	

КонецПроцедуры

&НаКлиенте
Процедура ТЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
				 Если Поле.Имя = "ТЗДатаЗагрузки" Тогда
					 
						//Кнопки = ЭлементыФормы.ПанельДействия.Кнопки;
						//Кнопки.Очистить();
						//Кнопки.Добавить("КонтМенюОткрытьСобытие",ТипКнопкиКоманднойПанели.Действие,Строка(обСсылка),Новый Действие("ОткрытьСобытие"));
						//Кнопки.Добавить("КонтМенюОткрытьДокумент",ТипКнопкиКоманднойПанели.Действие,Строка(обСсылка.ДокументСобытия),Новый Действие("ОткрытьДокументСобытия"));
						//Кнопки.КонтМенюОткрытьСобытие.Картинка  = БиблиотекаКартинок.ЗначокДокумент16;
						//Кнопки.КонтМенюОткрытьДокумент.Картинка = БиблиотекаКартинок.ЗначокДокумент16;
						//Скрипт = Новый COMОбъект("WScript.Shell");
						//Скрипт.SendKeys("+{F10}");
						//ПодключитьОбработчикОжидания("СменитьКонтекстноеМеню",0.1,Истина);
						     
				 КонецЕсли;

	
	         	  парамСтруктура=Новый Структура;
	              парамСтруктура.Вставить("тДоговор", Элемент.ТекущиеДанные.КрДоговор);
				  
				  // Элемент.ТекущиеДанные.КрДоговор
	  
	              ОткрытьФорму("Обработка.СудебнаяСтадия.Форма.Форма",парамСтруктура,ЭтаФорма);

				  сервисОткр=Ложь;

	
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	
	
		 //ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляПоиска",ЭтотОбъект); 
		 
		 ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляПоиска2",ЭтотОбъект); 

		 
		 данныеПоискаСтруктура=Новый Структура;
		 данныеПоискаСтруктура.Вставить("Банк",БанкПоиск);
		 
		 //Заполнить копию
		 //ЗаполнитьКопию();
		 
	     ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаПоиск",данныеПоискаСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
	
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьКопию()

	 	   
	   ТаблицаКопия=ТЗКопия.Выгрузить();
	   
	   ТЗ.Загрузить(ТаблицаКопия);

	   
	   
	
КонецПроцедуры


	 
&НаКлиенте
Процедура ДанныеДляПоиска2(РезультатЗакрытия,ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия= Неопределено Тогда
	     Возврат;
		
	
	Иначе
		
		      данныеСтруктура=Новый Структура;
			  
			  данныеБанкиСтруктура=Новый Структура;
			  
			  данныеДатаСтруктура=Новый Структура;
			  
			  
			  ДоговораМного=РезультатЗакрытия.ДоговораМ;
			  БанкПоиск= РезультатЗакрытия.Банк;
			  ДоговорЦессииПоиск= РезультатЗакрытия.НомерДоговораЦессии;
			  ШифрДокумента=РезультатЗакрытия.ШифрДокумента;
			  
			  
		      ОтменаПоиска=РезультатЗакрытия.ОтменаПоиска;
			  
			  НетИсполнителя=РезультатЗакрытия.НетИсполнителя;
			  
			   //ДоговораМного[0].Значение.Ссылка
			   
			    
			  флагИскать=Ложь;
			  ДатаЦессииОтФлаг=Ложь;
			  ДатаЦессииДоФлаг=Ложь;

			  
			  //данныеСтруктура.Вставить("ДатаЦессииОтФлаг",Ложь);

			  
			  
			  Если  РезультатЗакрытия.Банк.Количество()>0 Тогда
			  
				  
				  данныеБанкиСтруктура.Вставить("Цеденты_",РезультатЗакрытия.Банк);
				   
                   флагИскать=Истина;   

			  
			  КонецЕсли;
			    
			  
			  Если РезультатЗакрытия.НомерДоговораЦессии<>"" Тогда
			  
		  	     данныеСтруктура.Вставить("НомерДоговораЦессии",РезультатЗакрытия.НомерДоговораЦессии);
                 флагИскать=Истина;   
		  
			  КонецЕсли;
			 
			 Если РезультатЗакрытия.ДатаЦессииОт<>'00010101' Тогда
			  
				 данныеДатаСтруктура.Вставить("ДатаЦессииОт",РезультатЗакрытия.ДатаЦессииОт);
				 
				 ДатаЦессииОтФлаг=Истина;
				 
				 
				 
                 флагИскать=Истина;   
		  
			 КонецЕсли;
			 
			 
			 
			 
			 
			  Если РезультатЗакрытия.ДатаЦессииДо<>'00010101' Тогда
				  
				  
				  
				  
				 данныеДатаСтруктура.Вставить("ДатаЦессииДо",РезультатЗакрытия.ДатаЦессииДо);
				 
				 ДатаЦессииДоФлаг=Истина;
				 
				 
				 
                 флагИскать=Истина;   
		  
			 КонецЕсли;
			 
             Если РезультатЗакрытия.ДатаЦессииДо<>'00010101' И РезультатЗакрытия.ДатаЦессииДо<РезультатЗакрытия.ДатаЦессииОт Тогда
			 
				      флагИскать=Ложь;
                      Сообщить("Не верно указаны даты");				 
			 
			 КонецЕсли;
			 
			  Если Не РезультатЗакрытия.ФИОДолжника.Пустая() Тогда
			  
		  	       данныеСтруктура.Вставить("ФИОДолжника",РезультатЗакрытия.ФИОДолжника);
                   флагИскать=Истина;   

			  
			  КонецЕсли;
			 
			   
			   Если РезультатЗакрытия.ДоговораМ.Количество()>0 Тогда
			       
				   
				   
				    данныеСтруктура.Вставить("КрДоговор",ДоговораМного);
			       
				   //данныеСтруктура.Вставить("КрДоговор",РезультатЗакрытия.СсылкаКД);
				   
			       флагИскать=Истина;   

			  
			  КонецЕсли;

			  
			  
			   Если РезультатЗакрытия.ШифрДокумента>0 Тогда
			       
				   
				   
				    
				   
				   
			       
				  данныеСтруктура.Вставить("ШифрДокумента",ШифрДокумента);
				   
			       флагИскать=Истина;   
			   Иначе
				   
				 данныеСтруктура.Вставить("ШифрДокумента",0);  
			  
			  КонецЕсли;

			  
			  
			  // Если Не РезультатЗакрытия.СсылкаКД.Пустая() Тогда
			  //     
			  //     
			  //     
			  //     данныеСтруктура.Вставить("КрДоговор",РезультатЗакрытия.СсылкаКД);
			  //     флагИскать=Истина;   

			  //
			  //КонецЕсли;
			 
//
			  
			  
                   Если ОтменаПоиска Тогда
					   //СброситьФильтрНаСервере();

					    ТЗПоиск.Очистить();
					   
					   //
					   // Если ТЗВсяБаза.Количество()>0 Тогда
					   // 	
					   // 	ТаблицаКопия=ТЗВсяБаза.Выгрузить();
					   //
					   //     ТЗПоиск.Загрузить(ТаблицаКопия);
					   //  Иначе	
					   // 	 
					   // 	   СброситьФильтрНаСервере();

					   // 	 
					   // 
					   // КонецЕсли; 

								   	
				   
				   Иначе
				   
					    
					 					  
					  Если флагИскать  Тогда
					  
					  	    ПерестроитьТЗПоПоискуПоВсейБазе(данныеСтруктура,данныеБанкиСтруктура,ДатаЦессииОтФлаг,ДатаЦессииДоФлаг,данныеДатаСтруктура,НетИсполнителя);

					  
					  КонецЕсли;

					   
				   
				   КонецЕсли;
			  
			  
			  
					 			  
			   
 
			   
				
	
	КонецЕсли;
	
	
	
КонецПроцедуры







&НаКлиенте
Процедура ДанныеДляПоиска(РезультатЗакрытия,ДополнительныеПараметры) Экспорт

	
	    
	
		 Если РезультатЗакрытия= Неопределено Тогда
		      Возврат;
		
		  Иначе
			  
			  
			  
			  данныеСтруктура=Новый Структура;
			  
			  данныеБанкиСтруктура=Новый Структура;
			  
			  данныеДатаСтруктура=Новый Структура;
			  
			  
			  ДоговораМного=РезультатЗакрытия.ДоговораМ;
			  БанкПоиск= РезультатЗакрытия.Банк;
			  ДоговорЦессииПоиск= РезультатЗакрытия.НомерДоговораЦессии;
			  
			   НетИсполнителя=РезультатЗакрытия.НетИсполнителя;

			  ОтменаПоиска=РезультатЗакрытия.ОтменаПоиска;
			  
			  
			  
			  
			  флагИскать=Ложь;
			  ДатаЦессииОтФлаг=Ложь;
			  ДатаЦессииДоФлаг=Ложь;

			  
			  //данныеСтруктура.Вставить("ДатаЦессииОтФлаг",Ложь);

			  
			  
			  Если  РезультатЗакрытия.Банк.Количество()>0 Тогда
			  
				  
				  данныеБанкиСтруктура.Вставить("Цеденты_",РезультатЗакрытия.Банк);
				   
                   флагИскать=Истина;   

			  
			  КонецЕсли;
			    
			  
			  Если РезультатЗакрытия.НомерДоговораЦессии<>"" Тогда
			  
		  	     данныеСтруктура.Вставить("НомерДоговораЦессии",РезультатЗакрытия.НомерДоговораЦессии);
                 флагИскать=Истина;   
		  
			  КонецЕсли;
			 
			 Если РезультатЗакрытия.ДатаЦессииОт<>'00010101' Тогда
			  
				 данныеДатаСтруктура.Вставить("ДатаЦессииОт",РезультатЗакрытия.ДатаЦессииОт);
				 
				 ДатаЦессииОтФлаг=Истина;
				 
				 
				 
                 флагИскать=Истина;   
		  
			 КонецЕсли;
			 
			 
			 
			 
			 
			  Если РезультатЗакрытия.ДатаЦессииДо<>'00010101' Тогда
				  
				  
				  
				  
				 данныеДатаСтруктура.Вставить("ДатаЦессииДо",РезультатЗакрытия.ДатаЦессииДо);
				 
				 ДатаЦессииДоФлаг=Истина;
				 
				 
				 
                 флагИскать=Истина;   
		  
			 КонецЕсли;
			 
             Если РезультатЗакрытия.ДатаЦессииДо<>'00010101' И РезультатЗакрытия.ДатаЦессииДо<РезультатЗакрытия.ДатаЦессииОт Тогда
			 
				      флагИскать=Ложь;
                      Сообщить("Не верно указаны даты");				 
			 
			 КонецЕсли;
			 
			  Если Не РезультатЗакрытия.ФИОДолжника.Пустая() Тогда
			  
		  	       данныеСтруктура.Вставить("ФИОДолжника",РезультатЗакрытия.ФИОДолжника);
                   флагИскать=Истина;   

			  
			  КонецЕсли;
			 
			   
			   Если РезультатЗакрытия.ДоговораМ.Количество()>0 Тогда
			       
				   
				   
				    данныеСтруктура.Вставить("КрДоговор",ДоговораМного);
			       
				   //данныеСтруктура.Вставить("КрДоговор",РезультатЗакрытия.СсылкаКД);
				   
			       флагИскать=Истина;   

			  
			  КонецЕсли;

			  
			  // Если Не РезультатЗакрытия.СсылкаКД.Пустая() Тогда
			  //     
			  //     
			  //     
			  //     данныеСтруктура.Вставить("КрДоговор",РезультатЗакрытия.СсылкаКД);
			  //     флагИскать=Истина;   

			  //
			  //КонецЕсли;
			 
//
			  
			  
			       Если ОтменаПоиска Тогда
					   
					    Если ТЗВсяБаза.Количество()>0 Тогда
							
							ТаблицаКопия=ТЗВсяБаза.Выгрузить();
					   
					        ТЗ.Загрузить(ТаблицаКопия);
						 Иначе	
							 
							   СброситьФильтрНаСервере();

							 
						
						КонецЕсли; 

								   	
				   
				   Иначе
				   
					    
					  Если флагИскать и НЕ ПоискПоВсейБазе Тогда
						  
						    
					  	    ПерестроитьТЗПоПоиску(данныеСтруктура,данныеБанкиСтруктура,ДатаЦессииОтФлаг,ДатаЦессииДоФлаг,данныеДатаСтруктура);

					  
					  КонецЕсли;
					  
					  Если флагИскать и ПоискПоВсейБазе Тогда
					  
					  	    ПерестроитьТЗПоПоискуПоВсейБазе(данныеСтруктура,данныеБанкиСтруктура,ДатаЦессииОтФлаг,ДатаЦессииДоФлаг,данныеДатаСтруктура,НетИсполнителя);

					  
					  КонецЕсли;

					   
				   
				   КонецЕсли;
			  
			  
			  
					 			  
			   

			  
			  
		 КонецЕсли;  
		  
	

КонецПроцедуры


&НаСервере
Процедура ПерестроитьТЗПоПоискуПоВсейБазе(данныйПоиска,данныеБанкиСтруктура,ДатаЦессииОтФлаг,ДатаЦессииДоФлаг,данныеДатаСтруктура,НетИсполнителя)

	
	             Текст="";
				 
				 флагНетДаты=Ложь;
				 
				 
									 
					  ТекстСтарт = 
				            "ВЫБРАТЬ
				            |	Договоры.Ссылка КАК Договор,
				            |	Договоры.НомерДоговора КАК НомерДоговора,
				            |	Должники.Ссылка КАК Должник,
				            |	ПривязкаДоговорСрезПоследних.Сотрудник КАК Сотрудник,
				            |	Договоры.ДатаФинансирования КАК ДатаФинансирования,
				            |	Договоры.ТипКредита КАК ТипКредита
				            |ПОМЕСТИТЬ Договора
				            |ИЗ
				            |	РегистрСведений.ПривязкаДоговор.СрезПоследних КАК ПривязкаДоговорСрезПоследних
				            |		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Договоры КАК Договоры
				            |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
				            |			ПО Договоры.Владелец = Должники.Ссылка
				            |		ПО ПривязкаДоговорСрезПоследних.Договор = Договоры.Ссылка
				            |;
				            |
				            |////////////////////////////////////////////////////////////////////////////////
				            |ВЫБРАТЬ
				            |	Договора.Договор КАК Договор,
				            |	Договора.НомерДоговора КАК НомерДоговора,
				            |	Договора.Должник КАК Должник,
				            |	Договора.Сотрудник КАК Сотрудник,
				            |	Договора.ДатаФинансирования КАК ДатаФинансирования,
				            |	Договора.ТипКредита КАК ТипКредита
				            |ПОМЕСТИТЬ ДоговорВР
				            |ИЗ
				            |	Договора КАК Договора";
								
		 
                    МВТ = Новый МенеджерВременныхТаблиц;
					
					ЗапросСтарт = Новый Запрос;
					ЗапросСтарт.МенеджерВременныхТаблиц = МВТ;
					
					ЗапросСтарт.Текст=ТекстСтарт;
					ЗапросСтарт.Выполнить();

					

				 
								 
				 
				 
				 
				
				 
				 
				 
				 
#Область Датаобласть

             Если ДатаЦессииОтФлаг и НЕ ДатаЦессииДоФлаг Тогда

				  				 
					Текст = 
							"ВЫБРАТЬ
							|	ДоговорВР.Договор КАК Договор,
							|	ДоговорВР.НомерДоговора КАК НомерДоговора,
							|	ДоговорВР.Должник КАК Должник,
							|	НачальныеДанныеДоговораСрезПервых.Регистратор.Дата КАК ДатаЗагрузки,
							|	НачальныеДанныеДоговораСрезПервых.Регистратор.Банк КАК Цедент,
							|	ДоговорВР.Сотрудник КАК Сотрудник,
							|	ДоговорВР.ДатаФинансирования КАК ДатаФинансирования,
							|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии,
							|	ДоговорЦессии.НомерДоговора КАК НомерЦессии,
							|	НачальныеДанныеДоговораСрезПервых.СуммаЗадолженности КАК СуммаЗадолженностиНачальная,
							|	ДоговорВР.ТипКредита КАК ТипКредита
							|ПОМЕСТИТЬ ВременнаяТЗ
							|ИЗ
							|	ДоговорВР КАК ДоговорВР                 							
							|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачальныеДанныеДоговора.СрезПервых КАК НачальныеДанныеДоговораСрезПервых
							|		ПО ДоговорВР.Договор = НачальныеДанныеДоговораСрезПервых.Договор
							|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорЦессии КАК ДоговорЦессии
							|		ПО (ДоговорЦессии.Владелец = ДоговорВР.Договор)
							|ГДЕ  ДатаЦессии >=&ВыбДата";
					
					
	            КонецЕсли;
	
				
				Если НЕ ДатаЦессииОтФлаг и  ДатаЦессииДоФлаг Тогда
					
					
		                   Текст = 
							"ВЫБРАТЬ
							|	ДоговорВР.Договор КАК Договор,
							|	ДоговорВР.НомерДоговора КАК НомерДоговора,
							|	ДоговорВР.Должник КАК Должник,
							|	НачальныеДанныеДоговораСрезПервых.Регистратор.Дата КАК ДатаЗагрузки,
							|	НачальныеДанныеДоговораСрезПервых.Регистратор.Банк КАК Цедент,
							|	ДоговорВР.Сотрудник КАК Сотрудник,
							|	ДоговорВР.ДатаФинансирования КАК ДатаФинансирования,
							|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии,
							|	ДоговорЦессии.НомерДоговора КАК НомерЦессии,
							|	НачальныеДанныеДоговораСрезПервых.СуммаЗадолженности КАК СуммаЗадолженностиНачальная,
							|	ДоговорВР.ТипКредита КАК ТипКредита
							|ПОМЕСТИТЬ ВременнаяТЗ
							|ИЗ
							|	ДоговорВР КАК ДоговорВР                 							
							|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачальныеДанныеДоговора.СрезПервых КАК НачальныеДанныеДоговораСрезПервых
							|		ПО ДоговорВР.Договор = НачальныеДанныеДоговораСрезПервых.Договор
							|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорЦессии КАК ДоговорЦессии
							|		ПО (ДоговорЦессии.Владелец = ДоговорВР.Договор)
							|ГДЕ  ДатаЦессии<=&ВыбДатаДо";
					
				   
	   
		           КонецЕсли;

				
				   
				    Если  ДатаЦессииОтФлаг и  ДатаЦессииДоФлаг Тогда
		   
		                     Текст = 
								"ВЫБРАТЬ
								|	ДоговорВР.Договор КАК Договор,
								|	ДоговорВР.НомерДоговора КАК НомерДоговора,
								|	ДоговорВР.Должник КАК Должник,
								|	НачальныеДанныеДоговораСрезПервых.Регистратор.Дата КАК ДатаЗагрузки,
								|	НачальныеДанныеДоговораСрезПервых.Регистратор.Банк КАК Цедент,
								|	ДоговорВР.Сотрудник КАК Сотрудник,
								|	ДоговорВР.ДатаФинансирования КАК ДатаФинансирования,
								|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии,
								|	ДоговорЦессии.НомерДоговора КАК НомерЦессии,
								|	НачальныеДанныеДоговораСрезПервых.СуммаЗадолженности КАК СуммаЗадолженностиНачальная,
								|	ДоговорВР.ТипКредита КАК ТипКредита
								|ПОМЕСТИТЬ ВременнаяТЗ
								|ИЗ
								|	ДоговорВР КАК ДоговорВР                 							
								|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачальныеДанныеДоговора.СрезПервых КАК НачальныеДанныеДоговораСрезПервых
								|		ПО ДоговорВР.Договор = НачальныеДанныеДоговораСрезПервых.Договор
								|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорЦессии КАК ДоговорЦессии
								|		ПО (ДоговорЦессии.Владелец = ДоговорВР.Договор)
								|ГДЕ  ДатаЦессии<=&ВыбДатаДо И ДатаЦессии>=&ВыбДата";

	   
					 КонецЕсли;
					 
					Если НЕ ДатаЦессииОтФлаг и Не ДатаЦессииДоФлаг Тогда
					
						  Текст = 
								"ВЫБРАТЬ
								|	ДоговорВР.Договор КАК Договор,
								|	ДоговорВР.НомерДоговора КАК НомерДоговора,
								|	ДоговорВР.Должник КАК Должник,
								|	НачальныеДанныеДоговораСрезПервых.Регистратор.Дата КАК ДатаЗагрузки,
								|	НачальныеДанныеДоговораСрезПервых.Регистратор.Банк КАК Цедент,
								|	ДоговорВР.Сотрудник КАК Сотрудник,
								|	ДоговорВР.ДатаФинансирования КАК ДатаФинансирования,
								|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии,
								|	ДоговорЦессии.НомерДоговора КАК НомерЦессии,
								|	НачальныеДанныеДоговораСрезПервых.СуммаЗадолженности КАК СуммаЗадолженностиНачальная,
								|	ДоговорВР.ТипКредита КАК ТипКредита
								|ПОМЕСТИТЬ ВременнаяТЗ
								|ИЗ
								|	ДоговорВР КАК ДоговорВР                 							
								|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачальныеДанныеДоговора.СрезПервых КАК НачальныеДанныеДоговораСрезПервых
								|		ПО ДоговорВР.Договор = НачальныеДанныеДоговораСрезПервых.Договор
								|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорЦессии КАК ДоговорЦессии
								|		ПО (ДоговорЦессии.Владелец = ДоговорВР.Договор)
								|";

						  
						  флагНетДаты=Истина;
						  
					КонецЕсли; 
					 
						 




#КонецОбласти

				 
	     
					 
				Если  ТекстСтарт <>"" Тогда
					
					
					     Если данныеДатаСтруктура.Свойство("ДатаЦессииОт")И НЕ ДатаЦессииДоФлаг   Тогда
						 
						 	СтрокаДата = Формат(данныеДатаСтруктура.ДатаЦессииОт,"ДФ=yyyy-MM-dd");
							годстр=Лев(СтрокаДата,4);
							месяцстр=Сред(СтрокаДата,6,2);
							деньстр=Прав(СтрокаДата,2);
							
							
							СтрокаДата=годстр+месяцстр+деньстр;
							
		                   
							
							ЗапросДаты = Новый Запрос;
							ЗапросДаты.МенеджерВременныхТаблиц = МВТ;
							
							ЗапросДаты.Текст=Текст;
							
							ЗапросДаты.УстановитьПараметр("ВыбДата", Дата(СтрокаДата));
							
							ЗапросДаты.Выполнить();

						 	
							
							
						КонецЕсли;
						
						
						//ДатаЦессииДо
						Если  данныеДатаСтруктура.Свойство("ДатаЦессииДо") И НЕ ДатаЦессииОтФлаг Тогда
							
							        СтрокаДата = Формат(данныеДатаСтруктура.ДатаЦессииДо,"ДФ=yyyy-MM-dd");
									годстр=Лев(СтрокаДата,4);
									месяцстр=Сред(СтрокаДата,6,2);
									деньстр=Прав(СтрокаДата,2);
									
									
									СтрокаДата=годстр+месяцстр+деньстр;
									
				                   
									
									ЗапросДаты = Новый Запрос;
									ЗапросДаты.МенеджерВременныхТаблиц = МВТ;
									
									ЗапросДаты.Текст=Текст;
									
									ЗапросДаты.УстановитьПараметр("ВыбДатаДо", Дата(СтрокаДата));
									
									ЗапросДаты.Выполнить();

							
						
						КонецЕсли;
						
						 Если  ДатаЦессииОтФлаг и  ДатаЦессииДоФлаг Тогда

							        СтрокаДатаДо = Формат(данныеДатаСтруктура.ДатаЦессииДо,"ДФ=yyyy-MM-dd");
									годстр=Лев(СтрокаДатаДо,4);
									месяцстр=Сред(СтрокаДатаДо,6,2);
									деньстр=Прав(СтрокаДатаДо,2);
									
									
									СтрокаДатаДо=годстр+месяцстр+деньстр;
									
									
									СтрокаДатаОт = Формат(данныеДатаСтруктура.ДатаЦессииОт,"ДФ=yyyy-MM-dd");
									годстр=Лев(СтрокаДатаОт,4);
									месяцстр=Сред(СтрокаДатаОт,6,2);
									деньстр=Прав(СтрокаДатаОт,2);
									
									
									СтрокаДатаОт=годстр+месяцстр+деньстр;

									
									
									
									ЗапросДаты = Новый Запрос;
									ЗапросДаты.МенеджерВременныхТаблиц = МВТ;
									
									ЗапросДаты.Текст=Текст;
									
									ЗапросДаты.УстановитьПараметр("ВыбДатаДо", Дата(СтрокаДатаДо));
									ЗапросДаты.УстановитьПараметр("ВыбДата", Дата(СтрокаДатаОт));

									
									ЗапросДаты.Выполнить();

							 
						
						 КонецЕсли;
						
						
						
						
						Если флагНетДаты Тогда
							
							ЗапросДаты = Новый Запрос;
							ЗапросДаты.МенеджерВременныхТаблиц = МВТ;
							
							ЗапросДаты.Текст=Текст;
							
							
							
							ЗапросДаты.Выполнить();
							
						
						КонецЕсли;
						
						
						
						
					
					
							ЗапросДанныеПоискаЦедент = Новый Запрос;
							ЗапросДанныеПоискаЦедент.МенеджерВременныхТаблиц = МВТ;
							
					Если данныеБанкиСтруктура.Свойство("Цеденты_") Тогда
						
						//
						//ЗапросДанныеПоискаЦедент.Текст="ВЫБРАТЬ *
						//                        |ПОМЕСТИТЬ ВременнаяЦедент
						//                        |ИЗ
						//	                    | ВременнаяТЗ(,Цедент В &Цедент) КАК ВременнаяТЗ";
						//ЗапросДанныеПоискаЦедент.УстановитьПараметр("Цедент", данныеБанкиСтруктура.Цеденты_);
						//
						
						
						ЗапросДанныеПоискаЦедент.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяЦедент
						                        |ИЗ
							                    | ВременнаяТЗ КАК ВременнаяТЗ
												|ГДЕ Цедент В (&Цедент)
												|ИНДЕКСИРОВАТЬ ПО Цедент";
						ЗапросДанныеПоискаЦедент.УстановитьПараметр("Цедент", данныеБанкиСтруктура.Цеденты_);
						
						
						
						
						
					Иначе
						ЗапросДанныеПоискаЦедент.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяЦедент 
						                        |ИЗ
							                    | ВременнаяТЗ КАК ВременнаяТЗ
												|";
						
						
					КонецЕсли;
					
					ЗапросДанныеПоискаЦедент.Выполнить();
					
					
					
					
					//НомерДоговораЦессии
					ЗапросДанныеПоискаНомерДоговораЦессии = Новый Запрос;
		    		ЗапросДанныеПоискаНомерДоговораЦессии.МенеджерВременныхТаблиц = МВТ;

					Если данныйПоиска.Свойство("НомерДоговораЦессии") Тогда
						
						ЗапросДанныеПоискаНомерДоговораЦессии.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяДоговораЦессии
						                        |ИЗ
							                    | ВременнаяЦедент КАК ВременнаяЦедент
												|ГДЕ НомерЦессии=&НомерЦессии";
						ЗапросДанныеПоискаНомерДоговораЦессии.УстановитьПараметр("НомерЦессии", данныйПоиска.НомерДоговораЦессии);
						
				    Иначе		
						
						   ЗапросДанныеПоискаНомерДоговораЦессии.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяДоговораЦессии
						                        |ИЗ
							                    | ВременнаяЦедент КАК ВременнаяЦедент
												|";
				
					КонецЕсли;
					
					ЗапросДанныеПоискаНомерДоговораЦессии.Выполнить();
					

					//ФИОДолжника
					ЗапросДанныеПоискаФИОДолжника = Новый Запрос;
		    		ЗапросДанныеПоискаФИОДолжника.МенеджерВременныхТаблиц = МВТ;

					Если данныйПоиска.Свойство("ФИОДолжника") Тогда
						
						   ЗапросДанныеПоискаФИОДолжника.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяФИОДолжника
						                        |ИЗ
							                    | ВременнаяДоговораЦессии КАК ВременнаяДоговораЦессии
												|ГДЕ Должник=&Должник
												|ИНДЕКСИРОВАТЬ ПО Должник";
						ЗапросДанныеПоискаФИОДолжника.УстановитьПараметр("Должник", данныйПоиска.ФИОДолжника);

						
					Иначе	
						
						      ЗапросДанныеПоискаФИОДолжника.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяФИОДолжника
						                        |ИЗ
							                    | ВременнаяДоговораЦессии КАК ВременнаяДоговораЦессии
												|";
						
					
					КонецЕсли;
					
					
					ЗапросДанныеПоискаФИОДолжника.Выполнить();
					
					
					 //КрДоговор
					ЗапросДанныеПоискаКрДоговор = Новый Запрос;
		    		ЗапросДанныеПоискаКрДоговор.МенеджерВременныхТаблиц = МВТ;

					
					Если данныйПоиска.Свойство("КрДоговор") Тогда
						
						массивКрДог=Новый Массив;
						
						Для каждого стр  Из данныйПоиска.КрДоговор Цикл
							
							массивКрДог.Добавить(стр.Значение.Ссылка);
							 
							
						
						КонецЦикла;
						
						ЗапросДанныеПоискаКрДоговор.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяКрДоговор
						                        |ИЗ
							                    | ВременнаяФИОДолжника КАК ВременнаяФИОДолжника
												|ГДЕ Договор В (&Договор)
												|ИНДЕКСИРОВАТЬ ПО Договор";
      						ЗапросДанныеПоискаКрДоговор.УстановитьПараметр("Договор", массивКрДог);
						
					Иначе 	
						ЗапросДанныеПоискаКрДоговор.Текст="ВЫБРАТЬ *
						                        |ПОМЕСТИТЬ ВременнаяКрДоговор
						                        |ИЗ
							                    | ВременнаяФИОДолжника КАК ВременнаяФИОДолжника
												|";
					
					КонецЕсли;
					
					ЗапросДанныеПоискаКрДоговор.Выполнить();
					
					
					
					
					
					ЗапросДанныеПоискаИсролнитель = Новый Запрос;
		    		ЗапросДанныеПоискаИсролнитель.МенеджерВременныхТаблиц = МВТ;

					Если НетИсполнителя Тогда
						
							
							ЗапросДанныеПоискаИсролнитель.Текст="ВЫБРАТЬ *
							                            |ПОМЕСТИТЬ ВременнаяКрДоговорИсполнитель  
								                        |ИЗ
									                    | ВременнаяКрДоговор КАК ВременнаяКрДоговор
														|ГДЕ
														| Сотрудник  ЕСТЬ NULL
														|";
							
							//РезЗапр= ЗапросДанныеПоискаИтог.Выполнить();
							
					
					Иначе
					
							
						ЗапросДанныеПоискаИсролнитель.Текст="ВЫБРАТЬ *
						                            |ПОМЕСТИТЬ ВременнаяКрДоговорИсполнитель
							                        |ИЗ
								                    | ВременнаяКрДоговор КАК ВременнаяКрДоговор
													|";
						
						//РезЗапр= ЗапросДанныеПоискаИтог.Выполнить();
						
					
					КонецЕсли;
					
					ЗапросДанныеПоискаИсролнитель.Выполнить();
					
					
					ЗапросДанныеПоискаИтог = Новый Запрос;
					ЗапросДанныеПоискаИтог.МенеджерВременныхТаблиц = МВТ;

					Если  данныйПоиска.ШифрДокумента>0 Тогда
						
						   массивКрДогДокВходящий=Новый Массив;
						
						         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
									// Данный фрагмент построен конструктором.
									// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
									
									Запрос = Новый Запрос;
									Запрос.Текст = 
										"ВЫБРАТЬ
										|	ДокументВходящий.Договор КАК Договор
										|ИЗ
										|	Справочник.ДокументВходящий КАК ДокументВходящий
										|ГДЕ
										|	ДокументВходящий.ШифрНазвания = &ШифрНазвания";
									
									Запрос.УстановитьПараметр("ШифрНазвания", данныйПоиска.ШифрДокумента);
									
									РезультатЗапроса = Запрос.Выполнить();
									
									ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
									
									Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
										// Вставить обработку выборки ВыборкаДетальныеЗаписи
										
										массивКрДогДокВходящий.Добавить(ВыборкаДетальныеЗаписи.Договор);
										
									КонецЦикла;
									
									//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

									//Если массивКрДогДокВходящий.Количество()>0 Тогда
									
										   ЗапросДанныеПоискаИтог.Текст="ВЫБРАТЬ *
								                        |ИЗ
									                    |ВременнаяКрДоговорИсполнитель КАК ВременнаяКрДоговорИсполнитель
														|ГДЕ Договор В (&Договор)";
		      						    ЗапросДанныеПоискаИтог.УстановитьПараметр("Договор", массивКрДогДокВходящий);
										
										РезЗапр= ЗапросДанныеПоискаИтог.Выполнить();
									
									//КонецЕсли;		
											 			
					Иначе
						    	ЗапросДанныеПоискаИтог.Текст="ВЫБРАТЬ *
						                        |ИЗ
							                    |ВременнаяКрДоговорИсполнитель КАК ВременнаяКрДоговорИсполнитель";
      						    
								
								РезЗапр= ЗапросДанныеПоискаИтог.Выполнить();

						
						
						
					
					КонецЕсли;
					
					
					
					
					
					
					
					 ТЗ.Очистить();
					 
							   
				    Выборка = РезЗапр.Выбрать();
					
					         счет=0;
					Пока Выборка.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						     счет=счет+1;
							 новаяСтр=ТЗПоиск.Добавить();
						     новаяСтр.ДатаЗагрузки=Выборка.ДатаЗагрузки;
							 новаяСтр.Ном=счет;
							 новаяСтр.Цедент=Выборка.Цедент;

							 новаяСтр.НомерКредитногоДоговора=Выборка.НомерДоговора;
							 
							 новаяСтр.КрДоговор=Выборка.Договор;
							 новаяСтр.ФИОДолжника=Выборка.Должник;
							 
							 новаяСтр.ОтветственныйСотрудник=Выборка.Сотрудник;
							 
							 новаяСтр.ДатаКредитногоДоговора=Выборка.ДатаФинансирования;
							 
							 новаяСтр.НомерДоговораЦессии=Выборка.НомерЦессии;
							 новаяСтр.ДатаЦессии=Выборка.ДатаЦессии;
							 
							 новаяСтр.ВидПродукта=Выборка.ТипКредита;
							 
							 новаяСтр.СуммаЗадолженностиПереданная=Выборка.СуммаЗадолженностиНачальная;
							 
							 //новаяСтр.СуммаЗадолженностиТекущая=ВсегоЗадолженность(Выборка.Договор);
							 
							 //новаяСтр.ДатаПоследнегоПлатежа= ДатаПоследнегоПлатежа(Выборка.Договор);
							
							 новаяСтр.ДатаПоследнегоЗаседания=ДатаПоследнегоЗаседания(Выборка.Договор);


         
							 
							 
						
					КонецЦикла;
		
					
					
					
					
					
					
				
				КонецЕсли;	 
					 
					 
					 
				 ТЗВсяБаза.Очистить();
	   
	             ТаблицаКопия=ТЗПоиск.Выгрузить();
	   
	             ТЗВсяБаза.Загрузить(ТаблицаКопия);
	   
				
					 
				
				
	
	
	
	  
		
	
	

КонецПроцедуры



&НаСервере
Процедура ПерестроитьТЗПоПоиску(данныйПоиска,данныеБанкиСтруктура,ДатаЦессииОтФлаг,ДатаЦессииДоФлаг,данныеДатаСтруктура)

	
	   //ТЗКопия.Очистить();
	   //
	   //ТаблицаКопия=ТЗ.Выгрузить();
	   //
	   //ТЗКопия.Загрузить(ТаблицаКопия);
	   //
	   
	    Если ТЗВсяБаза.Количество()>0 Тогда
			
			ТаблицаКопия=ТЗВсяБаза.Выгрузить();
	   
	        ТЗ.Загрузить(ТаблицаКопия);
	   
			
			
		
		КонецЕсли; 
	   
	   
	   Если ДатаЦессииОтФлаг и НЕ ДатаЦессииДоФлаг Тогда
		   
		   
		   
			 ТаблицаКопия=ТЗ.Выгрузить();

			 Запрос = Новый Запрос;
			 Запрос.УстановитьПараметр("ТабЗапрос", ТаблицаКопия);
			 Запрос.Текст = "ВЫБРАТЬ *
			|ПОМЕСТИТЬ Таблица
			|ИЗ
			|   &ТабЗапрос КАК ТабЗапрос
			|;
			|
			|///////////////////////////////////////////////
			|ВЫБРАТЬ *
			|ИЗ
			|   Таблица КАК Таблица
			|ГДЕ
			|   Таблица.ДатаЦессии >=&ДатаЦессии";
			 
			 
			Запрос.УстановитьПараметр("ДатаЦессии",данныеДатаСтруктура.ДатаЦессииОт);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ТабЗнач = РезультатЗапроса.Выгрузить();
	
			
			 ТЗ.Очистить();
	   
	         ТЗ.Загрузить(ТабЗнач);
		 
		   
	   
		 КонецЕсли;
		 
		  Если НЕ ДатаЦессииОтФлаг и  ДатаЦессииДоФлаг Тогда
		   
		   
		   
			 ТаблицаКопия=ТЗ.Выгрузить();

			 Запрос = Новый Запрос;
			 Запрос.УстановитьПараметр("ТабЗапрос", ТаблицаКопия);
			 Запрос.Текст = "ВЫБРАТЬ *
			|ПОМЕСТИТЬ Таблица
			|ИЗ
			|   &ТабЗапрос КАК ТабЗапрос
			|;
			|
			|///////////////////////////////////////////////
			|ВЫБРАТЬ *
			|ИЗ
			|   Таблица КАК Таблица
			|ГДЕ
			|   Таблица.ДатаЦессии <=&ДатаЦессии";
			 
			 
			Запрос.УстановитьПараметр("ДатаЦессии",данныеДатаСтруктура.ДатаЦессииДо);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ТабЗнач = РезультатЗапроса.Выгрузить();
	
			
			 ТЗ.Очистить();
	   
	         ТЗ.Загрузить(ТабЗнач);
		 
		   
	   
		 КонецЕсли;

		 
		   Если  ДатаЦессииОтФлаг и  ДатаЦессииДоФлаг Тогда
		   
		   
		   
			 ТаблицаКопия=ТЗ.Выгрузить();

			 Запрос = Новый Запрос;
			 Запрос.УстановитьПараметр("ТабЗапрос", ТаблицаКопия);
			 Запрос.Текст = "ВЫБРАТЬ *
			|ПОМЕСТИТЬ Таблица
			|ИЗ
			|   &ТабЗапрос КАК ТабЗапрос
			|;
			|
			|///////////////////////////////////////////////
			|ВЫБРАТЬ *
			|ИЗ
			|   Таблица КАК Таблица
			|ГДЕ
			|   Таблица.ДатаЦессии <=&ДатаЦессииДо И Таблица.ДатаЦессии >=&ДатаЦессииОт";
			 
			 
			Запрос.УстановитьПараметр("ДатаЦессииДо",данныеДатаСтруктура.ДатаЦессииДо);
			Запрос.УстановитьПараметр("ДатаЦессииОт",данныеДатаСтруктура.ДатаЦессииОт);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ТабЗнач = РезультатЗапроса.Выгрузить();
	
			
			 ТЗ.Очистить();
	   
	         ТЗ.Загрузить(ТабЗнач);
		 
		   
	   
		 КонецЕсли;

		  
		 
				 
				 
		
		
		 
		 
		 
	   
	   Если ТЗ.Количество()>0 Тогда
		   
		   
		      массивПриемник=Новый Массив; 

			  
			  //массивПриемник=ОбщегоНазначения.ТаблицаЗначенийВМассив(ТЗ);
		         
			  
			  Если данныеБанкиСтруктура.Свойство("Цеденты_") Тогда
			  
			  	  Для каждого стр  Из  данныеБанкиСтруктура.Цеденты_ Цикл
					
					 стрк=Новый Структура;
					 
					 стрк.Вставить("Цедент",стр);
					
			     	 НайденнаяСтрока = ТЗ.НайтиСтроки(стрк);
					 
					 ОбщегоНазначенияКлиентСервер.ДополнитьМассив(массивПриемник, НайденнаяСтрока,Ложь); 
					
					
				КонецЦикла;
		   

				 НоваяТаблица = ТЗ.Выгрузить(массивПриемник);
			   
			   
			     ТЗ.Очистить();
			   
			     ТЗ.Загрузить(НоваяТаблица);

			  
			  КонецЕсли;
			  
			  
			  //ФИОДолжника
			  
			  Если данныйПоиска.Свойство("ФИОДолжника")  Тогда
			  
					  //Для каждого стр  Из  данныйПоиска.ФИОДолжника Цикл
					
							 стрк=Новый Структура;
							 
							 стрк.Вставить("ФИОДолжника",данныйПоиска.ФИОДолжника);
							
					     	 НайденнаяСтрока = ТЗ.НайтиСтроки(стрк);
							 
							 ОбщегоНазначенияКлиентСервер.ДополнитьМассив(массивПриемник, НайденнаяСтрока,Ложь); 
							
							
					//КонецЦикла;
				   

				 НоваяТаблица = ТЗ.Выгрузить(массивПриемник);
			   
			   
			     ТЗ.Очистить();
			   
			     ТЗ.Загрузить(НоваяТаблица);

				  
				  
			  
			 КонецЕсли;
			 
			 Если данныйПоиска.Свойство("КрДоговор")  Тогда
				 
				     	  Для каждого стр  Из  данныйПоиска.КрДоговор Цикл
								
								 стрк=Новый Структура;
								 
								 стрк.Вставить("КрДоговор",стр.Значение.Ссылка);
								
						     	 НайденнаяСтрока = ТЗ.НайтиСтроки(стрк);
								 
								 ОбщегоНазначенияКлиентСервер.ДополнитьМассив(массивПриемник, НайденнаяСтрока,Ложь); 
								
								
						КонецЦикла;
					   

				 НоваяТаблица = ТЗ.Выгрузить(массивПриемник);
			   
			   
			     ТЗ.Очистить();
			   
			     ТЗ.Загрузить(НоваяТаблица);

				 
				
				 
				 
		     КонецЕсли; 		 
				  
			  
			  
			  
			  
			  
			  
			  
			  
			   
			  
	   
	   КонецЕсли;
	   
	   
	   
	 	
	

КонецПроцедуры

&НаКлиенте
Процедура СброситьФильтр(Команда)
	
	          БанкПоиск= Неопределено;
			  ДоговорЦессииПоиск= "";

			  СброситьФильтрНаСервере();
	           
	
	
КонецПроцедуры

&НаСервере
Процедура СброситьФильтрНаСервере ()

	
	
	  НоваяТаблица = ТЗКопия.Выгрузить();

	
	   ТЗПоиск.Загрузить(НоваяТаблица);

КонецПроцедуры


Процедура СменитьКонтекстноеМеню()
    
	//Кнопки.Очистить();
	//Кнопки.Добавить("ДобавитьСобытие",ТипКнопкиКоманднойПанели.Действие);
	//Кнопки.ДобавитьСобытие.Картинка  = БиблиотекаКартинок.СоздатьДокумет;
	//
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	
	
		
	Если ТекущаяСтраница.Имя="СтраницаСервис" и (НЕ сервисОткр) Тогда
		
		 сервисОткр=Истина;
		 
		 ТБРеестрДляОтправкиЗаполнить();
		 
		 ТБРеестрДляОтправкиАрхивЗаполнить();

		 
	
	 КонецЕсли;
	 
	 
	 Если ТекущаяСтраница.Имя="ГруппаДоговоров"  Тогда
		
		      Элементы.ГруппаДоговоровЮрист.Обновить(); 
		 
	
	 КонецЕсли;

	 
	 Если ТекущаяСтраница.Имя="СтраницаГлавная"  Тогда
		 
		  
		   
		    ЭтаФорма.ОбновитьОтображениеДанных(Элементы.ДинСписок);

		    
		    Элементы.ДинСписок.Обновить(); 
		 
	
	 КонецЕсли;

	 
	 Если ТекущаяСтраница.Имя="СтраницаВходящие"  И  (НЕ входящиеОткр) Тогда
		 
		 входящиеОткр=Истина;
		 
		 
		  ЗапросКДинСписокВходящие();
	         	 
		 
		 
	 КонецЕсли;	 
	 
	 
	  Если ТекущаяСтраница.Имя="СтраницаШаблоны"  И  (НЕ СтраницаШаблоныОткр) Тогда
		 
		 СтраницаШаблоныОткр=Истина;
		 
		   ЗаполнитьТаблицуШаблоны();
		   УстановитьУсловноеОформлениеТаблицуШаблоны();
		 
	         	 
		 
		 
	  КонецЕсли;	 
	
	
КонецПроцедуры


&НаСервере
Процедура УстановитьУсловноеОформлениеТаблицуШаблоны()

	
   
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
			 
			// Зададим отбор (условия при которых будет выполнено оформление)
			ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение     = Новый ПолеКомпоновкиДанных("ТаблицаШаблоны.ШаблонИстина");
			ЭлементОтбора.ВидСравнения      = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение    = Истина;
			ЭлементОтбора.Использование     = Истина;
			 
			ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Зеленый);
			 
			// Укажем какие поля (колонки) оформлять
			ПолеОформления      = ЭлементОформления.Поля.Элементы.Добавить();
			ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ТаблицаШаблоны");
			ПолеОформления.Использование = Истина; 
			 
			ЭлементОформления.Использование = Истина;
				
	
КонецПроцедуры

  
  
  

&НаСервере
Процедура ЗаполнитьТаблицуШаблоны()

	    ТаблицаШаблоны.Очистить();
	
	          	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныЮристы.Ссылка КАК Ссылка,
		|	ШаблоныЮристы.Наименование КАК Наименование,
		|	ШаблоныЮристы.ШаблонИстина КАК ШаблонИстина
		|ИЗ
		|	Справочник.ШаблоныЮристы КАК ШаблоныЮристы";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		новаяЗапись=ЭтаФорма.ТаблицаШаблоны.Добавить();
		новаяЗапись.Наименование=ВыборкаДетальныеЗаписи.Наименование;
		новаяЗапись.СсылканаШаблон=ВыборкаДетальныеЗаписи.Ссылка;
		новаяЗапись.ШаблонИстина=ВыборкаДетальныеЗаписи.ШаблонИстина;
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	  
КонецПроцедуры
 




&НаСервере
Процедура ЗапросКДинСписокВходящие()

	
	Схема = Элементы.ДинСписок.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.ДинСписок.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	
	
	
	       типВх=Перечисления.ТипДокумента.вх;
	
	          	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	НазванияДокументов.ШифрНазвания КАК ШифрНазвания,
					|	НазванияДокументов.ПолноеНаименование КАК ПолноеНаименование,
					|	НазванияДокументов.ТипДокумента КАК ТипДокумента
					|ИЗ
					|	Справочник.НазванияДокументов КАК НазванияДокументов
					|ГДЕ
					|	НазванияДокументов.ТипДокумента = &ТипДокумента";
				
				Запрос.УстановитьПараметр("ТипДокумента", типВх);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					
					  Отбор = Новый Структура();
                      Отбор.Вставить("ШифрНазвания", ВыборкаДетальныеЗаписи.ШифрНазвания);
					
					  массивСтрок=ТаблицаРезультат.НайтиСтроки(Отбор);
					  
					  Если массивСтрок.Количество() > 0 Тогда
						  
						    новаяСтрока=ТЗВходящие.Добавить();
							новаяСтрока.НазваниеДокумента=ВыборкаДетальныеЗаписи.ПолноеНаименование;
							новаяСтрока.Шифр=ВыборкаДетальныеЗаписи.ШифрНазвания;
							новаяСтрока.Количество=массивСтрок.Количество();
							
							
						  
					 
					  
					  КонецЕсли;
					  
					  
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				
				
	
	
	
	

КонецПроцедуры




&НаСервере
Функция всекрДоговораТЗ()

	   массивКрДоговоров=Новый Массив;
	
	            ТабВр= ТЗ.Выгрузить();
	
	            Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
				    | КрДоговор КАК КрДоговор	
					|ПОМЕСТИТЬ ТВ_ТВ
					|ИЗ
					|&ТабВр КАК ТабВр
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ 
					|	ТВ_ТВ.КрДоговор КАК КрДоговор
					|ИЗ
					|	ТВ_ТВ КАК ТВ_ТВ";
			   Запрос.УстановитьПараметр("ТабВр", ТабВр);
               РезультатЗапроса = Запрос.Выполнить();

			   ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

				
					 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					        
							 массивКрДоговоров.Добавить(ВыборкаДетальныеЗаписи.КрДоговор);
					
				     КонецЦикла;

				
				
	    Возврат массивКрДоговоров;

			   
			   
	

КонецФункции // ()




&НаСервере
Процедура ТБРеестрДляОтправкиЗаполнить()
	  
	   ТБРеестрДляОтправки.Очистить();

	   
	                           МассивДог=всекрДоговораТЗ();
	   
	   
	   
						           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ЗаявлениеОПроцессуальномПравопреемстве.Ссылка КАК Ссылка,
							|	ЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда КАК НаименованиеСуда,
							|	ЗаявлениеОПроцессуальномПравопреемстве.Наименование КАК Наименование,
							|	ЗаявлениеОПроцессуальномПравопреемстве.АдресСуда КАК АдресСуда,
							|	ЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента КАК ТипДокумента,
							|	ЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента КАК СтадияДокумента,
							|	ЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии КАК НомерДоговораЦессии,
							|	ЗаявлениеОПроцессуальномПравопреемстве.ФИОДолжника КАК ФИОДолжника,
							|	ЗаявлениеОПроцессуальномПравопреемстве.Владелец КАК Владелец,
							|	ЗаявлениеОПроцессуальномПравопреемстве.Исполнитель КАК Исполнитель
							|ИЗ
							|	Справочник.ЗаявлениеОПроцессуальномПравопреемстве КАК ЗаявлениеОПроцессуальномПравопреемстве
							|ГДЕ
							|	ЗаявлениеОПроцессуальномПравопреемстве.is_post = ЛОЖЬ
							|	И ЗаявлениеОПроцессуальномПравопреемстве.is_ready = ИСТИНА
							|	И ЗаявлениеОПроцессуальномПравопреемстве.Владелец В(&Владелец)";
						
						Запрос.УстановитьПараметр("Владелец", МассивДог);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаЗаявлениеОПроцессуальномПравопреемстве = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							  стрД=ТБРеестрДляОтправки.Добавить();
						 
						 стрД.КредитныйДоговор=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Владелец;
						 стрД.ФИОДолжника=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.ФИОДолжника;
						 
						 
						 стрД.ТипДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента;
						 стрД.Стадия=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента;
						 
						 стрД.НазваниеДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Наименование;
						 
						 стрД.GUID=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка.УникальныйИдентификатор();
						 
						 
						  стрД.НаименованиеСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда;
						  
						  стрД.АдресСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.АдресСуда;
						  
						  стрД.ДокументСсылка=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка;
						  
						  стрД.НомерЦессии=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии;
						  
			              стрД.Исполнитель=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Исполнитель;

							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						   
						
						
												
												   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ЗаявлениеОВыдачеСудебногоПриказа.Владелец КАК Владелец,
								|	ЗаявлениеОВыдачеСудебногоПриказа.ФИОДолжника КАК ФИОДолжника,
								|	ЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента КАК ТипДокумента,
								|	ЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента КАК СтадияДокумента,
								|	ЗаявлениеОВыдачеСудебногоПриказа.Наименование КАК Наименование,
								|	ЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
								|	ЗаявлениеОВыдачеСудебногоПриказа.АдресСуда КАК АдресСуда,
								|	ЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии,
								|	ЗаявлениеОВыдачеСудебногоПриказа.Исполнитель КАК Исполнитель,
								|	ЗаявлениеОВыдачеСудебногоПриказа.Ссылка КАК Ссылка
								|ИЗ
								|	Справочник.ЗаявлениеОВыдачеСудебногоПриказа КАК ЗаявлениеОВыдачеСудебногоПриказа
								|ГДЕ
								|	ЗаявлениеОВыдачеСудебногоПриказа.is_ready = ИСТИНА
								|	И ЗаявлениеОВыдачеСудебногоПриказа.is_post = ЛОЖЬ
								|	И ЗаявлениеОВыдачеСудебногоПриказа.Владелец В(&Владелец)";
							
							Запрос.УстановитьПараметр("Владелец", МассивДог);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаЗаявлениеОВыдачеСудебногоПриказа = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								
					  	  стрД=ТБРеестрДляОтправки.Добавить();
						 
						 стрД.КредитныйДоговор=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Владелец;
						 стрД.ФИОДолжника=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.ФИОДолжника;
						 
						 
						 стрД.ТипДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента;
						 стрД.Стадия=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента;
						 
						 стрД.НазваниеДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Наименование;
						 
						 стрД.GUID=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка.УникальныйИдентификатор();
						 
						 
						  стрД.НаименованиеСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда;
						  
						  стрД.АдресСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.АдресСуда;
						  
						  стрД.ДокументСсылка=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка;
						  
						  стрД.НомерЦессии=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии;
						  
			              стрД.Исполнитель=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Исполнитель;

							

								
								
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						
						
						
	   
	   
	   //Для каждого стр Из ТЗ  Цикл
	   //
	   //    // пройдусь по справочникам (вопрос по каким)
	   //               //ЗаявлениеОПроцессуальномПравопреемстве

	   // 
	   //            	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	   // 			// Данный фрагмент построен конструктором.
	   // 			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	   // 			
	   // 			Запрос = Новый Запрос;
	   // 			Запрос.Текст = 
	   // 				"ВЫБРАТЬ
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.Ссылка КАК Ссылка,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда КАК НаименованиеСуда,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.Наименование КАК Наименование,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.АдресСуда КАК АдресСуда,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента КАК ТипДокумента,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента КАК СтадияДокумента,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии КАК НомерДоговораЦессии
	   // 				|ИЗ
	   // 				|	Справочник.ЗаявлениеОПроцессуальномПравопреемстве КАК ЗаявлениеОПроцессуальномПравопреемстве
	   // 				|ГДЕ
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.Владелец = &Владелец
	   // 				|	И ЗаявлениеОПроцессуальномПравопреемстве.is_ready = &is_ready
	   // 				|	И ЗаявлениеОПроцессуальномПравопреемстве.is_post = &is_post";
	   // 			
	   // 			Запрос.УстановитьПараметр("is_post", Ложь);
	   // 			Запрос.УстановитьПараметр("is_ready", Истина);
	   // 			Запрос.УстановитьПараметр("Владелец", стр.КрДоговор);
	   // 			
	   // 			РезультатЗапроса = Запрос.Выполнить();
	   // 			
	   // 			ВыборкаЗаявлениеОПроцессуальномПравопреемстве = РезультатЗапроса.Выбрать();
	   // 			
	   // 			Если ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Количество()>0 Тогда
	   // 				
	   // 				
	   // 				
	   // 			Пока ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Следующий() Цикл
	   // 				// Вставить обработку выборки ВыборкаДетальныеЗаписи
	   // 				 стрД=ТБРеестрДляОтправки.Добавить();
	   // 				 
	   // 				 стрД.КредитныйДоговор=стр.КрДоговор;
	   // 				 стрД.ФИОДолжника=стр.ФИОДолжника;
	   // 				 
	   // 				 
	   // 				 стрД.ТипДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента;
	   // 				 стрД.Стадия=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента;
	   // 				 
	   // 				 стрД.НазваниеДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Наименование;
	   // 				 
	   // 				 стрД.GUID=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка.УникальныйИдентификатор();
	   // 				 
	   // 				 
	   // 				  стрД.НаименованиеСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда;
	   // 				  
	   // 				  стрД.АдресСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.АдресСуда;
	   // 				  
	   // 				  стрД.ДокументСсылка=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка;
	   // 				  
	   // 				  стрД.НомерЦессии=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии;
	   // 				  
	   // 	              стрД.Исполнитель=стр.ОтветственныйСотрудник;

	   // 				
	   // 				
	   // 			КонецЦикла;

	   // 				
	   // 			
	   // 			КонецЕсли;
	   // 			
	   // 			
	   // 							
	   // 		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	   // 
	   // 	   //ЗаявлениеОВыдачеСудебногоПриказа
	   // 		
	   // 								 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	   // 					// Данный фрагмент построен конструктором.
	   // 					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	   // 					
	   // 					Запрос = Новый Запрос;
	   // 					Запрос.Текст = 
	   // 						"ВЫБРАТЬ
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.Ссылка КАК Ссылка,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.Наименование КАК Наименование,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.АдресСуда КАК АдресСуда,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента КАК ТипДокумента,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента КАК СтадияДокумента,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии
	   // 						|ИЗ
	   // 						|	Справочник.ЗаявлениеОВыдачеСудебногоПриказа КАК ЗаявлениеОВыдачеСудебногоПриказа
	   // 						|ГДЕ
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.Владелец = &Владелец
	   // 						|	И ЗаявлениеОВыдачеСудебногоПриказа.is_ready = &is_ready
	   // 						|	И ЗаявлениеОВыдачеСудебногоПриказа.is_post = &is_post";
	   // 					
	   // 					Запрос.УстановитьПараметр("is_post", Ложь);
	   // 					Запрос.УстановитьПараметр("is_ready", Истина);
	   // 					Запрос.УстановитьПараметр("Владелец", стр.КрДоговор);
	   // 					
	   // 					РезультатЗапроса = Запрос.Выполнить();
	   // 					
	   // 					ВыборкаЗаявлениеОВыдачеСудебногоПриказа = РезультатЗапроса.Выбрать();
	   // 					
	   // 					Если ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Количество()>0 Тогда
	   // 					     Пока ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Следующий() Цикл
	   // 							  
	   // 							       стрД=ТБРеестрДляОтправки.Добавить();
	   // 				 
	   // 									 стрД.КредитныйДоговор=стр.КрДоговор;
	   // 									 стрД.ФИОДолжника=стр.ФИОДолжника;
	   // 									 
	   // 									 
	   // 									 стрД.ТипДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента;
	   // 									 стрД.Стадия=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента;
	   // 									 
	   // 									 стрД.НазваниеДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Наименование;
	   // 									 
	   // 									 стрД.GUID=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка.УникальныйИдентификатор();
	   // 									 
	   // 									 
	   // 									  стрД.НаименованиеСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда;
	   // 									  
	   // 									  стрД.АдресСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.АдресСуда;
	   // 									  
	   // 									  стрД.ДокументСсылка=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка;
	   // 									  стрД.НомерЦессии=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии;
	   // 									  
	   // 						              стрД.Исполнитель=стр.ОтветственныйСотрудник;

	   // 							  
	   // 					     КонецЦикла;

	   // 						
	   // 						
	   // 					
	   // 					КонецЕсли;
	   // 					
	   // 												
	   // 					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	   // 								
	   // 								
	   //    
	   //    
	   //    
	   //
	   //КонецЦикла;
	   //
	   // 		
	   // 
	          ТБРеестрДляОтправки.Сортировать("ФИОДолжника");
	
	

КонецПроцедуры


&НаСервере
Процедура ТБРеестрДляОтправкиАрхивЗаполнить()
	  
	               ТБРеестрДляОтправкиАрхив.Очистить();

	   
	                МассивДог=всекрДоговораТЗ();
	   
	   
	   
						           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ЗаявлениеОПроцессуальномПравопреемстве.Ссылка КАК Ссылка,
							|	ЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда КАК НаименованиеСуда,
							|	ЗаявлениеОПроцессуальномПравопреемстве.Наименование КАК Наименование,
							|	ЗаявлениеОПроцессуальномПравопреемстве.АдресСуда КАК АдресСуда,
							|	ЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента КАК ТипДокумента,
							|	ЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента КАК СтадияДокумента,
							|	ЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии КАК НомерДоговораЦессии,
							|	ЗаявлениеОПроцессуальномПравопреемстве.ФИОДолжника КАК ФИОДолжника,
							|	ЗаявлениеОПроцессуальномПравопреемстве.Владелец КАК Владелец,
							|	ЗаявлениеОПроцессуальномПравопреемстве.Исполнитель КАК Исполнитель
							|ИЗ
							|	Справочник.ЗаявлениеОПроцессуальномПравопреемстве КАК ЗаявлениеОПроцессуальномПравопреемстве
							|ГДЕ
							|	ЗаявлениеОПроцессуальномПравопреемстве.is_post = ИСТИНА
							|	И ЗаявлениеОПроцессуальномПравопреемстве.is_ready = ИСТИНА
							|	И ЗаявлениеОПроцессуальномПравопреемстве.Владелец В(&Владелец)";
						
						Запрос.УстановитьПараметр("Владелец", МассивДог);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаЗаявлениеОПроцессуальномПравопреемстве = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							  стрД=ТБРеестрДляОтправкиАрхив.Добавить();
						 
						 стрД.КредитныйДоговор=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Владелец;
						 стрД.ФИОДолжника=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.ФИОДолжника;
						 
						 
						 стрД.ТипДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента;
						 стрД.Стадия=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента;
						 
						 стрД.НазваниеДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Наименование;
						 
						 стрД.GUID=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка.УникальныйИдентификатор();
						 
						 
						  стрД.НаименованиеСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда;
						  
						  стрД.АдресСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.АдресСуда;
						  
						  стрД.ДокументСсылка=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка;
						  
						  стрД.НомерЦессии=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии;
						  
			              стрД.Исполнитель=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Исполнитель;

							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						   
						
						
												
												   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ЗаявлениеОВыдачеСудебногоПриказа.Владелец КАК Владелец,
								|	ЗаявлениеОВыдачеСудебногоПриказа.ФИОДолжника КАК ФИОДолжника,
								|	ЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента КАК ТипДокумента,
								|	ЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента КАК СтадияДокумента,
								|	ЗаявлениеОВыдачеСудебногоПриказа.Наименование КАК Наименование,
								|	ЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
								|	ЗаявлениеОВыдачеСудебногоПриказа.АдресСуда КАК АдресСуда,
								|	ЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии,
								|	ЗаявлениеОВыдачеСудебногоПриказа.Исполнитель КАК Исполнитель,
								|	ЗаявлениеОВыдачеСудебногоПриказа.Ссылка КАК Ссылка
								|ИЗ
								|	Справочник.ЗаявлениеОВыдачеСудебногоПриказа КАК ЗаявлениеОВыдачеСудебногоПриказа
								|ГДЕ
								|	ЗаявлениеОВыдачеСудебногоПриказа.is_ready = ИСТИНА
								|	И ЗаявлениеОВыдачеСудебногоПриказа.is_post = ИСТИНА
								|	И ЗаявлениеОВыдачеСудебногоПриказа.Владелец В(&Владелец)";
							
							Запрос.УстановитьПараметр("Владелец", МассивДог);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаЗаявлениеОВыдачеСудебногоПриказа = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								
					  	  стрД=ТБРеестрДляОтправкиАрхив.Добавить();
						 
						 стрД.КредитныйДоговор=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Владелец;
						 стрД.ФИОДолжника=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.ФИОДолжника;
						 
						 
						 стрД.ТипДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента;
						 стрД.Стадия=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента;
						 
						 стрД.НазваниеДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Наименование;
						 
						 стрД.GUID=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка.УникальныйИдентификатор();;
						 
						 
						  стрД.НаименованиеСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда;
						  
						  стрД.АдресСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.АдресСуда;
						  
						  стрД.ДокументСсылка=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка;
						  
						  стрД.НомерЦессии=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии;
						  
			              стрД.Исполнитель=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Исполнитель;

							

								
								
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						

	   
	   
	   
	   //Для каждого стр Из ТЗ  Цикл
	   //
	   //    // пройдусь по справочникам (вопрос по каким)
	   // 
	   // 	//ЗаявлениеОПроцессуальномПравопреемстве
	   //    
	   //            	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	   // 			// Данный фрагмент построен конструктором.
	   // 			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	   // 			
	   // 			Запрос = Новый Запрос;
	   // 			Запрос.Текст = 
	   // 				"ВЫБРАТЬ
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.Ссылка КАК Ссылка,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда КАК НаименованиеСуда,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.Наименование КАК Наименование,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.АдресСуда КАК АдресСуда,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента КАК ТипДокумента,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента КАК СтадияДокумента,
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии КАК НомерДоговораЦессии
	   // 				|ИЗ
	   // 				|	Справочник.ЗаявлениеОПроцессуальномПравопреемстве КАК ЗаявлениеОПроцессуальномПравопреемстве
	   // 				|ГДЕ
	   // 				|	ЗаявлениеОПроцессуальномПравопреемстве.Владелец = &Владелец
	   // 				|	И ЗаявлениеОПроцессуальномПравопреемстве.is_ready = &is_ready
	   // 				|	И ЗаявлениеОПроцессуальномПравопреемстве.is_post = &is_post";
	   // 			
	   // 			Запрос.УстановитьПараметр("is_post", Истина);
	   // 			Запрос.УстановитьПараметр("is_ready", Истина);
	   // 			Запрос.УстановитьПараметр("Владелец", стр.КрДоговор);
	   // 			
	   // 			РезультатЗапроса = Запрос.Выполнить();
	   // 			
	   // 			ВыборкаЗаявлениеОПроцессуальномПравопреемстве = РезультатЗапроса.Выбрать();
	   // 			
	   // 			Если ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Количество()>0 Тогда
	   // 				
	   // 				
	   // 				
	   // 			Пока ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Следующий() Цикл
	   // 				// Вставить обработку выборки ВыборкаДетальныеЗаписи
	   // 				 стрД=ТБРеестрДляОтправкиАрхив.Добавить();
	   // 				 
	   // 				 стрД.КредитныйДоговор=стр.КрДоговор;
	   // 				 стрД.ФИОДолжника=стр.ФИОДолжника;
	   // 				 
	   // 				 
	   // 				 стрД.ТипДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента;
	   // 				 стрД.Стадия=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента;
	   // 				 
	   // 				 стрД.НазваниеДокумента=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Наименование;
	   // 				 
	   // 				 стрД.GUID=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка.УникальныйИдентификатор();
	   // 				 
	   // 				 
	   // 				  стрД.НаименованиеСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда;
	   // 				  
	   // 				  стрД.АдресСуда=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.АдресСуда;
	   // 				  
	   // 				  стрД.ДокументСсылка=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.Ссылка;
	   // 				  
	   // 				  стрД.НомерЦессии=ВыборкаЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии;
	   // 				  
	   // 	              стрД.Исполнитель=стр.ОтветственныйСотрудник;

	   // 				
	   // 				
	   // 			КонецЦикла;

	   // 				
	   // 			
	   // 			КонецЕсли;
	   // 			
	   // 			
	   // 							
	   // 		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	   // 

	   // 		      //ЗаявлениеОВыдачеСудебногоПриказа
	   // 		
	   // 								 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	   // 					// Данный фрагмент построен конструктором.
	   // 					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	   // 					
	   // 					Запрос = Новый Запрос;
	   // 					Запрос.Текст = 
	   // 						"ВЫБРАТЬ
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.Ссылка КАК Ссылка,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.Наименование КАК Наименование,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.АдресСуда КАК АдресСуда,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента КАК ТипДокумента,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента КАК СтадияДокумента,
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии
	   // 						|ИЗ
	   // 						|	Справочник.ЗаявлениеОВыдачеСудебногоПриказа КАК ЗаявлениеОВыдачеСудебногоПриказа
	   // 						|ГДЕ
	   // 						|	ЗаявлениеОВыдачеСудебногоПриказа.Владелец = &Владелец
	   // 						|	И ЗаявлениеОВыдачеСудебногоПриказа.is_ready = &is_ready
	   // 						|	И ЗаявлениеОВыдачеСудебногоПриказа.is_post = &is_post";
	   // 					
	   // 					Запрос.УстановитьПараметр("is_post", Истина);
	   // 					Запрос.УстановитьПараметр("is_ready", Истина);
	   // 					Запрос.УстановитьПараметр("Владелец", стр.КрДоговор);
	   // 					
	   // 					РезультатЗапроса = Запрос.Выполнить();
	   // 					
	   // 					ВыборкаЗаявлениеОВыдачеСудебногоПриказа = РезультатЗапроса.Выбрать();
	   // 					
	   // 					Если ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Количество()>0 Тогда
	   // 					     Пока ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Следующий() Цикл
	   // 							  
	   // 							       стрД=ТБРеестрДляОтправкиАрхив.Добавить();
	   // 				 
	   // 									 стрД.КредитныйДоговор=стр.КрДоговор;
	   // 									 стрД.ФИОДолжника=стр.ФИОДолжника;
	   // 									 
	   // 									 
	   // 									 стрД.ТипДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента;
	   // 									 стрД.Стадия=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента;
	   // 									 
	   // 									 стрД.НазваниеДокумента=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Наименование;
	   // 									 
	   // 									 стрД.GUID=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка.УникальныйИдентификатор();
	   // 									 
	   // 									 
	   // 									  стрД.НаименованиеСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда;
	   // 									  
	   // 									  стрД.АдресСуда=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.АдресСуда;
	   // 									  
	   // 									  стрД.ДокументСсылка=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.Ссылка;
	   // 									  
	   // 									   стрД.НомерЦессии=ВыборкаЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии;
	   // 						              стрД.Исполнитель=стр.ОтветственныйСотрудник;

	   // 							  
	   // 					     КонецЦикла;

	   // 						
	   // 						
	   // 					
	   // 					КонецЕсли;
	   // 					
	   // 												
	   // 					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	   // 								
	   // 								
	   //    
	   //    

	   // 		
	   // 		
	   // 		
	   // 		
	   // 		
	   // 		
	   //    
	   //    
	   //    
	   //
	   //КонецЦикла;
	   //
	   // 		
	   // 
	   
	
	

КонецПроцедуры





   
   

&НаКлиенте
Процедура СформироватьExcelФайлДляРеестра(Команда)
	
	 Если ТБРеестрДляОтправки.Количество()>0 Тогда
		 
			 //Для каждого Стр  Из ТБРеестрДляОтправки  Цикл
			 //    
			 //      ПеределатьДОсНаPDF(Стр.ДокументСсылка);
			
////	  	   КонецЦикла;
 
		 
		 
     		 ТабДокумент= ПолучитьМакетНаСервере();
		 
		     ТабДокумент.Показать(Строка(ПользовательТк)+ "_Реестр");

			 
			 
			 
		     ТБРеестрДляОтправкиЗаполнить();

			 ТБРеестрДляОтправкиАрхивЗаполнить();

		 
		 
	 КонецЕсли;
	
	
КонецПроцедуры


&НаСервере
Функция ПолучитьМакетНаСервере()
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб=Истина;
	ТабДокумент.ТолькоПросмотр=Истина;

	
	//ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
    Макет =Обработки.СудебнаяСтадия.ПолучитьМакет("МакетРеестрПочта"); 

	Если ТБРеестрДляОтправки.Количество()>0 Тогда
	         	Для каждого Стр  Из ТБРеестрДляОтправки  Цикл
				
				ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
				
				Если АдресатСуд=Истина  Тогда
					
					ОбластьСтрока.Параметры.ADDRESSLINE=Стр.АдресСуда;
					
					ОбластьСтрока.Параметры.ADRESAT=Стр.НаименованиеСуда;
				
				КонецЕсли;
									
				
				Если АдресатДолжник=Истина Тогда
					
				    адресДолжника=ПолучитьАдресДолжника(Стр.ФИОДолжника);
				    
					ОбластьСтрока.Параметры.ADDRESSLINE=адресДолжника;
					
					ОбластьСтрока.Параметры.ADRESAT=Строка(Стр.ФИОДолжника);
					   
					   
				КонецЕсли;
				
				
				Если АдресатБанк=Истина  Тогда
					 
					 
					 банкДог=Стр.КредитныйДоговор.Банк;
					 
					 ОбластьСтрока.Параметры.ADDRESSLINE=банкДог.Адрес;
					
					ОбластьСтрока.Параметры.ADRESAT=банкДог.ПолноеНазвание;

			             		 
				
				КонецЕсли;
				
				
				
				ОбластьСтрока.Параметры.COMMENT=Строка(Стр.ФИОДолжника)+","+Стр.НазваниеДокумента+","+ Стр.КредитныйДоговор.НомерДоговора+","+Стр.Исполнитель+","+"%"+ Стр.GUID+"%";
				
				//УстановитьФлагPost(Стр.GUID,Стр.ДокументСсылка);
				
				ТабДокумент.Вывести(ОбластьСтрока);
			
			 КонецЦикла;
			 
			 
		 Иначе
			//Для каждого Стр  Из ТБРеестрДляОтправкиАрхив  Цикл
			//	
			//	ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
			//	
			//	ОбластьСтрока.Параметры.ADDRESSLINE=Стр.АдресСуда;
			//	
			//	ОбластьСтрока.Параметры.ADRESAT=Стр.НаименованиеСуда;
			//	
			//	ОбластьСтрока.Параметры.COMMENT=Строка(Стр.ФИОДолжника)+","+Стр.НазваниеДокумента+","+ Стр.КредитныйДоговор.НомерДоговора+","+Стр.Исполнитель+","+"%"+ Стр.GUID+"%";
			//	
			//	//УстановитьФлагPost(Стр.GUID,Стр.ДокументСсылка);
			//	
			//	ТабДокумент.Вывести(ОбластьСтрока);

			//	
			//КонецЦикла;
			//  
			// 
	
	КонецЕсли;
	

	
	
	
	
	
    Возврат  ТабДокумент;

	
КонецФункции




&НаСервере
Функция ПолучитьАдресДолжника(долж)

	
	 адресДолжника="";
	 типРегистрации=Справочники.ТипыАдресов.НайтиПоНаименованию("Регистрации",Истина);
	 
				    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Адреса.Адрес КАК Адрес
					|ИЗ
					|	Справочник.Адреса КАК Адреса
					|ГДЕ
					|	Адреса.Тип = &Тип
					|	И Адреса.Владелец = &Владелец";
				
				Запрос.УстановитьПараметр("Владелец", долж);
				Запрос.УстановитьПараметр("Тип", типРегистрации);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					адресДолжника=ВыборкаДетальныеЗаписи.Адрес;
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				
				
	   Возврат адресДолжника;
	

КонецФункции // ()





&НаСервере
Функция УстановитьФлагPost(guid,спрСсылка)

	  
	     
	 Если ТипЗнч(спрСсылка)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
	  
			спрОб= спрСсылка.ПолучитьОбъект();
			
			
			спрОб.is_post=Истина;
			спрОб.Записать();
			
			
	 КонецЕсли;

	 
	 Если ТипЗнч(спрСсылка)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда
	 	
			 спрОб= спрСсылка.ПолучитьОбъект();
			 
			 спрОб.is_post=Истина;
			 спрОб.Записать();
			 
	 КонецЕсли;

	
	

КонецФункции // ()


&НаКлиенте
Функция ПолучитьДвоичныйФайлДОС(строкаПуть,имяФайлаВстр)

	         
			 
			  ВыбФайл = Новый Файл(строкаПуть);	 
			  Если ВыбФайл.Существует() Тогда 
			    Если ВыбФайл.ПолучитьТолькоЧтение() Тогда
			        ВыбФайл.УстановитьТолькоЧтение(Ложь);
			    КонецЕсли;
			 КонецЕсли;

			 
			     MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(строкаПуть);	
				 MSWordDoc = MSWord.ActiveDocument();
				 
				  имяД=имяФайлаВстр;

			      ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".pdf";
			     	
			    	ВыбранныйФайл = Новый Файл(ИмяФайла);
			    	Если ВыбранныйФайл.Существует() Тогда
			    		
			    		УдалитьФайлы(ВыбранныйФайл);
			    		
			    	
			    	КонецЕсли; 

			     
			     MSWordDoc.SaveAs(ИмяФайла,17);
			     MSWordDoc.Close(0);
			     MSWord.Application.Quit();
				 
				   файлСтруктура=Новый Структура;
			 
			        двФайл = Новый ДвоичныеДанные(ИмяФайла);
					
					файлСтруктура.Вставить("ДвоичныеДанные",двФайл);
					файлСтруктура.Вставить("ИмяФайла",ИмяФайла);
					
					
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 
 
				 
    Возврат  файлСтруктура;
	

КонецФункции // ()



&НаКлиенте
Процедура ПеределатьДОсНаPDF(спрСсылка)

	  массивСтруктур= ПолучитьПрисоединенныеФайлы(спрСсылка);


	   Для каждого стрФайл  Из массивСтруктур Цикл
		   
		    
				строкаПуть= ПолучитьПутьКФайлу(стрФайл);
				 
				 имяД= ПолучитьИмяФайла(стрФайл);
				
			    файлСтруктура=ПолучитьДвоичныйФайлДОС(строкаПуть,имяД);
				
	            записатьВХранилищеНовыйФайл (файлСтруктура,имяД,спрСсылка);			
				
				
				
		
				УдалитьИзСправочникаФайл(стрФайл);
		   
		   
	   КонецЦикла;
	
	

КонецПроцедуры

&НаСервере
Функция ПолучитьИмяФайла(стрФайл)

	    Возврат стрФайл.Наименование;

КонецФункции // ()



&НаСервере
Процедура записатьВХранилищеНовыйФайл (стрФайл,имяД,спрСссылка)
	  
		  	    адресВХранилище = ПоместитьВоВременноеХранилище(стрФайл.ДвоичныеДанные);
        
                ПрисоединенныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(спрСссылка,имяД,"pdf",,,адресВХранилище);
		  
		        УдалитьФайлы(стрФайл.ИмяФайла);
	

КонецПроцедуры


   


&НаСервере
Процедура УдалитьИзСправочникаФайл(ссылкаНаФайл)

	        об=ссылкаНаФайл.ПолучитьОбъект();
			
			
			об.Удалить();
			   
			

КонецПроцедуры	


 

&НаКлиенте
Процедура СформироватьExcelФайлДляРеестраАрхив(Команда)
	// Вставить содержимое обработчика.
	   Если ТБРеестрДляОтправкиАрхив.Количество()>0 Тогда
	   
	   	     ТабДокумент= ПолучитьМакетАрхивНаСервере();
		 
		     ТабДокумент.Показать(Строка(ПользовательТк)+ "_Реестр");

			 ТБРеестрДляОтправкиАрхивЗаполнить();

			 ТБРеестрДляОтправкиЗаполнить();

	   
	   КонецЕсли;

	
	
КонецПроцедуры




&НаСервере
Функция ПолучитьМакетАрхивНаСервере()
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб=Истина;
	ТабДокумент.ТолькоПросмотр=Истина;

	
	//ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
    Макет =Обработки.СудебнаяСтадия.ПолучитьМакет("МакетРеестрПочта"); 

	Если ТБРеестрДляОтправкиАрхив.Количество()>0 Тогда
	         	Для каждого Стр  Из ТБРеестрДляОтправкиАрхив  Цикл
				
				ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
				
				ОбластьСтрока.Параметры.ADDRESSLINE=Стр.АдресСуда;
				
				ОбластьСтрока.Параметры.ADRESAT=Стр.НаименованиеСуда;
				
				ОбластьСтрока.Параметры.COMMENT=Строка(Стр.ФИОДолжника)+","+Стр.НазваниеДокумента+","+ Стр.КредитныйДоговор.НомерДоговора+","+Стр.Исполнитель+","+"%"+ Стр.GUID+"%";
				
				УстановитьФлагPost(Стр.GUID,Стр.ДокументСсылка);
				
				ТабДокумент.Вывести(ОбластьСтрока);
			
			 КонецЦикла;
			 
			 
		 Иначе
			//Для каждого Стр  Из ТБРеестрДляОтправкиАрхив  Цикл
			//	
			//	ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
			//	
			//	ОбластьСтрока.Параметры.ADDRESSLINE=Стр.АдресСуда;
			//	
			//	ОбластьСтрока.Параметры.ADRESAT=Стр.НаименованиеСуда;
			//	
			//	ОбластьСтрока.Параметры.COMMENT=Строка(Стр.ФИОДолжника)+","+Стр.НазваниеДокумента+","+ Стр.КредитныйДоговор.НомерДоговора+","+Стр.Исполнитель+","+"%"+ Стр.GUID+"%";
			//	
			//	//УстановитьФлагPost(Стр.GUID,Стр.ДокументСсылка);
			//	
			//	ТабДокумент.Вывести(ОбластьСтрока);

			//	
			//КонецЦикла;
			//  
			// 
	
	КонецЕсли;
	

	
	
	
	
	
    Возврат  ТабДокумент;

	
КонецФункции


&НаКлиенте
Процедура ПослеОтветаНаВопросПечать(Результат, Параметры) Экспорт 

#Область  Печатьда
	


		Если Результат = КодВозвратаДиалога.Да Тогда
			
			  
			
			   		        
    		              Shell = Новый COMОбъект("WScript.Shell");
    		              дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
                           программаОбр=дирМоиД+"\choosePrinter.exe";
    		    					 
    		    		   Shell.Run(программаОбр,1, 1);
 
    					   
    		 
    		 
    		 
    		        естьФильтр=Ложь;
    				 Если структураФильтрПечать<>Неопределено Тогда
    				 
    				       естьФильтр=Истина;
    				 
    				 КонецЕсли;

    		  
    			   Для каждого стр  Из  ТБРеестрДляОтправки Цикл
    			  
    			     срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);
    				 
    									 
    				
    				 
    				 ////спрОбСтруктура= ПолучитьДанныеДляПечати(срДляПечати.ссылкаДокПечати);

    		    	 Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
    		    	 
    		    		 
    		    			  стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
    		    			  Shell = Новый COMОбъект("WScript.Shell");
    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

    		    			  
    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
    		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 // ЗаявлениеОПроцессуальномПравопреемстве
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОПроцессуальномПравопреемстве");
									 
									 Если инд>0 Тогда
    		    					     программаОбр=программаОбр+" "+строкаПуть;
									 
    		    				         Shell.Run(программаОбр,0, 1);
									 
									 КонецЕсли;
									       		 
    		    			  
    		    			  КонецЦикла;
							  
							  
							  
							  
					   		 
    		    		 // Доверенность представителя
    					 Если естьФильтр   Тогда
    						 
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    						Иначе	 
    							 
    								 
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    							 
    							 	    ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    							 КонецЕсли;
 
    						КонецЕсли;	 
    							 
    													 
    					 Иначе	 
    						 
    						     ПечатьДоверенностьПредставителя(стр.Исполнитель);
    					 
    					 КонецЕсли;
						 
						 
						 
					      Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
    		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 // ЗаявлениеОПроцессуальномПравопреемстве
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОПроцессуальномПравопреемстве");
									 
									 Если инд=0 Тогда
    		    					     программаОбр=программаОбр+" "+строкаПуть;
									 
    		    				         Shell.Run(программаОбр,0, 1);
									 
									 КонецЕсли;
									       		 
    		    			  
    		    			  КонецЦикла;
							  
	 
						 
						 
							  
							  
    		    		 //  копия договора цессии    стр.КредитныйДоговор
    				  Если естьФильтр   Тогда
    						 
    					  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    						  
    						  ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

    						   
    					   Иначе  
    						   
    						    
    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	   ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
    						 
    						 КонецЕсли;

    						   
    					   КонецЕсли;
     
    													 
    						 
    					 Иначе	 
    						 
    						 ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
 
    					 
    					 КонецЕсли;
    					 
    					 
						 
						  
    		    		 // Печать копии платежного поручения подтверждающего оплату по договору уступки прав
    					 Если естьФильтр   Тогда
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    							 
    						 Иначе
    							 	 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	   ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);							 
    						 КонецЕсли;

    							 
    						 КонецЕсли;	 
    						 
    						 
    												 
    						 
    					 Иначе	 
    						 
    						   ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    				 
    					 КонецЕсли;
    	 

						 
						 
						  // Печать свидетельства о регистрации Юр.лица
    					  Если естьФильтр   Тогда
    						  
    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьСвидетельстваОРегистрацииЮрЛица();

    							  
    						  Иначе	 
    							  
    							  	  
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьСвидетельстваОРегистрацииЮрЛица И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    							 
    							 	   ПечатьСвидетельстваОРегистрацииЮрЛица();
    							 
    							 КонецЕсли;

    							  
    						  КонецЕсли;	  
    						  
    												 
    						 
    					 Иначе	 
    						 
    						    ПечатьСвидетельстваОРегистрацииЮрЛица();
    					 
    					 КонецЕсли;

    					 
    					 
    		    		    	
						 
						 
    					 
    					 
    					 Если естьФильтр   Тогда
    						 
    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда

    							   ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

    							  
    						  Иначе	  
    							  
    							   Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	      ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

    						 
    						        КонецЕсли;

    							  
    						  КонецЕсли;

    						 
    													 
    						 
    					 Иначе	 
    						 
    						  ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

 
    					 
    					 КонецЕсли;
    					 
    					 
    					 
    									 
    		    
    					  
    					  
    							    			
    		    	 
    		   	 КонецЕсли;
    		    	 
    		    	 
    				 ////////////////////
    		    	 
    				 
    		    	 Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда
						 
						 
						 
						 
						  стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
    		    			  Shell = Новый COMОбъект("WScript.Shell");
    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

    		    			  
    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
									 
									 
									 
									 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 //ЗаявлениеОВыдачеСудебногоПриказа
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОВыдачеСудебногоПриказа");
									 
									 Если инд>0 Тогда
									 
									 	     
    		    					      программаОбр=программаОбр+" "+строкаПуть;
    		    					 
    		    				          Shell.Run(программаОбр,0, 1);

									 
									 КонецЕсли;
									    		 
    		    			  
    		    			  КонецЦикла;
    		    
    		    
							  
							  
						 		 
    		    		 // Доверенность представителя
    					 Если естьФильтр   Тогда
    						 
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    						 Иначе	 
    							 
    								 
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    							 
    							 	    ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    							 КонецЕсли;
 
    						КонецЕсли;	 
    							 
    													 
    					 Иначе	 
    						 
    						     ПечатьДоверенностьПредставителя(стр.Исполнитель);
    					 
    					 КонецЕсли;
	  
						 
						 
						 	  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
    		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 //ЗаявлениеОВыдачеСудебногоПриказа
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОВыдачеСудебногоПриказа");
									 
									 Если инд=0 Тогда
									 
									 	     
    		    					      программаОбр=программаОбр+" "+строкаПуть;
    		    					 
    		    				          Shell.Run(программаОбр,0, 1);

									 
									 КонецЕсли;
									    		 
    		    			  
    		    			  КонецЦикла;

						 
						 
							  
						//  копия договора цессии    стр.КредитныйДоговор
    				   	Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
    							
    						Иначе	
    							
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	      ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
    						 
    						      КонецЕсли;
    							
    						КонецЕсли;	
    						
    													 
    					 Иначе	 
    						 
    						    ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

    					 
    					 КонецЕсли;
    					 
	  
						  
    	   		      // Печать копии платежного поручения подтверждающего оплату по договору уступки прав
    					Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							 ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    						Иначе	
    							 
	    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
	    						 
	    						 	     ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
	    						 
	    						 КонецЕсли;
    							
    						КонецЕсли;	
    													 
    					 Иначе	 
    						 
    						    ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    					 
    					 КонецЕсли;
    					 

						
    					 //  ПечатьКопияУведомленияОбУступкеПраваТребования
    					  Если естьФильтр   Тогда
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор);
    						 Иначе	 
    							 
    							  	 
    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияУведомленияОбУступкеПраваТребования И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	    ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор);
    						 
    						 КонецЕсли;

    						 КонецЕсли;	 
    													 
    					 Иначе	 
    						 
    						    ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор); 
    					 
    					 КонецЕсли;
    	 
						 
						 
						 
    		    		 
    		    	   // Печать копии досье клиента
    		    		Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							ПечатьДосьеКлиента(стр.КредитныйДоговор);

    							
    						Иначе
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДосьеКлиента И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	    ПечатьДосьеКлиента(стр.КредитныйДоговор);
    						 
    						    КонецЕсли;

    							
    					  	КонецЕсли;	
    						
    													 
    					 Иначе	 
    						 
    						   ПечатьДосьеКлиента(стр.КредитныйДоговор);
    					 
    					 КонецЕсли;
    					 
    		    		     
    		       						 
    	   
    						   
    						   
    		    		       
    		    			   // Печать учредительных документов компании
    		    			    
    						Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							
    							ПечатьКопииУчредительныхДокументовКомпании();
    						Иначе	
    							
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопииУчредительныхДокументовКомпании И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	     ПечатьКопииУчредительныхДокументовКомпании();


    						 
    						 КонецЕсли;

    						КонецЕсли;	
    							
    													 
    					 Иначе	 
    						 
    						    ПечатьКопииУчредительныхДокументовКомпании();


    					 
    					 КонецЕсли;
    	 
    		    			  
    					 
    					 	    
    					 Если естьФильтр   Тогда
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
    						 Иначе	 
    							 
    							  	 
    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	    ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
    						 
    						 КонецЕсли;

    						 КонецЕсли;	 
    													 
    					 Иначе	 
    						 
    						    ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
    					 
    					 КонецЕсли;
    					 
    					 

    					 
    					 
    					 
    					   //ПечатьКопияУведомленияОбУступкеПраваТребования(крДог)
    					 
    					  
    							
    							
    		    					
    		    		           		 
    		    			
    				     
    				 
    				 КонецЕсли;
    				 
    				 
    				 
    		  	
    		  
    		  КонецЦикла;

			
			
			
			КонецЕсли;
			
#КонецОбласти //Печатьда			


 

			Если Результат = КодВозвратаДиалога.Нет Тогда

#область ПечатьНет				


              					       
    		              Shell = Новый COMОбъект("WScript.Shell");
    		              дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
                           программаОбр=дирМоиД+"\choosePrinter.exe";
    		    					 
    		    		   Shell.Run(программаОбр,1, 1);

		
					 //стр1=Элементы.ТБРеестрДляОтправки.ТекущиеДанные;
					 
			Для каждого стрИнд Из Элементы.ТБРеестрДляОтправки.ВыделенныеСтроки Цикл
						 
				
	    		  стр= Элементы.ТБРеестрДляОтправки.ДанныеСтроки(стрИнд);
					 
    		 
    		        естьФильтр=Ложь;
    				 Если структураФильтрПечать<>Неопределено Тогда
    				 
    				       естьФильтр=Истина;
    				 
    				 КонецЕсли;

					 
					 
			        срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);
    				 
    				 
    				 ////спрОбСтруктура= ПолучитьДанныеДляПечати(срДляПечати.ссылкаДокПечати);

    		    	 Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
    		    	 
    		    		 
    		    			  стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
    		    			  Shell = Новый COMОбъект("WScript.Shell");
    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

							  
							  
							  	  
    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
    		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 // ЗаявлениеОПроцессуальномПравопреемстве
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОПроцессуальномПравопреемстве");
									 
									 Если инд>0 Тогда
    		    					     программаОбр=программаОбр+" "+строкаПуть;
									 
    		    				         Shell.Run(программаОбр,0, 1);
									 
									 КонецЕсли;
									       		 
    		    			  
    		    			  КонецЦикла;

							  
							  
							  
						 // Доверенность представителя
    					 Если естьФильтр   Тогда
    						 
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    						Иначе	 
    							 
    								 
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    							 
    							 	    ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    							 КонецЕсли;
 
    						КонецЕсли;	 
    							 
    													 
    					 Иначе	 
    						 
    						     ПечатьДоверенностьПредставителя(стр.Исполнитель);
    					 
    					 КонецЕсли;
		  
						 
					      Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
    		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 // ЗаявлениеОПроцессуальномПравопреемстве
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОПроцессуальномПравопреемстве");
									 
									 Если инд=0 Тогда
    		    					     программаОбр=программаОбр+" "+строкаПуть;
									 
    		    				         Shell.Run(программаОбр,0, 1);
									 
									 КонецЕсли;
									       		 
    		    			  
    		    			  КонецЦикла;
							  
	  
							  
							  
							  
    		    		 
    		    		 //  копия договора цессии    стр.КредитныйДоговор
    					 Если естьФильтр   Тогда
    						 
    					  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    						  
    						  ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

    						   
    					   Иначе  
    						   
    						    
    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	   ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
    						 
    						 КонецЕсли;

    						   
    					   КонецЕсли;
     
    													 
    						 
    					 Иначе	 
    						 
    						 ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
 
    					 
    					 КонецЕсли;
    					 
    					 
    					  
    		    		 // Печать копии платежного поручения подтверждающего оплату по договору уступки прав
    					 Если естьФильтр   Тогда
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    							 
    						 Иначе
    							 	 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	   ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);							 
    						 КонецЕсли;

    							 
    						 КонецЕсли;	 
    						 
    						 
    												 
    						 
    					 Иначе	 
    						 
    						   ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    				 
    					 КонецЕсли;
    	 

						 
						 
						  // Печать свидетельства о регистрации Юр.лица
    					  Если естьФильтр   Тогда
    						  
    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьСвидетельстваОРегистрацииЮрЛица();

    							  
    						  Иначе	 
    							  
    							  	  
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьСвидетельстваОРегистрацииЮрЛица И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    							 
    							 	   ПечатьСвидетельстваОРегистрацииЮрЛица();
    							 
    							 КонецЕсли;

    							  
    						  КонецЕсли;	  
    						  
    												 
    						 
    					 Иначе	 
    						 
    						    ПечатьСвидетельстваОРегистрацииЮрЛица();
    					 
    					 КонецЕсли;

						 
						 
    					 
    					 
    					 Если естьФильтр   Тогда
    						 
    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда

    							   ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

    							  
    						  Иначе	  
    							  
    							   Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	      ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

    						 
    						        КонецЕсли;

    							  
    						  КонецЕсли;

    						 
    													 
    						 
    					 Иначе	 
    						 
    						  ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

 
    					 
    					 КонецЕсли;
    					 
    					 
    					 
    					
    					 
    					 
    		    		    					  
    							    			
    		    	 
    		   	 КонецЕсли;
    		    	 
    		    	 
    				 ////////////////////
    		    	 
    				 
    		    	 Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда
    		    		 
						 
						 
						  
						   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
    		    			  Shell = Новый COMОбъект("WScript.Shell");
    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

    		    			  
    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
									 
									 
									 
									 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 //ЗаявлениеОВыдачеСудебногоПриказа
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОВыдачеСудебногоПриказа");
									 
									 Если инд>0 Тогда
									 
									 	     
    		    					      программаОбр=программаОбр+" "+строкаПуть;
    		    					 
    		    				          Shell.Run(программаОбр,0, 1);

									 
									 КонецЕсли;
									    		 
    		    			  
    		    			  КонецЦикла;
    		    
							  
							  
									 		 
    		    		 // Доверенность представителя
    					 Если естьФильтр   Тогда
    						 
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    						Иначе	 
    							 
    								 
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    							 
    							 	    ПечатьДоверенностьПредставителя(стр.Исполнитель);
    							 
    							 КонецЕсли;
 
    						КонецЕсли;	 
    							 
    													 
    					 Иначе	 
    						 
    						     ПечатьДоверенностьПредставителя(стр.Исполнитель);
    					 
    					 КонецЕсли;
	  
						 
						 
						 	  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 
    		    					 //заменить пробелы Символ(174)
    		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
    		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
									 
									 //ЗаявлениеОВыдачеСудебногоПриказа
									 
									 инд=Найти(Строка(стрМассив),"ЗаявлениеОВыдачеСудебногоПриказа");
									 
									 Если инд=0 Тогда
									 
									 	     
    		    					      программаОбр=программаОбр+" "+строкаПуть;
    		    					 
    		    				          Shell.Run(программаОбр,0, 1);

									 
									 КонецЕсли;
									    		 
    		    			  
    		    			  КонецЦикла;

				  
							  
					    //  копия договора цессии    стр.КредитныйДоговор
    				 	Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
    							
    						Иначе	
    							
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	      ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

    						 
    						 КонецЕсли;

    							
    						КонецЕсли;	
    						
    						
    													 
    					 Иначе	 
    						 
    						    ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

    					 
    					 КонецЕсли;
						 
						 
	  
						 
						 
    	   		      // Печать копии платежного поручения подтверждающего оплату по договору уступки прав
    					Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							 ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    						Иначе	
    							 
    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	     ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);

    						 
    						 КонецЕсли;

    							
    						КонецЕсли;	
    													 
    					 Иначе	 
    						 
    						    ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
    					 
    					 КонецЕсли;
    					 
    	   

						
    					 //  ПечатьКопияУведомленияОбУступкеПраваТребования
    					  Если естьФильтр   Тогда
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор);
    						 Иначе	 
    							 
    							  	 
    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияУведомленияОбУступкеПраваТребования И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	    ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор);
    						 
    						 КонецЕсли;

    						 КонецЕсли;	 
    													 
    					 Иначе	 
    						 
    						    ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор); 
    					 
    					 КонецЕсли;
    	 
 
						 
						 
						 
						 
    		    	   // Печать копии досье клиента
    		    		Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							ПечатьДосьеКлиента(стр.КредитныйДоговор);

    							
    						Иначе
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДосьеКлиента И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	    ПечатьДосьеКлиента(стр.КредитныйДоговор);
    						 
    						       КонецЕсли;

    							
    					  	КонецЕсли;	
    						
    													 
    					 Иначе	 
    						 
    						   ПечатьДосьеКлиента(стр.КредитныйДоговор);
    					 
    					 КонецЕсли;
    					 
    		    		     
    		        						 
    						   
    						   
    		    		       
    		    			   // Печать учредительных документов компании
    		    			    
    						Если естьФильтр   Тогда
    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							
    							ПечатьКопииУчредительныхДокументовКомпании();
    						Иначе	
    							
    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопииУчредительныхДокументовКомпании И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	     ПечатьКопииУчредительныхДокументовКомпании();


    						 
    						 КонецЕсли;

    						КонецЕсли;	
    							
    													 
    					 Иначе	 
    						 
    						    ПечатьКопииУчредительныхДокументовКомпании();


    					 
    					 КонецЕсли;
    	 
    		    			  
    					 
    					 	    
    					 Если естьФильтр   Тогда
    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
    							  ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
    						 Иначе	 
    							 
    							  	 
    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
    						 
    						 	    ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
    						 
    						 КонецЕсли;

    						 КонецЕсли;	 
    													 
    					 Иначе	 
    						 
    						    ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
    					 
    					 КонецЕсли;
    					 
    					 

    					 
    					 
    					 
    					   //ПечатьКопияУведомленияОбУступкеПраваТребования(крДог)
    					 
    					  
    							
    							
    		    					
    		    		      		    		 
    		    		 
    		    		           
    		 
    				     
    				     
    				       ////ПечатьЗаявлениеОВыдачеСудебногоПриказа(спрОбСтруктура,стр.Исполнитель);

    				     
    				 
    				 КонецЕсли;
    				 
    		КонецЦикла;	
			  
			  
#КонецОбласти //ПечатьНет		  


			  
		    КонецЕсли;


		
		
		

КонецПроцедуры






&НаКлиенте
Процедура ПечатьПакетаСервис(Команда)
	
	
        Если ТБРеестрДляОтправки.Количество()>0 Тогда

			     Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросПечать",ЭтаФорма);
				 
				 стрТек=Элементы.ТБРеестрДляОтправки.ТекущиеДанные;
				 
				  
				 
		         текст="Печатать все договора - Да.  Нет - печать только выделенные - ";

                 ПоказатьВопрос(Оповещение, текст,РежимДиалогаВопрос.ДаНетОтмена,0,,,); 	
	
			
			
			
	    КонецЕсли;

	
	     
	
	
 //        Если ТБРеестрДляОтправки.Количество()>0 Тогда
 //   		 
 //   		 
 //   		 
 //   		 
 //   		 
 //   		        
 //   		              Shell = Новый COMОбъект("WScript.Shell");
 //   		              дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
 //                          программаОбр=дирМоиД+"\choosePrinter.exe";
 //   		    					 
 //   		    		   Shell.Run(программаОбр,1, 1);
 //
 //   					   
 //   		 
 //   		 
 //   		 
 //   		        естьФильтр=Ложь;
 //   				 Если структураФильтрПечать<>Неопределено Тогда
 //   				 
 //   				       естьФильтр=Истина;
 //   				 
 //   				 КонецЕсли;

 //   		  
 //   			   Для каждого стр  Из  ТБРеестрДляОтправки Цикл
 //   			  
 //   			     срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);
 //   				 
 //   									 
 //   				
 //   				 
 //   				 ////спрОбСтруктура= ПолучитьДанныеДляПечати(срДляПечати.ссылкаДокПечати);

 //   		    	 Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
 //   		    	 
 //   		    		 
 //   		    			  стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
 //   		    			  Shell = Новый COMОбъект("WScript.Shell");
 //   		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

 //   		    			  
 //   		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
 //   		    					 
 //   		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
 //   		    					 
 //   		    					 //заменить пробелы Символ(174)
 //   		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
 //   		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
 //   		    					 
 //   		    					 программаОбр=программаОбр+" "+строкаПуть;
 //   		    					 
 //   		    				     Shell.Run(программаОбр,0, 1);
 //   		 
 //   		    			  
 //   		    			  КонецЦикла;
 //   		    		 
 //   		    		 
 //   		    		 //  копия договора цессии    стр.КредитныйДоговор
 //   					 Если естьФильтр   Тогда
 //   						 
 //   					  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   						  
 //   						  ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

 //   						   
 //   					   Иначе  
 //   						   
 //   						    
 //   						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	   ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
 //   						 
 //   						 КонецЕсли;

 //   						   
 //   					   КонецЕсли;
 //    
 //   													 
 //   						 
 //   					 Иначе	 
 //   						 
 //   						 ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
 //
 //   					 
 //   					 КонецЕсли;
 //   					 
 //   					 
 //   					 
 //   					 
 //   					 
 //   					 
 //   					 Если естьФильтр   Тогда
 //   						 
 //   						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда

 //   							   ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

 //   							  
 //   						  Иначе	  
 //   							  
 //   							   Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	      ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

 //   						 
 //   						        КонецЕсли;

 //   							  
 //   						  КонецЕсли;

 //   						 
 //   													 
 //   						 
 //   					 Иначе	 
 //   						 
 //   						  ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

 //
 //   					 
 //   					 КонецЕсли;
 //   					 
 //   					 
 //   					 
 //   					 // Печать свидетельства о регистрации Юр.лица
 //   					  Если естьФильтр   Тогда
 //   						  
 //   						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							  ПечатьСвидетельстваОРегистрацииЮрЛица();

 //   							  
 //   						  Иначе	 
 //   							  
 //   							  	  
 //   							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьСвидетельстваОРегистрацииЮрЛица И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   							 
 //   							 	   ПечатьСвидетельстваОРегистрацииЮрЛица();
 //   							 
 //   							 КонецЕсли;

 //   							  
 //   						  КонецЕсли;	  
 //   						  
 //   												 
 //   						 
 //   					 Иначе	 
 //   						 
 //   						    ПечатьСвидетельстваОРегистрацииЮрЛица();
 //   					 
 //   					 КонецЕсли;

 //   					 
 //   					 
 //   		    		 
 //   		    		 // Печать копии платежного поручения подтверждающего оплату по договору уступки прав
 //   					 Если естьФильтр   Тогда
 //   						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							  ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
 //   							 
 //   						 Иначе
 //   							 	 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	   ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);							 
 //   						 КонецЕсли;

 //   							 
 //   						 КонецЕсли;	 
 //   						 
 //   						 
 //   												 
 //   						 
 //   					 Иначе	 
 //   						 
 //   						   ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
 //   				 
 //   					 КонецЕсли;
 //   	 
 //   					 
 //   		    		 
 //   		    		 // Доверенность представителя
 //   					 Если естьФильтр   Тогда
 //   						 
 //   						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							  ПечатьДоверенностьПредставителя(стр.Исполнитель);
 //   							 
 //   						Иначе	 
 //   							 
 //   								 
 //   							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   							 
 //   							 	    ПечатьДоверенностьПредставителя(стр.Исполнитель);
 //   							 
 //   							 КонецЕсли;
 //
 //   						КонецЕсли;	 
 //   							 
 //   													 
 //   					 Иначе	 
 //   						 
 //   						     ПечатьДоверенностьПредставителя(стр.Исполнитель);
 //   					 
 //   					 КонецЕсли;

 //   					  
 //   					  
 //   							    			
 //   		    	 
 //   		   	 КонецЕсли;
 //   		    	 
 //   		    	 
 //   				 ////////////////////
 //   		    	 
 //   				 
 //   		    	 Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда
 //   		    		 
 //   		    		 
 //   		    	   // Печать копии досье клиента
 //   		    		Если естьФильтр   Тогда
 //   						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							ПечатьДосьеКлиента(стр.КредитныйДоговор);

 //   							
 //   						Иначе
 //   							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДосьеКлиента И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	    ПечатьДосьеКлиента(стр.КредитныйДоговор);
 //   						 
 //   						 КонецЕсли;

 //   							
 //   					  	КонецЕсли;	
 //   						
 //   													 
 //   					 Иначе	 
 //   						 
 //   						   ПечатьДосьеКлиента(стр.КредитныйДоговор);
 //   					 
 //   					 КонецЕсли;
 //   					 
 //   		    		     
 //   		        //  копия договора цессии    стр.КредитныйДоговор
 //   				 	Если естьФильтр   Тогда
 //   						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);
 //   							
 //   						Иначе	
 //   							
 //   							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	      ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

 //   						 
 //   						 КонецЕсли;

 //   							
 //   						КонецЕсли;	
 //   						
 //   						
 //   													 
 //   					 Иначе	 
 //   						 
 //   						    ПечатьКопииДоговораЦессии(стр.КредитныйДоговор);

 //   					 
 //   					 КонецЕсли;
 //   					 
 //   						 

 //   	   		      // Печать копии платежного поручения подтверждающего оплату по договору уступки прав
 //   					Если естьФильтр   Тогда
 //   						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							 ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
 //   						Иначе	
 //   							 
 //   						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	     ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);

 //   						 
 //   						 КонецЕсли;

 //   							
 //   						КонецЕсли;	
 //   													 
 //   					 Иначе	 
 //   						 
 //   						    ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор);
 //   					 
 //   					 КонецЕсли;
 //   					 
 //   	   
 //   						   
 //   						   
 //   		    		       
 //   		    			   // Печать учредительных документов компании
 //   		    			    
 //   						Если естьФильтр   Тогда
 //   						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							
 //   							ПечатьКопииУчредительныхДокументовКомпании();
 //   						Иначе	
 //   							
 //   							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопииУчредительныхДокументовКомпании И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	     ПечатьКопииУчредительныхДокументовКомпании();


 //   						 
 //   						 КонецЕсли;

 //   						КонецЕсли;	
 //   							
 //   													 
 //   					 Иначе	 
 //   						 
 //   						    ПечатьКопииУчредительныхДокументовКомпании();


 //   					 
 //   					 КонецЕсли;
 //   	 
 //   		    			  
 //   					 
 //   					 	    
 //   					 Если естьФильтр   Тогда
 //   						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							  ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
 //   						 Иначе	 
 //   							 
 //   							  	 
 //   						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	    ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
 //   						 
 //   						 КонецЕсли;

 //   						 КонецЕсли;	 
 //   													 
 //   					 Иначе	 
 //   						 
 //   						    ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);
 //   					 
 //   					 КонецЕсли;
 //   					 
 //   					 

 //   					 //  ПечатьКопияУведомленияОбУступкеПраваТребования
 //   					  Если естьФильтр   Тогда
 //   						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
 //   							  ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор);
 //   						 Иначе	 
 //   							 
 //   							  	 
 //   						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияУведомленияОбУступкеПраваТребования И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
 //   						 
 //   						 	    ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор);
 //   						 
 //   						 КонецЕсли;

 //   						 КонецЕсли;	 
 //   													 
 //   					 Иначе	 
 //   						 
 //   						    ПечатьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор); 
 //   					 
 //   					 КонецЕсли;
 //   	 

 //   					 
 //   					 
 //   					 
 //   					   //ПечатьКопияУведомленияОбУступкеПраваТребования(крДог)
 //   					 
 //   					  
 //   							
 //   							
 //   		    					
 //   		    		           		 
 //   		    			  стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
 //   		    			  Shell = Новый COMОбъект("WScript.Shell");
 //   		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

 //   		    			  
 //   		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
 //   		    					 
 //   		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
 //   		    					 
 //   		    					 //заменить пробелы Символ(174)
 //   		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
 //   		    					 программаОбр=дирМоиД+"\RawPrintTest.exe";
 //   		    					 
 //   		    					 программаОбр=программаОбр+" "+строкаПуть;
 //   		    					 
 //   		    				     Shell.Run(программаОбр,0, 1);
 //   		 
 //   		    			  
 //   		    			  КонецЦикла;
 //   		    
 //   		    		 
 //   		    		 
 //   		    		           
 //   		 
 //   				     
 //   				     
 //   				       ////ПечатьЗаявлениеОВыдачеСудебногоПриказа(спрОбСтруктура,стр.Исполнитель);

 //   				     
 //   				 
 //   				 КонецЕсли;
 //   				 
 //   				 
 //   				 
 //   		  	
 //   		  
 //   		  КонецЦикла;
 //     
 //     КонецЕсли;

	  
КонецПроцедуры



&НаКлиенте
Процедура ПечатьКопииУчредительныхДокументовКомпании()
         
	     ссылкаДок=ПолучитьСсылкуДокументыФорвард();

		 массивФайлов= ПолучитьФайлыУчредительныеДокументы(ссылкаДок);
		 
		    Shell = Новый COMОбъект("WScript.Shell");
            дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		 
		  Для каждого данФайл Из массивФайлов  Цикл
			  
			  
			         
                   имяД=данФайл.ИмяФайла+данФайл.ТипФайла;
				   
			  
				   //ИмяФайла=Строка(КаталогВременныхФайлов())+имяД;
				   ИмяФайла=дирМоиД+"\"+ имяД;
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					данФайл.ДвоичныеДанные.Записать(ИмяФайла);

				
					 программаОбр=дирМоиД+"\RawPrintTest.exe";
					 строкаПуть=СтрЗаменить(ИмяФайла," ",Символ(174));
					 
					 программаОбр=программаОбр+" "+строкаПуть;
					  Shell.Run(программаОбр,0, 1);

					
					
			  
			  
			  
		  	
		  
		  КонецЦикла;
		  

		
		
		

КонецПроцедуры


&НаКлиенте
Процедура СохранитьКопииУчредительныхДокументовКомпании(стрПодкаталог)
         
	     ссылкаДок=ПолучитьСсылкуДокументыФорвард();

		 массивФайлов= ПолучитьФайлыУчредительныеДокументы(ссылкаДок);
		 
		    Shell = Новый COMОбъект("WScript.Shell");
            дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		 
		  Для каждого данФайл Из массивФайлов  Цикл
			  
			  
			         
                   имяД=данФайл.ИмяФайла+данФайл.ТипФайла;
				   
				   
				   
			  
				   //ИмяФайла=Строка(КаталогВременныхФайлов())+имяД;
				   ИмяФайла=дирМоиД+"\"+ имяД;
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					данФайл.ДвоичныеДанные.Записать(ИмяФайла);

					КопироватьФайл(ИмяФайла,стрПодкаталог+"\"+ данФайл.ИмяФайла+данФайл.ТипФайла);

				
			  
		  	
		  
		  КонецЦикла;
		  

		
		
		

КонецПроцедуры






&НаКлиенте
Процедура ПечатьДоверенностьПредставителя(стрИсполнитель)
    
	    ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		
		 массивФайлов=ПолучитьФайлыДоверенностьПредставителя(ссылкаДок,стрИсполнитель);

		    Shell = Новый COMОбъект("WScript.Shell");
            дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		 
		  Для каждого данФайл Из массивФайлов  Цикл
			  
			  
			         
                   имяД=данФайл.ИмяФайла+данФайл.ТипФайла;
				   
				   
				   
				   //ИмяФайла=Строка(КаталогВременныхФайлов())+имяД;
				   ИмяФайла=дирМоиД+"\"+ имяД;
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					данФайл.ДвоичныеДанные.Записать(ИмяФайла);

				
					 программаОбр=дирМоиД+"\RawPrintTest.exe";
					 строкаПуть=СтрЗаменить(ИмяФайла," ",Символ(174));
					 
					 программаОбр=программаОбр+" "+строкаПуть;
					  Shell.Run(программаОбр,0, 1);
	  	
		  
		  КонецЦикла;
		  
 	

КонецПроцедуры





&НаКлиенте
Процедура СохранитьДоверенностьПредставителя(стрИсполнитель,строкаПодкаталога)
    
	    ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		
		 массивФайлов=ПолучитьФайлыДоверенностьПредставителя(ссылкаДок,стрИсполнитель);

		    Shell = Новый COMОбъект("WScript.Shell");
            дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		 
		  Для каждого данФайл Из массивФайлов  Цикл
			  
			  
			         
                   имяД=данФайл.ИмяФайла+данФайл.ТипФайла;
				   
				   
				   
				   //ИмяФайла=Строка(КаталогВременныхФайлов())+имяД;
				   ИмяФайла=дирМоиД+"\"+ имяД;
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					данФайл.ДвоичныеДанные.Записать(ИмяФайла);
					
					
					 КопироватьФайл(ИмяФайла,строкаПодкаталога+"\"+ данФайл.ИмяФайла+данФайл.ТипФайла);

								  
			  
		  	
		  
		  КонецЦикла;
		  
 	

КонецПроцедуры



	  
	  

&НаСервере
Функция ПолучитьФайлыДоверенностьПредставителя(ссылкаДок,стрИсполнитель)

	   	      массивФайлов=Новый Массив;
			  
			   
		 Если  ссылкаДок<>Неопределено Тогда
 
	          об=ссылкаДок.ПолучитьОбъект();
			  
			  Для каждого стр  Из об.ДоверенностьПредставителя   Цикл
			      
				  Если стр.Исполнитель=ПользовательТк Тогда
				  
				  	       структураФайл=Новый Структура;
			      
			      
			              структураФайл.Вставить("ИмяФайла",стр.ИмяФайла);
			              структураФайл.Вставить("ТипФайла",стр.ТипФайла);
			              структураФайл.Вставить("ДвоичныеДанные",стр.ДанныеФайла.Получить());
			      
			      
			              массивФайлов.Добавить(структураФайл);
			      

				  
				  КонецЕсли;
				  
				 			  
			  КонецЦикла;
		 КонецЕсли;  
	  
			  
	 Возврат массивФайлов;	   

КонецФункции // ()



&НаСервере
Функция ПолучитьФайлПодписьПредставителя()

	
	     ссылкаДок=ПолучитьСсылкуДокументыФорвард();
	   	      			   
		 Если  ссылкаДок<>Неопределено Тогда
 
	          об=ссылкаДок.ПолучитьОбъект();
			  
			  Для каждого стр  Из об.ПодписьПредставителя   Цикл
			      
				  Если стр.Исполнитель=ПользовательТк Тогда
				  
				  	       структураФайл=Новый Структура;
			      
			      
			              структураФайл.Вставить("ИмяФайла",стр.ИмяФайла);
			              структураФайл.Вставить("ТипФайла",стр.ТипФайла);
			              структураФайл.Вставить("ДвоичныеДанные",стр.ДанныеФайла.Получить());
			      
			      
			             
			      

				  
				  КонецЕсли;
				  
				 			  
			  КонецЦикла;
		 КонецЕсли;  
	  
			  
	 Возврат структураФайл;	   

КонецФункции // ()





&НаСервере
Функция ПолучитьФайлыУчредительныеДокументы(ссылкаДок)

	   	      массивФайлов=Новый Массив;
			  
			 Если  ссылкаДок<>Неопределено Тогда
			          об=ссылкаДок.ПолучитьОбъект();
			  
					  Для каждого стр  Из об.УчредительныеДокументы   Цикл
					      
					      структураФайл=Новый Структура;
					      
					      
					      структураФайл.Вставить("ИмяФайла",стр.ИмяФайла);
					      структураФайл.Вставить("ТипФайла",стр.ТипФайла);
					      структураФайл.Вставить("ДвоичныеДанные",стр.ДанныеФайла.Получить());
					      
					      
					      массивФайлов.Добавить(структураФайл);
					      
					  
					  КонецЦикла;
					  

			 	
			 
			 КонецЕсли;  
			  
	       			  
	 Возврат массивФайлов;	   

КонецФункции // ()

  
  
  

&НаКлиенте
Процедура ПечатьКопииПлатежногоПорученияПоДоговоруУступкиПрав(дог)
           
	       номерДог= НайтиДоговорЦессии(дог);
		   
    	   ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
			
		    
		   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);

		       Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

					  
					  Для каждого стрМассив  Из стрФайлыМассив  Цикл
					    	 
							 
							 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
							
							 
							 //заменить пробелы Символ(174)
							 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
							 программаОбр=дирМоиД+"\RawPrintTest.exe";
							 
							 программаОбр=программаОбр+" "+строкаПуть;
							 
						     Shell.Run(программаОбр,0, 1);
	 
					  
					  КонецЦикла;
	

КонецПроцедуры
				  



&НаКлиенте
Процедура СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(дог,строкаПодкаталога)
           
	       номерДог= НайтиДоговорЦессии(дог);
		   
    	   ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
			
		    
		   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);

		       Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

					  
					  Для каждого стрМассив  Из стрФайлыМассив  Цикл
					    	 
							 
							 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
							 
							 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

							 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
							 
							 ФайлЕсть = Новый Файл(строкаПуть);
							 Если ФайлЕсть.Существует()  Тогда
							 
							 	КопироватьФайл(строкаПуть,строкаПодкаталога+"\"+ имяФайлаПолное);

							 
							 КонецЕсли;		 
	 
					  
					  КонецЦикла;
	

КонецПроцедуры




&НаСервере
Функция НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыЦессииКопияПлатежногоПоручения.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДокументыЦессииКопияПлатежногоПоручения КАК ДокументыЦессииКопияПлатежногоПоручения
		|ГДЕ
		|	ДокументыЦессииКопияПлатежногоПоручения.ДоговорЦессии = &ДоговорЦессии";
	
	Запрос.УстановитьПараметр("ДоговорЦессии", номерДог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		
		ссылкаДок=ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	
	 Возврат ссылкаДок;

КонецФункции // ()





&НаКлиенте
Процедура ПечатьДосьеКлиента(дог)

	     ссылкаДок=НайтиСсылкуНаДосьеКлиента(дог); 
		 
		 стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
		 
		             Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

					  
					   КаталогНаДиске = Новый Файл(дирМоиД+"\tempdoc");
					    Если НЕ КаталогНаДиске.Существует() Тогда
					        СоздатьКаталог(дирМоиД+"\tempdoc");
					    КонецЕсли; 
						
						
						
					   КаталогНаДискеРисунки = Новый Файл(дирМоиД+"\pdftoimg");
					    Если НЕ  КаталогНаДискеРисунки.Существует() Тогда
					        СоздатьКаталог(дирМоиД+"\pdftoimg");
					    КонецЕсли; 

						  файлТемп=дирМоиД+"\tempdoc\1.pdf";
						
						  ВыбФайл = Новый Файл(файлТемп);	 
						  Если ВыбФайл.Существует() Тогда 
						    Если ВыбФайл.ПолучитьТолькоЧтение() Тогда
						        ВыбФайл.УстановитьТолькоЧтение(Ложь);
						    КонецЕсли;
						    УдалитьФайлы(файлТемп);                       
						 КонецЕсли;

						
						
					
					  
	 //   			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
	 //   			    	 
	 //   					 
	 //   					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
	 //   					 
	 //   					
	 //   					 
	 //   					 //заменить пробелы Символ(174)
	 //   					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
	 //   					 программаОбр=дирМоиД+"\RawPrintTest.exe";
	 //   					 
	 //   					 программаОбр=программаОбр+" "+строкаПуть;
	 //   					 
	 //   				     Shell.Run(программаОбр,0, 1);
	 //
	 //   			  
	 //   			  КонецЦикла;
	 
	   				  
	    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
						  
						  
						      ВыбФайл = Новый Файл(файлТемп);	 
							  Если ВыбФайл.Существует() Тогда 
							    Если ВыбФайл.ПолучитьТолькоЧтение() Тогда
							        ВыбФайл.УстановитьТолькоЧтение(Ложь);
							    КонецЕсли;
							    УдалитьФайлы(файлТемп);                       
							 КонецЕсли;

	    					 
	    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
							 Если  КаталогНаДиске.Существует() Тогда
								 
								 КопироватьФайл(строкаПуть,файлТемп);
	    					 
		    					 //заменить пробелы Символ(174)
		    					 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
		    					 программаОбр=дирМоиД+"\PDFtoImagePrint.exe";
		    					 
		    					 программаОбр=программаОбр+" "+файлТемп;
		    					 
		    				     Shell.Run(программаОбр,0, 1);

								  
					         КонецЕсли; 

							 
														 
							 
	    			  
	    			  КонецЦикла;

					  
					
					  

		 
					  
					  
					  

КонецПроцедуры


&НаКлиенте
Процедура СохранитьДосьеКлиента(дог,стрПодкаталог)

	
	Попытка
	
		 ссылкаДок=НайтиСсылкуНаДосьеКлиента(дог); 
		 
		 стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
		 
		             Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
					
		 
	   				  
	    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
	    					 
	    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
    		    			 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

							 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
		    									 
							 КопироватьФайл(строкаПуть,стрПодкаталог+"\"+ имяФайлаПолное);							 
							 
	    			  
	    			  КонецЦикла;

		
	
	Исключение
		
		       Сообщить("Ошибка----- Сохранить Досье клиента");
			   ТекстОшибки = ОписаниеОшибки();
			   Сообщить(ТекстОшибки);
		
	КонецПопытки;
	
	    
					  
					
					  

		 
					  
					  
					  

КонецПроцедуры





&НаСервере
Функция НайтиСсылкуНаДосьеКлиента(дог)
	
	
	
	           // шифр 29
	           	
				  НазваниеДокумента="Досье Клиента ";
				  
				  ссылкаДок=Неопределено;
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ДокументВходящий.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.ДокументВходящий КАК ДокументВходящий
					|ГДЕ
					|	ДокументВходящий.Договор = &Договор
					|	И ДокументВходящий.ШифрНазвания = &ШифрНазвания";
				
				Запрос.УстановитьПараметр("Договор", дог);
				Запрос.УстановитьПараметр("ШифрНазвания", 29);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					ссылкаДок=ВыборкаДетальныеЗаписи.Ссылка;  
					  
				КонецЦикла;
				
	     Возврат ссылкаДок;

КонецФункции // ()




&НаКлиенте
Процедура ПечатьСвидетельстваОРегистрацииЮрЛица()

	      ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 
		  массивФайлов=ПолучитьФайлыСвидетельстваОРегистрацииЮрЛица(ссылкаДок);
		  
		  
		    Shell = Новый COMОбъект("WScript.Shell");
            дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		 
		  Для каждого данФайл Из массивФайлов  Цикл
			  
			  
			         
                   имяД=данФайл.ИмяФайла+данФайл.ТипФайла;
				   
				   ИмяФайла=дирМоиД+"\"+ имяД;
			  
				   //ИмяФайла=Строка(КаталогВременныхФайлов())+имяД;
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					данФайл.ДвоичныеДанные.Записать(ИмяФайла);

					 программаОбр=дирМоиД+"\RawPrintTest.exe";
					 строкаПуть=СтрЗаменить(ИмяФайла," ",Символ(174));
					 
					 программаОбр=программаОбр+" "+строкаПуть;
					  Shell.Run(программаОбр,0, 1);

					
					
					
			  
			  
			  
		  	
		  
		  КонецЦикла;
		  
		
				 
		 //А=0;
		 
		 
КонецПроцедуры
	 

&НаКлиенте
Процедура СохранитьСвидетельстваОРегистрацииЮрЛица(стрПодкаталог)

	      ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 
		  массивФайлов=ПолучитьФайлыСвидетельстваОРегистрацииЮрЛица(ссылкаДок);
		  
		  
		    Shell = Новый COMОбъект("WScript.Shell");
            дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		 
		  Для каждого данФайл Из массивФайлов  Цикл
			  
			  
			         
                   имяД=данФайл.ИмяФайла+данФайл.ТипФайла;
				   
				   ИмяФайла=дирМоиД+"\"+ имяД;
			  
				   //ИмяФайла=Строка(КаталогВременныхФайлов())+имяД;
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					данФайл.ДвоичныеДанные.Записать(ИмяФайла);

					
					
					 КопироватьФайл(ИмяФайла,стрПодкаталог+"\"+ данФайл.ИмяФайла+данФайл.ТипФайла);
			  
		  	
		  
		  КонецЦикла;
		  
		 
		 
КонецПроцедуры
	 


	 
	 
	 
	 
	 
	 


&НаСервере
Функция ПолучитьФайлыСвидетельстваОРегистрацииЮрЛица(ссылкаДок)

	
	          массивФайлов=Новый Массив;
			  
			  
			  Если ссылкаДок<>Неопределено Тогда
			  
			  	     об=ссылкаДок.ПолучитьОбъект();
			  
			  Для каждого стр  Из об.СвидетельствоОРегистрацииЮрЛица   Цикл
				  
				  структураФайл=Новый Структура;
				  
				  
				  структураФайл.Вставить("ИмяФайла",стр.ИмяФайла);
				  структураФайл.Вставить("ТипФайла",стр.ТипФайла);
				  структураФайл.Вставить("ДвоичныеДанные",стр.ДанныеФайла.Получить());
				  
				  
                  массивФайлов.Добавить(структураФайл);
				  
			  
			  КонецЦикла;
			  

			  
			  КонецЕсли;
			  
	
	        			  
	 Возврат массивФайлов;		  
	

КонецФункции // ()



	 
	 


&НаСервере
Функция ПолучитьСсылкуДокументыФорвард()

	
	      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДокументыФорвард.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДокументыФорвард КАК ДокументыФорвард
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДокументыФорвард.ДатаЗаписи УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
	      ссылкаДок=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат ссылкаДок;
	

КонецФункции // ()



  



  
&НаКлиенте
Процедура ПечатьРеестраУступаемыхПрав(кредДог)

	           номерДог= НайтиДоговорЦессии(кредДог);

			   ссылкаДок= НайтиКопияРеестраУступаемыхПрав(номерДог);
			   
			   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
			   
			   
		   			  Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

					  
					  Для каждого стрМассив  Из стрФайлыМассив  Цикл
					    	 
							 
							 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
							
							 
							 //заменить пробелы Символ(174)
							 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
							 программаОбр=дирМоиД+"\RawPrintTest.exe";
							 
							 программаОбр=программаОбр+" "+строкаПуть;
							 
						     Shell.Run(программаОбр,0, 1);
	 
					  
					  КонецЦикла;

			

		   

КонецПроцедуры


&НаКлиенте
Процедура СохранитьРеестраУступаемыхПрав(кредДог,стрПодкаталог)

	           номерДог= НайтиДоговорЦессии(кредДог);

			   ссылкаДок= НайтиКопияРеестраУступаемыхПрав(номерДог);
			   
			   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
			   
			   
		   			  Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

					  
					  Для каждого стрМассив  Из стрФайлыМассив  Цикл
					    	 
							 
							 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
							 
							 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

							 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
							 
							 ФайлЕсть = Новый Файл(строкаПуть);
							 Если ФайлЕсть.Существует()  Тогда
							 
							 	КопироватьФайл(строкаПуть,стрПодкаталог+"\"+ имяФайлаПолное);

							 
							 КонецЕсли;		 
							 
							 	 
					  
					  КонецЦикла;

			

		   

КонецПроцедуры


				  
	   
	   

&НаСервере
Функция НайтиКопияРеестраУступаемыхПрав(номерДог)

		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДокументыЦессииКопияРеестраУступаемыхПрав.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.ДокументыЦессииКопияРеестраУступаемыхПрав КАК ДокументыЦессииКопияРеестраУступаемыхПрав
			|ГДЕ
			|	ДокументыЦессииКопияРеестраУступаемыхПрав.ДоговорЦессии = &ДоговорЦессии";
		
		Запрос.УстановитьПараметр("ДоговорЦессии", номерДог);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			// Вставить обработку выборки ВыборкаДетальныеЗаписи
			ссылкаДокРеестраУступаемыхПрав=ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
		
	    Возврат  ссылкаДокРеестраУступаемыхПрав;
	

КонецФункции // ()




&НаКлиенте
Процедура  ПечатьКопииДоговораЦессии(кредДог)

	       номерДог= НайтиДоговорЦессии(кредДог);
		   
		   
		    ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
		   
		    стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
			
			
			          Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

					  
					  Для каждого стрМассив  Из стрФайлыМассив  Цикл
					    	 
							 
							 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
							
							 
							 //заменить пробелы Символ(174)
							 строкаПуть=СтрЗаменить(строкаПуть," ",Символ(174));
							 программаОбр=дирМоиД+"\RawPrintTest.exe";
							 
							 программаОбр=программаОбр+" "+строкаПуть;
							 
						     Shell.Run(программаОбр,0, 1);
	 
					  
					  КонецЦикла;

			
		   
		  
	  
	

КонецПроцедуры


&НаКлиенте
Процедура  СохранитьКопииДоговораЦессии(кредДог,строкаПодкаталога)

	       номерДог= НайтиДоговорЦессии(кредДог);
		   
		   
		    ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
		   
		    стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
			
			
			          Shell = Новый COMОбъект("WScript.Shell");
                      дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

					  
					  Для каждого стрМассив  Из стрФайлыМассив  Цикл
					    	 
							 
							 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
							 
							 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

							 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
							 
							 ФайлЕсть = Новый Файл(строкаПуть);
							 Если ФайлЕсть.Существует()  Тогда
							 
							 	КопироватьФайл(строкаПуть,строкаПодкаталога+"\"+ имяФайлаПолное);

							 
							 КонецЕсли;		 
								
										 
							   
							   
							   
							   
										 
							  
					  КонецЦикла;

		   
		  
	  
	

КонецПроцедуры

				  
				  


&НаСервере
Функция НайтиДокументыЦессииКопияДоговорЦессии(номерДог)

	          	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыЦессииДоговорЦессии.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ДокументыЦессииДоговорЦессии КАК ДокументыЦессииДоговорЦессии
		|ГДЕ
		|	ДокументыЦессииДоговорЦессии.ДоговорЦессии = &ДоговорЦессии";
	
	Запрос.УстановитьПараметр("ДоговорЦессии", номерДог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	   ссылкаДокументыЦессииДоговорЦессии=ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	  
	 Возврат  ссылкаДокументыЦессииДоговорЦессии;
	
	

КонецФункции // ()




&НаСервере
Функция НайтиДоговорЦессии(дог)

			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДоговорЦессии.НомерДоговора КАК НомерДоговора
				|ИЗ
				|	Справочник.ДоговорЦессии КАК ДоговорЦессии
				|ГДЕ
				|	ДоговорЦессии.Владелец = &Владелец";
			
			Запрос.УстановитьПараметр("Владелец", дог);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				номерДоговора=ВыборкаДетальныеЗаписи.НомерДоговора;
			КонецЦикла;
			
		   	
	
   Возврат номерДоговора;
			
КонецФункции // ()


&НаСервере
Функция ПолучитьПутьКФайлу(ссылкаНаФайл)

	        об=ссылкаНаФайл.ПолучитьОбъект();
			
		
			 
		//	путьНовосиб= СтрЗаменить(об.Том.ПолныйПутьWindows,"terminal","192.168.16.254");
		//
		//	 
		//				   
		//	Возврат  путьНовосиб+ об.ПутьКФайлу;
		//
		
			
			Возврат  об.Том.ПолныйПутьWindows+ об.ПутьКФайлу;
			//
			

КонецФункции // ()


&НаСервере
Функция ПолучитьИмяФайлаИРасширение(ссылкаНаФайл)
	
	     структураДанные=Новый Структура; 
	
	     об=ссылкаНаФайл.ПолучитьОбъект();
		 
		 структураДанные.Вставить("Наименование",об.Наименование);
		 структураДанные.Вставить("Расширение",об.Расширение);
				
		
		Возврат  структураДанные;

КонецФункции // ()



		



  
  
  


&НаСервере
Функция ПолучитьПрисоединенныеФайлы(владелецФайлов)

		//структураФайлы=Новый Структура;

		массивСтруктур=Новый Массив;
		
	
	         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОФайлах.Файл КАК Файл
		|ИЗ
		|	РегистрСведений.СведенияОФайлах КАК СведенияОФайлах
		|ГДЕ
		|	СведенияОФайлах.ВладелецФайла = &ВладелецФайла";
	
	Запрос.УстановитьПараметр("ВладелецФайла", владелецФайлов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи

		//структураФайлы.Вставить("Файл", ВыборкаДетальныеЗаписи.Файл);
		массивСтруктур.Добавить(ВыборкаДетальныеЗаписи.Файл);

	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	 //ВыборкаДетальныеЗаписи.Файл.ПутьКФайлу
	
	
	 Возврат массивСтруктур;

КонецФункции // ()


  
  


&НаСервере
Функция ПолучитьДанныеДляПечати(ссылкаДок)

	  данныеСтруктура=Новый Структура;
      спрОб= ссылкаДок.ПолучитьОбъект();

	  
	   Если ТипЗнч(ссылкаДок)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда

		    данныеСтруктура.Вставить("НаименованиеСуда",Строка(спрОб.НаименованиеСуда));
			данныеСтруктура.Вставить("АдресСуда",спрОб.АдресСуда);
			данныеСтруктура.Вставить("ФИОДолжника",Строка(спрОб.ФИОДолжника));
			данныеСтруктура.Вставить("ДатаРожденияДолжника",спрОб.ДатаРожденияДолжника);
			данныеСтруктура.Вставить("АдресРегистрацииДолжника",спрОб.АдресРегистрацииДолжника);
			данныеСтруктура.Вставить("НаименованиеПервоначальногоКредитора",спрОб.НаименованиеПервоначальногоКредитора);
			данныеСтруктура.Вставить("НомерДоговораЦессии",спрОб.НомерДоговораЦессии);
			данныеСтруктура.Вставить("ДатаДоговораЦессии",спрОб.ДатаДоговораЦессии);
			данныеСтруктура.Вставить("НомерКредитногоДоговора",спрОб.НомерКредитногоДоговора);
			данныеСтруктура.Вставить("ДатаКредитногоДоговора",спрОб.ДатаКредитногоДоговора);
			данныеСтруктура.Вставить("НомерСудебногоДела",спрОб.НомерСудебногоДела);
			данныеСтруктура.Вставить("ДатаСудебногоДела",спрОб.ДатаСудебногоДела);
			
			
		   
	   КонецЕсли;
	  
	    Если ТипЗнч(ссылкаДок)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
	
			данныеСтруктура.Вставить("НаименованиеСуда",Строка(спрОб.НаименованиеСуда));
			данныеСтруктура.Вставить("АдресСуда",спрОб.АдресСуда);
			данныеСтруктура.Вставить("ФИОДолжника",Строка(спрОб.ФИОДолжника));
			данныеСтруктура.Вставить("ДатаРожденияДолжника",спрОб.ДатаРожденияДолжника);
			данныеСтруктура.Вставить("АдресРегистрацииДолжника",спрОб.АдресРегистрацииДолжника);
			данныеСтруктура.Вставить("НаименованиеПервоначальногоКредитора",спрОб.НаименованиеПервоначальногоКредитора);
			данныеСтруктура.Вставить("НомерДоговораЦессии",спрОб.НомерДоговораЦессии);
			данныеСтруктура.Вставить("ДатаДоговораЦессии",спрОб.ДатаДоговораЦессии);
			данныеСтруктура.Вставить("НомерКредитногоДоговора",спрОб.НомерКредитногоДоговора);
			данныеСтруктура.Вставить("ДатаКредитногоДоговора",спрОб.ДатаКредитногоДоговора);
			данныеСтруктура.Вставить("ПаспортныеДанныеДолжника",спрОб.ПаспортныеДанныеДолжника);
			данныеСтруктура.Вставить("ОбщаяСуммаЗадолженностиПоДоговору",спрОб.ОбщаяСуммаЗадолженностиПоДоговору);
			
			данныеСтруктура.Вставить("ГоспошлинаНаша",спрОб.ГоспошлинаНаша);
			данныеСтруктура.Вставить("СуммаКредита",спрОб.СуммаКредита);
			данныеСтруктура.Вставить("ПаспортДатаВыдачи",спрОб.ПаспортДатаВыдачи);
			
			данныеСтруктура.Вставить("МестоРожденияДолжника",спрОб.МестоРожденияДолжника);
			
			
			//
			
		   
	   КонецЕсли;

	  
	  
	  
	  
	  
	  Возврат данныеСтруктура;
	

КонецФункции // ()



&НаСервере
Функция ДанныеУведомленияОбУступкеПраваТребования(крДог)
	
	
	       данныеСтруктура=Новый Структура;

			      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	УведомленияОбУступкеПраваТребования.КредитныйДоговор КАК КредитныйДоговор,
				|	УведомленияОбУступкеПраваТребования.Должник КАК Должник,
				|	УведомленияОбУступкеПраваТребования.АдресДолжника КАК АдресДолжника,
				|	УведомленияОбУступкеПраваТребования.ДатаЦессии КАК ДатаЦессии,
				|	УведомленияОбУступкеПраваТребования.ДоговорЦессии КАК ДоговорЦессии,
				|	УведомленияОбУступкеПраваТребования.ДатаПереходаПравТребований КАК ДатаПереходаПравТребований,
				|	УведомленияОбУступкеПраваТребования.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг,
				|	УведомленияОбУступкеПраваТребования.ПросроченныеПроценты КАК ПросроченныеПроценты,
				|	УведомленияОбУступкеПраваТребования.Штрафы КАК Штрафы,
				|	УведомленияОбУступкеПраваТребования.Госпошлина КАК Госпошлина,
				|	УведомленияОбУступкеПраваТребования.СуммаДолга КАК СуммаДолга,
				|	УведомленияОбУступкеПраваТребования.ШПИ КАК ШПИ,
				|	УведомленияОбУступкеПраваТребования.КредитныйДоговор.НомерДоговора КАК КредитныйДоговорНомерДоговора,
				|	УведомленияОбУступкеПраваТребования.КредитныйДоговор.ДатаФинансирования КАК КредитныйДоговорДатаФинансирования
				|ИЗ
				|	Справочник.УведомленияОбУступкеПраваТребования КАК УведомленияОбУступкеПраваТребования
				|ГДЕ
				|	УведомленияОбУступкеПраваТребования.КредитныйДоговор = &КредитныйДоговор";
			
			Запрос.УстановитьПараметр("КредитныйДоговор", крДог);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				данныеСтруктура.Вставить("КредитныйДоговор",ВыборкаДетальныеЗаписи.КредитныйДоговор);
				данныеСтруктура.Вставить("Должник",ВыборкаДетальныеЗаписи.Должник);
				данныеСтруктура.Вставить("АдресДолжника",ВыборкаДетальныеЗаписи.АдресДолжника);
				данныеСтруктура.Вставить("ДатаЦессии",ВыборкаДетальныеЗаписи.ДатаЦессии);
				данныеСтруктура.Вставить("ДоговорЦессии",ВыборкаДетальныеЗаписи.ДоговорЦессии);
				данныеСтруктура.Вставить("ДатаПереходаПравТребований",ВыборкаДетальныеЗаписи.ДатаПереходаПравТребований);
				данныеСтруктура.Вставить("ПросроченныйОсновнойДолг",ВыборкаДетальныеЗаписи.ПросроченныйОсновнойДолг);
				данныеСтруктура.Вставить("ПросроченныеПроценты",ВыборкаДетальныеЗаписи.ПросроченныеПроценты);
				данныеСтруктура.Вставить("Штрафы",ВыборкаДетальныеЗаписи.Штрафы);
				данныеСтруктура.Вставить("Госпошлина",ВыборкаДетальныеЗаписи.Госпошлина);
				данныеСтруктура.Вставить("СуммаДолга",ВыборкаДетальныеЗаписи.СуммаДолга);
				данныеСтруктура.Вставить("КредитныйДоговорНомерДоговора",ВыборкаДетальныеЗаписи.КредитныйДоговорНомерДоговора);
				данныеСтруктура.Вставить("КредитныйДоговорДатаФинансирования",ВыборкаДетальныеЗаписи.КредитныйДоговорДатаФинансирования);
				
			КонецЦикла;
			
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	Возврат данныеСтруктура;
	

КонецФункции // ()



&НаКлиенте
Процедура ПечатьКопияУведомленияОбУступкеПраваТребования(крДог)

	      видД="ШаблонУведомленияУступкаВТБ";
		   
		  ДвоичныеДанные=ПолучитьФайлИзХран(видД);
		  
	       Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
		   
		   //путьКНазваниюПринтера=дирМоиД+"\setprintto1c.txt";

		   //ТекстовыйФайл = Новый ТекстовыйДокумент;
		   //ТекстовыйФайл.Прочитать(путьКНазваниюПринтера,КодировкаТекста.UTF8, Символы.ВК + Символы.ПС);   
		   //
		   //имяПринтера=ТекстовыйФайл.ПолучитьТекст();
		   
		   
		  Если ДвоичныеДанные<>Неопределено Тогда
			  
			  MSWord = новый COMОбъект("Word.Application");
			  Попытка
			  
				   имяД="_УведомленияОбУступкеПраваТребования";
				   
                    ИмяФайла=дирМоиД+"\"+ имяД+".docx";
					
					//ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);
					
				    спрОбСтруктура=ДанныеУведомленияОбУступкеПраваТребования(крДог);
					
					
			Если  спрОбСтруктура.Количество()>0   Тогда
				
				
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				 
				 // ФИОДолжник
				   MSWordDoc.Bookmarks("ФИОДолжник").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.Должник));
				   
				   // АдресДолжник
				    MSWordDoc.Bookmarks("АдресДолжник").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресДолжника);
				   
				   //  ДатаПереходаПравТребований
				   MSWordDoc.Bookmarks("ДатаПереходаПравТребований").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаПереходаПравТребований;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // ДоговорЦессииНомер
				    MSWordDoc.Bookmarks("ДоговорЦессииНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ДоговорЦессии));
				   
				   
				   
				   // ДатаЦессии
				   MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // НомерКредитногоДоговораНомер
				   MSWordDoc.Bookmarks("НомерКредитногоДоговораНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.КредитныйДоговорНомерДоговора);
				   
				   // ДатаКредитногоДоговораНомер
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговораНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.КредитныйДоговорДатаФинансирования;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // ДатаПереходаПравТребованийС
				    MSWordDoc.Bookmarks("ДатаПереходаПравТребованийС").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаПереходаПравТребований;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // ДатаПереходаПравТребованийНаМомент
				     MSWordDoc.Bookmarks("ДатаПереходаПравТребованийНаМомент").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаПереходаПравТребований;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // СуммаДолгаСоставляет
				    MSWordDoc.Bookmarks("СуммаДолгаСоставляет").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.СуммаДолга);
				  
				   // СуммаДолгаПрописью
				   MSWordDoc.Bookmarks("СуммаДолгаПрописью").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   стрСумма= ЧислоПрописью(спрОбСтруктура.СуммаДолга, "Л=ru_RU;ДП=Истина", "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2");
                   MSWordDoc.Application.Selection.TypeText(стрСумма);
				   
				   
				   // ПросроченныйОД
				   MSWordDoc.Bookmarks("ПросроченныйОД").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ПросроченныйОсновнойДолг);
				   
				   
				   // ПросроченныеПроценты
				   MSWordDoc.Bookmarks("ПросроченныеПроценты").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ПросроченныеПроценты);
				   
				   // Штрафы
				   MSWordDoc.Bookmarks("Штрафы").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.Штрафы);
				   
				   
				   //  Госпошлина
				    MSWordDoc.Bookmarks("Госпошлина").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.Госпошлина);
				   
				   // СуммаДолгаТаблица
				   
				   MSWordDoc.Bookmarks("СуммаДолгаТаблица").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.СуммаДолга);
				
				   
			            MSWord.Visible=0;
						
						//MSWord.Activate();
						
						
						//MSWord.ActivePrinter=имяПринтера;
						
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

					
					

				  
				  
			
					КонецЕсли;
					
							
						  
			  Исключение
				  
				  MSWord.Application.Quit();

				    Сообщить("Ошибка----- Печать УведомленияОбУступкеПраваТребования");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

			  КонецПопытки;
			  
			  
		  	
		  
		  КонецЕсли;
	
	
	
	

КонецПроцедуры


&НаКлиенте
Процедура СохранитьКопияУведомленияОбУступкеПраваТребования(крДог,стрПодкаталог)

	      видД="ШаблонУведомленияУступкаВТБ";
		   
		  ДвоичныеДанные=ПолучитьФайлИзХран(видД);
		  
	       Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");
		   
		   //путьКНазваниюПринтера=дирМоиД+"\setprintto1c.txt";

		   //ТекстовыйФайл = Новый ТекстовыйДокумент;
		   //ТекстовыйФайл.Прочитать(путьКНазваниюПринтера,КодировкаТекста.UTF8, Символы.ВК + Символы.ПС);   
		   //
		   //имяПринтера=ТекстовыйФайл.ПолучитьТекст();
		   
		   
		  Если ДвоичныеДанные<>Неопределено Тогда
			  
			  Попытка
			  
				   имяД="_УведомленияОбУступкеПраваТребования";
				   
                    ИмяФайла=дирМоиД+"\"+ имяД+".docx";
					
					//ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);
					
				    спрОбСтруктура=ДанныеУведомленияОбУступкеПраваТребования(крДог);
					
					
			Если  спрОбСтруктура.Количество()>0   Тогда
					 			 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				 
				 // ФИОДолжник
				   MSWordDoc.Bookmarks("ФИОДолжник").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.Должник));
				   
				   // АдресДолжник
				    MSWordDoc.Bookmarks("АдресДолжник").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресДолжника);
				   
				   //  ДатаПереходаПравТребований
				   MSWordDoc.Bookmarks("ДатаПереходаПравТребований").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаПереходаПравТребований;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // ДоговорЦессииНомер
				    MSWordDoc.Bookmarks("ДоговорЦессииНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ДоговорЦессии));
				   
				   
				   
				   // ДатаЦессии
				   MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // НомерКредитногоДоговораНомер
				   MSWordDoc.Bookmarks("НомерКредитногоДоговораНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.КредитныйДоговорНомерДоговора);
				   
				   // ДатаКредитногоДоговораНомер
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговораНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.КредитныйДоговорДатаФинансирования;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // ДатаПереходаПравТребованийС
				    MSWordDoc.Bookmarks("ДатаПереходаПравТребованийС").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаПереходаПравТребований;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // ДатаПереходаПравТребованийНаМомент
				     MSWordDoc.Bookmarks("ДатаПереходаПравТребованийНаМомент").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаПереходаПравТребований;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   // СуммаДолгаСоставляет
				    MSWordDoc.Bookmarks("СуммаДолгаСоставляет").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.СуммаДолга);
				  
				   // СуммаДолгаПрописью
				   MSWordDoc.Bookmarks("СуммаДолгаПрописью").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   стрСумма= ЧислоПрописью(спрОбСтруктура.СуммаДолга, "Л=ru_RU;ДП=Истина", "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2");
                   MSWordDoc.Application.Selection.TypeText(стрСумма);
				   
				   
				   // ПросроченныйОД
				   MSWordDoc.Bookmarks("ПросроченныйОД").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ПросроченныйОсновнойДолг);
				   
				   
				   // ПросроченныеПроценты
				   MSWordDoc.Bookmarks("ПросроченныеПроценты").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ПросроченныеПроценты);
				   
				   // Штрафы
				   MSWordDoc.Bookmarks("Штрафы").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.Штрафы);
				   
				   
				   //  Госпошлина
				    MSWordDoc.Bookmarks("Госпошлина").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.Госпошлина);
				   
				   // СуммаДолгаТаблица
				   
				   MSWordDoc.Bookmarks("СуммаДолгаТаблица").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.СуммаДолга);
				
				   
			            MSWord.Visible=0;
						
						//MSWord.Activate();
						
						
						//MSWord.ActivePrinter=имяПринтера;
						
						
					    имяТемп=стрПодкаталог+"\"+имяД+".pdf";	
						
						MSWordDoc.SaveAs(имяТемп,17);
						
						//MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

					
					

				  
				  
			
					КонецЕсли;
					
							
						  
			  Исключение
				  
				    Сообщить("Ошибка----- Печать УведомленияОбУступкеПраваТребования");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

			  КонецПопытки;
			  
			  
		  	
		  
		  КонецЕсли;
	
	
	
	

КонецПроцедуры




&НаКлиенте
Процедура ПечатьЗаявлениеОПроцессуальномПравопреемстве(спрОбСтруктура,исполнитель)

	       видД="ШаблонЗаявлениеОПроцессуальномПравопреемстве";
		   
		   ДвоичныеДанные=ПолучитьФайлИзХран(видД);
		   
		   Если ДвоичныеДанные<>Неопределено  Тогда
			   
			   Попытка
				   
				    имяД=Строка(исполнитель)+"_ЗаявлениеОПроцессуальномПравопреемстве";

					ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);

					
					 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				 
				   MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеСуда);
				   
				   //АдресСуда
				   MSWordDoc.Bookmarks("АдресСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресСуда);
				   
				   //ФИОДолжника
				   MSWordDoc.Bookmarks("ФИОДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 
					//ДолжникаДатаРождения
	  		       MSWordDoc.Bookmarks("ДолжникаДатаРождения").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаРожденияДолжника;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
					//ДолжникАдрес
				   MSWordDoc.Bookmarks("ДолжникАдрес").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресРегистрацииДолжника);
				 
                 
					//СудПоле
				   MSWordDoc.Bookmarks("СудПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеСуда+" ");
				   
				   
				  // НомерДелаВСуде
				   MSWordDoc.Bookmarks("НомерДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерСудебногоДела);
				   
				   //ПервоначальныйКредитор
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				 
				   
				   //ФИОДолжникПоле
				   MSWordDoc.Bookmarks("ФИОДолжникПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 
				   //НомерКредитногоДоговора
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   //ДатаКредитногоДоговора
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
					
				   //ПервоначальныйКредитор_Между
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //НомерЦессии
				   MSWordDoc.Bookmarks("НомерЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				 

				   //ДатаЦессии
				    MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
				   
					//НомерКредитногоДоговора_Между
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_Между
				    MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				  
				   
				   //ПервоначальныйКредитор_М_между
				     MSWordDoc.Bookmarks("ПервоначальныйКредитор_М_между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //ФИОДолжника_Между
				     MSWordDoc.Bookmarks("ФИОДолжника_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 

				   //НомерЦессии_Переход
				    MSWordDoc.Bookmarks("НомерЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   //ДатаЦессии_Переход
				     MSWordDoc.Bookmarks("ДатаЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				
				   
				   //ПервоначальныйКредитор_Также
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Также").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   //НомерДелаВСуде_Прошу
				   MSWordDoc.Bookmarks("НомерДелаВСуде_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерСудебногоДела);
				   
				   //ДатаДелаВСуде
				   MSWordDoc.Bookmarks("ДатаДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаСудебногоДела;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   //ПервоначальныйКредитор_Прошу
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //ФИОДолжника_Прошу
				   MSWordDoc.Bookmarks("ФИОДолжника_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));

				   
				   //НомерКредитногоДоговора_Прошу
				     MSWordDoc.Bookmarks("НомерКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   //ДатаКредитногоДоговора_Прошу
				      MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
				   MSWordDoc.Application.Selection.TypeText(дат);
				  
				   
				   //ПервоначальныйКредитор_Прошу_2
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу_2").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   
				   //НомерЦессии_Приложение
				   MSWordDoc.Bookmarks("НомерЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   
				   //ДатаЦессии_Приложение
				        MSWordDoc.Bookmarks("ДатаЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				

				   //НомерЦессии_Приложение_Выписка
				     MSWordDoc.Bookmarks("НомерЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   
				   //ДатаЦессии_Приложение_Выписка
				          MSWordDoc.Bookmarks("ДатаЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				

				   //ДатаЗаявления
				     MSWordDoc.Bookmarks("ДатаЗаявления").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=ТекущаяДата();
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				        MSWord.Visible=0;
						
						//MSWord.Activate();
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();


					
					
					
			   
			   Исключение
				   Сообщить("Ошибка----- Печать Заявление О Процессуальном Правопреемстве");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

				   
			   КонецПопытки;

	     КонецЕсли; 
	

КонецПроцедуры


&НаКлиенте
Процедура ПечатьЗаявлениеОВыдачеСудебногоПриказа (спрОбСтруктура,исполнитель)

	
	видД="ШаблонЗаявлениеОВыдачеСудебногоПриказа";
		   
		     ДвоичныеДанные=ПолучитьФайлИзХран(видД);
			 
			 Если ДвоичныеДанные<>Неопределено  Тогда
				 
				 Попытка
					 
				  
				    имяД=Строка(исполнитель)+"__ЗаявлениеОВыдачеСудебногоПриказа";

					ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);

					
				 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				
				  MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				  MSWordDoc.Application.Selection.Font.Color = 1;
                  MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.НаименованиеСуда));

				  //АдресСуда
				   MSWordDoc.Bookmarks("АдресСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресСуда);

				   
				   //ФИОДолжника 
				   MSWordDoc.Bookmarks("ФИОДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				   
				   //ДатаРожденияДолжника
				    MSWordDoc.Bookmarks("ДатаРожденияДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаРожденияДолжника;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //МестоРожденияДолжника
				   MSWordDoc.Bookmarks("МестоРожденияДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.МестоРожденияДолжника);
				   
				   //ПаспортНомер
				   MSWordDoc.Bookmarks("ПаспортНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ПаспортныеДанныеДолжника);
				   
				   
				   //ПаспортДатаВыдачи
				   MSWordDoc.Bookmarks("ПаспортДатаВыдачи").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ПаспортДатаВыдачи;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   //АдресРегистрации
				    MSWordDoc.Bookmarks("АдресРегистрации").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресРегистрацииДолжника);
				   
				   
				   //СуммаЗадолженности
				     MSWordDoc.Bookmarks("СуммаЗадолженности").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
					//ГосПошлина
				   MSWordDoc.Bookmarks("ГосПошлина").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ГоспошлинаНаша);
				   
				   //ПервоначальныйКредитор
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   //ФИОДолжника_Между
				     MSWordDoc.Bookmarks("ФИОДолжника_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				   
				   
				   //НомерКредитногоДоговора
				       MSWordDoc.Bookmarks("НомерКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   //ДатаКредитногоДоговора
				     MSWordDoc.Bookmarks("ДатаКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_заключенной
				      MSWordDoc.Bookmarks("ПервоначальныйКредитор_заключенной").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				  
				   //СуммаКредита
				         MSWordDoc.Bookmarks("СуммаКредита").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.СуммаКредита);
				   
				   
				   //ДатаЦессии
				        MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
				   //ПервоначальныйКредитор_ДатаЦессии
				         MSWordDoc.Bookmarks("ПервоначальныйКредитор_ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   //НомерЦессии
				      MSWordDoc.Bookmarks("НомерЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				   
				   
				   //ДатаЦессии_БылЗаключен
				       MSWordDoc.Bookmarks("ДатаЦессии_БылЗаключен").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //НомерКредитногоДоговора_кредитномудого
				         MSWordDoc.Bookmarks("НомерКредитногоДоговора_кредитномудого").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   
				   //ДатаКредитногоДоговора_кредитномудог
				       MSWordDoc.Bookmarks("ДатаКредитногоДоговора_кредитномудог").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_заключенного_межд
				        MSWordDoc.Bookmarks("ПервоначальныйКредитор_заключенного_межд").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   
				   //ФИОДолжника_заключенного_между
				      MSWordDoc.Bookmarks("ФИОДолжника_заключенного_между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				  

				   //ДатаЦессии_уступаемых
				         MSWordDoc.Bookmarks("ДатаЦессии_уступаемых").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

					//ОбщаяСуммаЗадолженностиПоЦессии
			       MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
				   
				   //ОбщаяСуммаЗадолженностиПоЦессии_составля
				    MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии_составля").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
				   //НомерКредитногоДоговора_выполнении
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора_выполнении").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_выполнении
				         MSWordDoc.Bookmarks("ДатаКредитногоДоговора_выполнении").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ФИОДолжника_Прошу_выдать
				         MSWordDoc.Bookmarks("ФИОДолжника_Прошу_выдать").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				  
				   
					//ОбщаяСуммаЗадолженностиПоЦессии_Прошу
					  MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				  
				   //НомерКредитногоДоговора_Прошу
				    MSWordDoc.Bookmarks("НомерКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_Прошу
				          MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_Прошу
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   
				   //ФИОДолжника_Прошу_Взыскать
				   MSWordDoc.Bookmarks("ФИОДолжника_Прошу_Взыскать").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				   
				   
				   //СуммаГоспошлины_Прошу
				      MSWordDoc.Bookmarks("СуммаГоспошлины_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ГоспошлинаНаша);
				 
				   
				   //НомерКредитногоДоговора_Приложение
				      MSWordDoc.Bookmarks("НомерКредитногоДоговора_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   
				   //ДатаКредитногоДоговора_Приложение
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   //НомерЦессии_Приложение
				          MSWordDoc.Bookmarks("НомерЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				   
				   //ДатаЦессии_Приложение
				          MSWordDoc.Bookmarks("ДатаЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ДатаЦессии_Приложение_5
				    MSWordDoc.Bookmarks("ДатаЦессии_Приложение_5").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
					//ДатаЗаявления
				             MSWordDoc.Bookmarks("ДатаЗаявления").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=ТекущаяДата();
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   
				   
				   
				   
				        MSWord.Visible=0;
						
						//MSWord.Activate();
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

					
					
					
				 	
				 
				 Исключение
					 
					  Сообщить("Ошибка----- Печать Заявление О Выдаче Судебного Приказа");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

					 
				 КонецПопытки;
				 
				 
     КонецЕсли; 
	
	

КонецПроцедуры


&НаСервере
Функция ПолучитьФайлИзХран(видДокумента)
	
	 
	   НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию(видДокумента,ИСТИНА);
	 
	     Двоичные=Неопределено;
		 
		 Если НайтиШабл<>Неопределено Тогда
		 
		 	 Если НЕ НайтиШабл.ПУСТАЯ() Тогда  
 
        		Хран=НайтиШабл.ФайлШаблона;
        		Двоичные=Хран.Получить(); 
    			
    		КонецЕсли;
			

		 
		 КонецЕсли; 
    	
			
	  Возврат Двоичные;		
	 

КонецФункции // ()



&НаСервере
Функция ПолучитьСсылкуОбъекта(гуид)

	      стрДляПечати=Новый Структура;
	
		   Для Каждого Менеджер Из Справочники Цикл
			   
			    Попытка
					
					
					НовыйGUID = Новый УникальныйИдентификатор(гуид);

					 ссылкаД = Менеджер.ПолучитьСсылку(НовыйGUID);
					 
					
					
					Если ссылкаД.ПолучитьОбъект() <> Неопределено Тогда
						
						стрДляПечати.Вставить("ссылкаДокПечати", ссылкаД);
						
						 Если Строка(Менеджер)="СправочникМенеджер.ЗаявлениеОПроцессуальномПравопреемстве"  Тогда
	 
						    
							
							стрДляПечати.Вставить("названиеСправочника", "ЗаявлениеОПроцессуальномПравопреемстве");
							

							 
						КонецЕсли;
						
						 Если Строка(Менеджер)="СправочникМенеджер.ЗаявлениеОВыдачеСудебногоПриказа"  Тогда
	 
						    
							
							стрДляПечати.Вставить("названиеСправочника", "ЗаявлениеОВыдачеСудебногоПриказа");
							

							 
						КонецЕсли;
						
						

						
						
				    КонецЕсли;

				
				Исключение
					  Сообщить(" -----");
					
				КонецПопытки;
			   
			   
									
		  КонецЦикла;

	    Возврат стрДляПечати;

КонецФункции // ()

&НаКлиенте
Процедура Тест(Команда)
	// Вставить содержимое обработчика.
	
	ИмяКолонки = Элементы.ТЗ.ТекущийЭлемент.Имя;
	
	ИмяКолонкиСтр = СтрЗаменить(ИмяКолонки,"ТЗ", "");
	
	
	 
	Если флагВозр Тогда
	
	   ТЗ.Сортировать(ИмяКолонкиСтр+" Убыв"); 
	   флагВозр=Ложь;

	   	   
    Иначе		
		
		ТЗ.Сортировать(ИмяКолонкиСтр+" Возр");
        флагВозр=Истина;

		
	КонецЕсли;
	    	
	
КонецПроцедуры

&НаКлиенте
Процедура ДинСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	              парамСтруктура=Новый Структура;
	              парамСтруктура.Вставить("тДоговор", Элемент.ТекущиеДанные.КрДоговор);
				  
				  парамСтруктура.Вставить("тДолжник", Элемент.ТекущиеДанные.ФИОДолжника);
				  
				  парамСтруктура.Вставить("тЦедент", Элемент.ТекущиеДанные.Цедент);
				  
				  парамСтруктура.Вставить("тНомерДоговораЦессии", Элемент.ТекущиеДанные.НомерДоговораЦессии);
				  
				  парамСтруктура.Вставить("тДатаЦессии", Элемент.ТекущиеДанные.ДатаЦессии);
				  
				  парамСтруктура.Вставить("тВидПродукта", Элемент.ТекущиеДанные.ВидПродукта);
				  
				  парамСтруктура.Вставить("тСуммаЗадолженностиПереданная", Элемент.ТекущиеДанные.СуммаЗадолженностиПереданная);
				  
				  парамСтруктура.Вставить("тОтветственныйСотрудник", Элемент.ТекущиеДанные.ОтветственныйСотрудник);
				  
				  
				  
				  
				  // Элемент.ТекущиеДанные.КрДоговор
	  //
	  //            ОткрытьФорму("Обработка.СудебнаяСтадия.Форма.Форма",парамСтруктура,ЭтаФорма);
	  
	  
	               ОткрытьФорму("Справочник.СписокДелКредитногоДоговора.Форма.ФормаСпискаПарам",парамСтруктура,ЭтаФорма); 

				  сервисОткр=Ложь;
				  
				  
				  
				  

	
	
КонецПроцедуры


&НаСервере
Функция НазваниеДокументовРазличные()

	ТабВр= ТБРеестрДляОтправки.Выгрузить();

	
	массивНазваниеДокументов=Новый Массив;

	      	Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
				    | *	
					|ПОМЕСТИТЬ ТВ_ТВ
					|ИЗ
					|&ТабВр КАК ТабВр
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ТВ_ТВ.НазваниеДокумента КАК НазваниеДокумента
					|ИЗ
					|	ТВ_ТВ КАК ТВ_ТВ";
			   Запрос.УстановитьПараметр("ТабВр", ТабВр);
               РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

				
					 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					        
							 массивНазваниеДокументов.Добавить(ВыборкаДетальныеЗаписи.НазваниеДокумента);
					
				     КонецЦикла;

				
				
	    Возврат массивНазваниеДокументов;

КонецФункции // ()


&НаСервере
Функция НомерЦессииРазличные()

	         ТабВр= ТБРеестрДляОтправки.Выгрузить();

	
	массивНомерЦессии=Новый Массив;

	      	Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
				    | *	
					|ПОМЕСТИТЬ ТВ_ТВ
					|ИЗ
					|&ТабВр КАК ТабВр
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ТВ_ТВ.НомерЦессии КАК НомерЦессии
					|ИЗ
					|	ТВ_ТВ КАК ТВ_ТВ";
			   Запрос.УстановитьПараметр("ТабВр", ТабВр);
               РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

				
					 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					        
							 массивНомерЦессии.Добавить(ВыборкаДетальныеЗаписи.НомерЦессии);
					
				     КонецЦикла;

				
				
	    Возврат массивНомерЦессии;

	

КонецФункции // ()




&НаКлиенте
Процедура НастройкаПечатиПакета(Команда)
	
	 Если ТБРеестрДляОтправки.Количество()>0  Тогда
		 
		 
		 структураФильтрПечать=Неопределено;
		 
		  ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляПечати",ЭтотОбъект); 
		  
			  
		 массивНазваниеДокументов= НазваниеДокументовРазличные();
         массивНомерЦессии= НомерЦессииРазличные();
		  
		 данныеНастройкиПечатиСтруктура=Новый Структура;
		 данныеНастройкиПечатиСтруктура.Вставить("НомерЦессии",массивНомерЦессии);
		 данныеНастройкиПечатиСтруктура.Вставить("НазваниеДокумента",массивНазваниеДокументов);
         данныеНастройкиПечатиСтруктура.Вставить("ФильтрУстановлен",ФильтрУстановлен);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечататьКопияДоговораЦессии",ПечататьКопияДоговораЦессии);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечататьСвидетельстваОРегистрацииЮрЛица",ПечататьСвидетельстваОРегистрацииЮрЛица);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьВыпискаИзРеестра",ПечатьВыпискаИзРеестра);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьДоверенностьПредставителя",ПечатьДоверенностьПредставителя);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьДосьеКлиента",ПечатьДосьеКлиента);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьКопииУчредительныхДокументовКомпании",ПечатьКопииУчредительныхДокументовКомпании);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав",ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьКопияРеестраУступаемыхПрав",ПечатьКопияРеестраУступаемыхПрав);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьКопияУведомленияОбУступкеПраваТребования",ПечатьКопияУведомленияОбУступкеПраваТребования);
		 данныеНастройкиПечатиСтруктура.Вставить("ПечатьНаименование",ПечатьНаименование);
		 
		 данныеНастройкиПечатиСтруктура.Вставить("ДоговорЦессииФильтр",ДоговорЦессииФильтр);
		 данныеНастройкиПечатиСтруктура.Вставить("НазваниеДокументаФильтр",НазваниеДокументаФильтр);
		 
		 
					 
	     ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаНастройкиПечати", данныеНастройкиПечатиСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	

		 
		 
		 
	 	
	 
	 КонецЕсли;
	
	 
	
	
КонецПроцедуры


&НаКлиенте
Процедура ДанныеДляПечати(РезультатЗакрытия,ДополнительныеПараметры) Экспорт

	
	    
	
		 Если РезультатЗакрытия= Неопределено Тогда
		      Возврат;
		
		 Иначе
           структураФильтрПечать=РезультатЗакрытия;
		   ДоговорЦессииФильтр=РезультатЗакрытия.ДоговорЦессии;
		   НазваниеДокументаФильтр=РезультатЗакрытия.НазваниеДокумента;
		   ФильтрУстановлен=РезультатЗакрытия.ФильтрПечатьУстановлен;
		   
		   ПечататьКопияДоговораЦессии=РезультатЗакрытия.ПечататьКопияДоговораЦессии;
		   ПечататьСвидетельстваОРегистрацииЮрЛица=РезультатЗакрытия.ПечататьСвидетельстваОРегистрацииЮрЛица;
		   
		   ПечатьВыпискаИзРеестра=РезультатЗакрытия.ПечатьВыпискаИзРеестра;
		   
		   ПечатьДоверенностьПредставителя=РезультатЗакрытия.ПечатьДоверенностьПредставителя;
		   
		   ПечатьДосьеКлиента=РезультатЗакрытия.ПечатьДосьеКлиента;
		   
		   ПечатьКопииУчредительныхДокументовКомпании=РезультатЗакрытия.ПечатьКопииУчредительныхДокументовКомпании;
		   ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав=РезультатЗакрытия.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав;
		   
		   ПечатьКопияРеестраУступаемыхПрав=РезультатЗакрытия.ПечатьКопияРеестраУступаемыхПрав;
		   ПечатьКопияУведомленияОбУступкеПраваТребования=РезультатЗакрытия.ПечатьКопияУведомленияОбУступкеПраваТребования;
		   
		   ПечатьНаименование=РезультатЗакрытия.ПечатьНаименование;
		   
		   АдресатСуд=РезультатЗакрытия.АдресатСуд;
		   АдресатДолжник=РезультатЗакрытия.АдресатДолжник;
		   АдресатБанк=РезультатЗакрытия.АдресатБанк;
		   
		   
		   
			 
	     КонецЕсли;
			  
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВПакете(Команда)
	
	
	           естьФильтр=Ложь;
			 Если структураФильтрПечать<>Неопределено Тогда
				       естьФильтр=Истина;
			 КонецЕсли;

	           
	        СписокФайлов.Очистить();
			
			
			
	
	        Для каждого стр Из ТБРеестрДляОтправки Цикл
				
					срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);
				
					

			    	 Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
			    	         стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
							 
							 Для каждого файлстр Из стрФайлыМассив Цикл
								 
								  строкаПуть= ПолучитьПутьКФайлу(файлстр);
								  
								  //Олег_ЗаявлениеОПроцессуальномПравопреемстве
								  //Олег_ВыпискаИзРеестра

								  
								 новаястр=СписокФайлов.Добавить();
								 новаястр.ИмяФайла=файлстр;
								 
								 инд=Найти(файлстр,"ВыпискаИзРеестра");
								 Если инд<>0 Тогда
								   новаястр.НазваниеДокумента="Выписка Из Реестра";
							   Иначе
								   новаястр.НазваниеДокумента="Заявление О Процессуальном Правопреемстве";
								 
								 КонецЕсли; 
								 
								 
								 
								 //новаястр.НазваниеДокумента=
								 
								 новаястр.Путь=строкаПуть;
								 новаястр.Договор=стр.КредитныйДоговор;
							 
							 КонецЦикла;
							 
							 
					 //  копия договора цессии    стр.КредитныйДоговор
						 Если естьФильтр   Тогда
							 
							 
							 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								 
								 номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		    		            ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
		   
		                        стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия договора цессии";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								 
							 Иначе	 
								 
								    
							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							 
								 
								 номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		   
		   
		                        ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
		   
		                        стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
								
								    
									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия договора цессии";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;
								 
							 
							 КонецЕсли;

								 
							 
							 КонецЕсли;
							 
							 
						 Иначе	 
							 
								 номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		   
		   
		                        ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
		   
		                        стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
								
								    
									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия договора цессии";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;
						 
						 КонецЕсли;
						 
						 //////////
						 
						 Если естьФильтр   Тогда
							 
							 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								     стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
									 
									    
									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Реестра Уступаемых Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								 
							 Иначе	 
								 
								 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							 
								  //ПечатьРеестраУступаемыхПрав(стр.КредитныйДоговор);

								     номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);

									 ссылкаДок= НайтиКопияРеестраУступаемыхПрав(номерДог);
									   
									 стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
									 
									    
									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Реестра Уступаемых Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

									 
							 
							 КонецЕсли;

								 
								 
							 КонецЕсли;	 
							 
							 							 
							 
						 Иначе	 
							 
							     стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
									 
									    
									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Реестра Уступаемых Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;
						 
						 КонецЕсли;
						 
                         
						 ////////
						 
						 //Печать свидетельства о регистрации Юр.лица
						  Если естьФильтр   Тогда
							Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								
								 ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 
		                            массивФайлов=ПолучитьФайлыСвидетельстваОРегистрацииЮрЛица(ссылкаДок);
		                            Для каждого файлстр Из массивФайлов Цикл
										 
										  //строкаПуть= ПолучитьПутьКФайлу(файлстр);
										 строкаПуть="В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр.ИмяФайла;
										 новаястр.Путь=строкаПуть;
										 
										 новаястр.НазваниеДокумента="Копия Свидетельства О Регистрации ЮрЛица";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								
							Иначе	
								
								     Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьСвидетельстваОРегистрацииЮрЛица И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							       ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 
		                            массивФайлов=ПолучитьФайлыСвидетельстваОРегистрацииЮрЛица(ссылкаДок);
		                            Для каждого файлстр Из массивФайлов Цикл
										 
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр.ИмяФайла;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Свидетельства О Регистрации ЮрЛица";
										 новаястр.Договор=стр.КредитныйДоговор;

	 
									 КонецЦикла;
							 
							 КонецЕсли;

								
						    КонецЕсли;  
							  
														 
							 
						 Иначе	 
							 
							     ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 
		                            массивФайлов=ПолучитьФайлыСвидетельстваОРегистрацииЮрЛица(ссылкаДок);
		                            Для каждого файлстр Из массивФайлов Цикл
										 
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр.ИмяФайла;
										 новаястр.Путь=строкаПуть;
										 
										 новаястр.НазваниеДокумента="Копия Свидетельства О Регистрации ЮрЛица";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;
							   
						 
						 КонецЕсли;
 
						 //////
						 
						 // Печать копии платежного поручения подтверждающего оплату по договору уступки прав
						 Если естьФильтр   Тогда
							 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								      номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		                           ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
			 		               стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
                                    Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Платежного Поручения По Договору Уступки Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								 
							 Иначе	 
								  Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
								 
								   номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		                           ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
			 		               стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
                                    Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Платежного Поручения По Договору Уступки Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								 
							 	   
							 КонецЕсли;

								 
							 КонецЕсли;
							 
														 
							 
						 Иначе	 
							 
							     номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		                           ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
			 		               стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
                                    Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Платежного Поручения По Договору Уступки Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								 

					 
						 КонецЕсли;
 
						 
						 ////////
							 
						 // Доверенность представителя
						 Если естьФильтр   Тогда
							 
							 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								    ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 		                  массивФайлов=ПолучитьФайлыДоверенностьПредставителя(ссылкаДок,стр.Исполнитель);

								    Для каждого файлстр Из массивФайлов Цикл
										   А=0;
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 
										 новаястр.ИмяФайла=файлстр.ИмяФайла;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Доверенность Представителя";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								 
							 Иначе
								 
								    Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							      ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 		                  массивФайлов=ПолучитьФайлыДоверенностьПредставителя(ссылкаДок,стр.Исполнитель);

								    Для каждого файлстр Из массивФайлов Цикл
										 
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр.ИмяФайла;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Доверенность Представителя";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

							 	   
							 
							 КонецЕсли;

								 
								 
					    	 КонецЕсли;
								 
							 
														 
						 Иначе	 
							 
							     ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		 		                  массивФайлов=ПолучитьФайлыДоверенностьПредставителя(ссылкаДок,стр.Исполнитель);

								    Для каждого файлстр Из массивФайлов Цикл
										 
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр.ИмяФайла;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Доверенность Представителя";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

							 	   
 
						 
						 КонецЕсли;
 
						  
				 КонецЕсли;
				 
	 //////////////////////////////////////
				 
				 
		    	 Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда
		    	          стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);

                           Для каждого файлстр Из стрФайлыМассив Цикл
							 
							  строкаПуть= ПолучитьПутьКФайлу(файлстр);

							 новаястр=СписокФайлов.Добавить();
							 новаястр.ИмяФайла=файлстр;
							 новаястр.Путь=строкаПуть;
							 
							 	 инд=Найти(файлстр,"ВыпискаИзРеестра");
								 Если инд<>0 Тогда
								   новаястр.НазваниеДокумента="Выписка Из Реестра";
							   Иначе
								   новаястр.НазваниеДокумента="Заявление О Выдаче Судебного Приказа";
								 
								 КонецЕсли; 
								 
                              новаястр.Договор=стр.КредитныйДоговор;
						 
						    КонецЦикла;
						 

						   // Печать копии досье клиента
			    		Если естьФильтр   Тогда
							
							Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								   ссылкаДок=НайтиСсылкуНаДосьеКлиента(стр.КредитныйДоговор); 
		 
		                            стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
		 
									Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия досье клиента";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								
							Иначе	
								
								 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДосьеКлиента И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							        ссылкаДок=НайтиСсылкуНаДосьеКлиента(стр.КредитныйДоговор); 
		 
		                            стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
		 
									Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия досье клиента";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

							 
							 КонецЕсли;

							КонецЕсли;	
							
														 
						 Иначе	 
							 
							    ссылкаДок=НайтиСсылкуНаДосьеКлиента(стр.КредитныйДоговор); 
		 
		                            стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
		 
									Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия досье клиента";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;
						 
						 КонецЕсли;

						 
						 
						 		     
			        //  копия договора цессии    стр.КредитныйДоговор
					Если естьФильтр   Тогда
						
						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
							   номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		    		   
								    ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
								   
								    стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
									
									Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Договора Цессии";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

							
						Иначе	
							   	 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							         номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		    		   
								    ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
								   
								    стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
									
									Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Договора Цессии";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;
				 	  

							 
							 КонецЕсли;
							 

							
						КонецЕсли;
							 
					 Иначе	 
							      номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
		    		   
								    ссылкаДок= НайтиДокументыЦессииКопияДоговорЦессии(номерДог);
								   
								    стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
									
									Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Договора Цессии";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

						 
						 КонецЕсли;
						 
							 ////////

					// Печать копии платежного поручения подтверждающего оплату по договору уступки прав
						Если естьФильтр   Тогда
							
							Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								  номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
								   
						    	   ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
								   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);

								   Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Платежного Поручения По Договору Уступки Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								
							Иначе
								
								  Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							       номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
								   
						    	   ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
								   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);

								   Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Платежного Поручения По Договору Уступки Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								   
								   
							 
							 КонецЕсли;

								
								
							КонецЕсли;
	
								
							
														 
						 Иначе	 
							 
							   номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
								   
						    	   ссылкаДок= НайтиКопииПлатежногоПорученияПоДоговоруУступкиПрав(номерДог);
								   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);

								   Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Платежного Поручения По Договору Уступки Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

						 
						 КонецЕсли;
						 
						 
						    // Печать учредительных документов компании
							Если естьФильтр   Тогда
								
							Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								
								 ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		                            массивФайлов= ПолучитьФайлыУчредительныеДокументы(ссылкаДок);  

									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Учредительные Документы";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								
							Иначе
								
									
							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопииУчредительныхДокументовКомпании И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							 
							 	    ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		                            массивФайлов= ПолучитьФайлыУчредительныеДокументы(ссылкаДок);  

									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										  новаястр.НазваниеДокумента="Учредительные Документы";
										  новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

							 
							 КонецЕсли;

								
							КонецЕсли;
	
								
														 
						 Иначе	 
							 
							      ссылкаДок=ПолучитьСсылкуДокументыФорвард();
		                            массивФайлов= ПолучитьФайлыУчредительныеДокументы(ссылкаДок);  

									 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= "В базе";

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Учредительные Документы";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;



						 
						 КонецЕсли;
						 
						 
					   	  
						 
						 
						  // "Уведомление Об Уступке Права Требования
						Если естьФильтр   Тогда
							
							Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								  номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);

								  новаястр=СписокФайлов.Добавить();
                                  новаястр.ИмяФайла="Шаблон Уведомление Об Уступке Права Требования";
							      новаястр.Путь="Шаблон Уведомление Об Уступке Права Требования";
							  	  новаястр.НазваниеДокумента="Уведомление Об Уступке Права Требования";
								  новаястр.Договор=стр.КредитныйДоговор;
 
                                    								
								
							Иначе	
								
								 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							        номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);

									 новаястр=СписокФайлов.Добавить();
                                  новаястр.ИмяФайла="Шаблон Уведомление Об Уступке Права Требования";
							      новаястр.Путь="Шаблон Уведомление Об Уступке Права Требования";
							  	  новаястр.НазваниеДокумента="Уведомление Об Уступке Права Требования";
								  новаястр.Договор=стр.КредитныйДоговор;

									
								  КонецЕсли;

								
								
						    КонецЕсли;
	
							
														 
						 Иначе	 
							 
						          номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);
								 новаястр=СписокФайлов.Добавить();
                                  новаястр.ИмяФайла="Шаблон Уведомление Об Уступке Права Требования";
							      новаястр.Путь="Шаблон Уведомление Об Уступке Права Требования";
							  	  новаястр.НазваниеДокумента="Уведомление Об Уступке Права Требования";
								  новаястр.Договор=стр.КредитныйДоговор;
 

								 
						 
						 КонецЕсли;

						 
						 
						 
						 
						 
						 
						 

						 				 	    
						Если естьФильтр   Тогда
							
							Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
								  номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);

								   ссылкаДок= НайтиКопияРеестраУступаемыхПрав(номерДог);
								   
								   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
								   
							 	    	 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Реестра Уступаемых Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

								
								
							Иначе	
								
								 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
							        номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);

								   ссылкаДок= НайтиКопияРеестраУступаемыхПрав(номерДог);
								   
								   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
								   
							 	    	 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Реестра Уступаемых Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

										 
									 КонецЦикла;

							 
							 КонецЕсли;

								
								
						    КонецЕсли;
	
							
														 
						 Иначе	 
							 
						            номерДог= НайтиДоговорЦессии(стр.КредитныйДоговор);

								   ссылкаДок= НайтиКопияРеестраУступаемыхПрав(номерДог);
								   
								   стрФайлыМассив= ПолучитьПрисоединенныеФайлы(ссылкаДок);
								   
							 	    	 Для каждого файлстр Из стрФайлыМассив Цикл
										 
										  строкаПуть= ПолучитьПутьКФайлу(файлстр);

										 новаястр=СписокФайлов.Добавить();
										 новаястр.ИмяФайла=файлстр;
										 новаястр.Путь=строкаПуть;
										 новаястр.НазваниеДокумента="Копия Реестра Уступаемых Прав";
										 новаястр.Договор=стр.КредитныйДоговор;

									 
									 КонецЦикла;

						 
						 КонецЕсли;
						  
						  
				 КонецЕсли;
			
	КонецЦикла;
				 
		 
		 
		 ТабДокумент= ПолучитьМакетСформироватьНаСервере();
		 
		 ТабДокумент.Показать("Файлы в пакете");

		 
	 	
КонецПроцедуры



&НаСервере
Функция ПолучитьМакетСформироватьНаСервере()
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб=Истина;
	ТабДокумент.ТолькоПросмотр=Истина;

	
	ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
    Макет =  ОтчетОбъект.ПолучитьМакет("МакетПакетПечать"); 
	
	//ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
  	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	
	ТабДокумент.Вывести(ОбластьШапка);

	Для каждого стр  Из СписокФайлов Цикл
		ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
		
		ОбластьСтрока.Параметры.Файл=стр.ИмяФайла;
        ОбластьСтрока.Параметры.ПутьКФайлу=стр.Путь; 
		ОбластьСтрока.Параметры.НазваниеДокумента=стр.НазваниеДокумента;
		ОбластьСтрока.Параметры.Договор=стр.Договор;
		
		
		 ТабДокумент.Вывести(ОбластьСтрока);
		
	
	КонецЦикла;
	

	 Возврат  ТабДокумент;

	
	
КонецФункции

&НаКлиенте
Процедура ТЗПоискВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	             А=0;  
	
	             парамСтруктура=Новый Структура;
	              парамСтруктура.Вставить("тДоговор", Элемент.ТекущиеДанные.КрДоговор);
				  
				  парамСтруктура.Вставить("тДолжник", Элемент.ТекущиеДанные.ФИОДолжника);
				  
				  парамСтруктура.Вставить("тЦедент", Элемент.ТекущиеДанные.Цедент);
				  
				  парамСтруктура.Вставить("тНомерДоговораЦессии", Элемент.ТекущиеДанные.НомерДоговораЦессии);
				  
				  парамСтруктура.Вставить("тДатаЦессии", Элемент.ТекущиеДанные.ДатаЦессии);
				  
				  парамСтруктура.Вставить("тВидПродукта", Элемент.ТекущиеДанные.ВидПродукта);
				  
				  парамСтруктура.Вставить("тСуммаЗадолженностиПереданная", Элемент.ТекущиеДанные.СуммаЗадолженностиПереданная);
				  
				  парамСтруктура.Вставить("тОтветственныйСотрудник", Элемент.ТекущиеДанные.ОтветственныйСотрудник);
				  
				  
				  
				  
				  // Элемент.ТекущиеДанные.КрДоговор
	  //
	  //            ОткрытьФорму("Обработка.СудебнаяСтадия.Форма.Форма",парамСтруктура,ЭтаФорма);
	  
	  
	               ОткрытьФорму("Справочник.СписокДелКредитногоДоговора.Форма.ФормаСпискаПарам",парамСтруктура,ЭтаФорма); 

				  сервисОткр=Ложь;
				  

	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьГруппу(Команда)
	
	 
	  	 
    ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляГруппыДоговоров",ЭтотОбъект); 

	ВыделенныеСтрокиМассив = Элементы.ДинСписок.ВыделенныеСтроки;
	
 	 данныеГруппаДоговоровСтруктура=Новый Структура;
	 данныеГруппаДоговоровСтруктура.Вставить("данныеГруппаДоговоровСтруктура",ВыделенныеСтрокиМассив);
	 
	 данныеГруппаДоговоровСтруктура.Вставить("Исполнитель",ПользовательТк);
	 данныеГруппаДоговоровСтруктура.Вставить("ИзИсторииБД", Ложь);
	 
	 
	 ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаСоздатьГруппу",данныеГруппаДоговоровСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
	//Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Страница2;
	
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ДанныеДляГруппыДоговоров(РезультатЗакрытия,ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия= Неопределено Тогда
	     Возврат;
		
	
	Иначе
		
		
		 ПриСозданииНаСервере(Ложь, Ложь);
		
		
	     ОповеститьОбИзменении(РезультатЗакрытия.ссылкаСпр);

		
				
		
		Элементы.ГруппаДоговоровЮрист.Обновить(); 
		
		Элементы.ДинСписок.Обновить(); 
		
				
		ЭтаФорма.ОбновитьОтображениеДанных(Элементы.ДинСписок);

		Пробаобновить();

			
	

		
    КонецЕсли;		
		
		
КонецПроцедуры


&НаСервере
Процедура Пробаобновить()

	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементОформления = ДинСписок.УсловноеОформление.Элементы.Добавить();     
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("КрДоговор");   
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;    
	ЭлементОтбора.ПравоеЗначение = ДоговораВгруппе();
	ЭлементОтбора.Использование  = Истина;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Аквамарин);

	
	
	
	
  	

КонецПроцедуры




&НаКлиенте
Процедура ГруппаДоговоровЮристВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	     текстр=Элементы.ГруппаДоговоровЮрист.ТекущиеДанные;      	  	 
         ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляГруппыДоговоровСписок",ЭтотОбъект); 
      
		  данныеГруппыДоговоровСтруктура=Новый Структура;
          данныеГруппыДоговоровСтруктура.Вставить("ГруппаСсылка",текстр.Ссылка);
		  
		  данныеГруппыДоговоровСтруктура.Вставить("Сотрудник",ПользовательТк);

		 
          ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаДоговораГруппы",данныеГруппыДоговоровСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		 
	
	      
	
	
КонецПроцедуры


&НаКлиенте
Процедура ДанныеДляГруппыДоговоровСписок(РезультатЗакрытия,ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия= Неопределено Тогда
	     Возврат;
		
	
	Иначе
		
		
		Элементы.ГруппаДоговоровЮрист.Обновить(); 
		
		
		
		//ЭтаФорма.Прочитать();
		//
		//ЭтаФорма.Записать();
		//
		
    КонецЕсли;		
		
		
КонецПроцедуры

	  
&НаСервере
Функция ПолучитьСсылкуНадоговорИзУдГруппы(ссылкаГр)

	           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГруппыДоговоровЮристТЧ.КрДоговор КАК КрДоговор
		|ИЗ
		|	Справочник.ГруппыДоговоровЮрист.ТЧ КАК ГруппыДоговоровЮристТЧ
		|ГДЕ
		|	ГруппыДоговоровЮристТЧ.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ссылкаГр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	крДоговор=ВыборкаДетальныеЗаписи.КрДоговор;
	
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрСведенийДляНачальныйРабочийСтолЮристы.КрДоговор.Ссылка КАК КрДоговорСсылка
		|ИЗ
		|	РегистрСведений.РегистрСведенийДляНачальныйРабочийСтолЮристы КАК РегистрСведенийДляНачальныйРабочийСтолЮристы
		|ГДЕ
		|	РегистрСведенийДляНачальныйРабочийСтолЮристы.КрДоговор = &КрДоговор";
	
	Запрос.УстановитьПараметр("КрДоговор", крДоговор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		ссылкаКрд=ВыборкаДетальныеЗаписи.КрДоговорСсылка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	
	
	
	
	
	Возврат ссылкаКрд;
	

КонецФункции // ()



&НаКлиенте
Процедура УдалитьГруппу(Команда)
	
	    текстр=Элементы.ГруппаДоговоровЮрист.ТекущиеДанные;
	
		
		 массивКрДог= ВернутьОбъект(текстр.Ссылка);

		 Для каждого стр Из массивКрДог Цикл
		 
			 
			  ПробаобновитьСтр(стр);

		 
		 КонецЦикла;
		
	 	УдалитьГруппуНаСервере(текстр.Ссылка);

		
		Элементы.ГруппаДоговоровЮрист.Обновить();
		
	  		
		
	
КонецПроцедуры




&НаСервере
Процедура ПробаобновитьСтр(крдог)

	
	//УсловноеОформление.Элементы.Очистить();
	
	ЭлементОформления = ДинСписок.УсловноеОформление.Элементы.Добавить();     
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("КрДоговор");   
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;    
	ЭлементОтбора.ПравоеЗначение = крдог;
	ЭлементОтбора.Использование  = Истина;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Белый);

  	

КонецПроцедуры



&НаСервере
Функция ВернутьОбъект(ссылкаГруппа)
	
	массивКрДог=Новый Массив;
	
	  об=ссылкаГруппа.ПолучитьОбъект();

	  инд=0;
      Для каждого стр Из об.ТЧ Цикл
		  
		 массивКрДог.Добавить(стр.КрДоговор); 
	  	
	  
	  КонецЦикла;	  
	  
	
  Возврат массивКрДог; 	 
	

КонецФункции // ()





&НаСервере
Процедура УдалитьГруппуНаСервере(ссылкаГруппа)

	       об=ссылкаГруппа.ПолучитьОбъект();
		   
		   
		   
		   об.Удалить();
		 		 	

КонецПроцедуры
 

&НаКлиенте
Процедура ОбновитьУдалениеГруппы(стр) 

	
	
	      ОповеститьОбИзменении(стр);

КонецПроцедуры

 
	   
	   
	   

&НаКлиенте
Процедура СоздатьГруппуТЗПоиск(Команда)
	// Вставить содержимое обработчика.
	
	  ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляГруппыДоговоров",ЭтотОбъект); 

	
	
	  ВыделенныеСтрокиМассив = Элементы.ТЗПоиск.ВыделенныеСтроки;
	  
	  
	   массивСтруктур=Новый Массив;
	   
	   
	   Если ВыделенныеСтрокиМассив.Количество()>0 Тогда
		   
		   Попытка
			             стр=0;
			
						 Для каждого стр  Из  Элементы.ТЗПоиск.ВыделенныеСтроки Цикл
							  
							     
							  данныеГруппаДоговоровСтруктура=Новый Структура;
							  
							  //Элементы.ТЗПоиск.ДанныеСтроки(0).ДатаЦессии
							  
							   данныеГруппаДоговоровСтруктура.Вставить("ДатаЗагрузки",  Элементы.ТЗПоиск.ДанныеСтроки(стр).ДатаЗагрузки);
							   
							   
							   
							   данныеГруппаДоговоровСтруктура.Вставить("ВидПродукта",Элементы.ТЗПоиск.ДанныеСтроки(стр).ВидПродукта);
							   данныеГруппаДоговоровСтруктура.Вставить("ДатаЦессии",Элементы.ТЗПоиск.ДанныеСтроки(стр).ДатаЦессии);
							   данныеГруппаДоговоровСтруктура.Вставить("КрДоговор",Элементы.ТЗПоиск.ДанныеСтроки(стр).КрДоговор);
							   данныеГруппаДоговоровСтруктура.Вставить("НомерДоговораЦессии", Элементы.ТЗПоиск.ДанныеСтроки(стр).НомерДоговораЦессии);
							   данныеГруппаДоговоровСтруктура.Вставить("ФИОДолжника", Элементы.ТЗПоиск.ДанныеСтроки(стр).ФИОДолжника);
							   данныеГруппаДоговоровСтруктура.Вставить("Цедент", Элементы.ТЗПоиск.ДанныеСтроки(стр).Цедент);
							   данныеГруппаДоговоровСтруктура.Вставить("СуммаЗадолженностиПереданная",Элементы.ТЗПоиск.ДанныеСтроки(стр).СуммаЗадолженностиПереданная);
							   данныеГруппаДоговоровСтруктура.Вставить("ИзИсторииБД", Ложь);
						 	   массивСтруктур.Добавить(данныеГруппаДоговоровСтруктура); 
						  	
						      
						  КонецЦикла;
						  
						  
						   
						     данныеГруппаДоговоровПоискСтруктура=Новый Структура;
						     данныеГруппаДоговоровПоискСтруктура.Вставить("данныеГруппаДоговоровСтруктура",массивСтруктур);
						     данныеГруппаДоговоровПоискСтруктура.Вставить("Исполнитель",ПользовательТк);
							 
							 

						  

						 
						 
						   ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаСоздатьГруппуИзПоиск",данныеГруппаДоговоровПоискСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
						

	   

				
				
			Исключение
				
				ТекстОшибки = ОписаниеОшибки();
				Сообщить(ТекстОшибки);
				
				
			КонецПопытки;
		   
	  КонецЕсли;
	   
	
	
 КонецПроцедуры
 
 
 
 
  
  

&НаКлиенте
Процедура ЗаполнитьРегистрСведенийПоследнийДокумент(Команда)
	
	  ФункцииДляОтчетов.ДанныеПоследнегоДокументаПоДоговору();
	  ФункцииДляОтчетов.СписокДелКредитногоДоговораУстановитьДатаПоследнегоПлатежа();
	
	 
	 Сообщить("Ок");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьСписок1" Тогда
		
		 ТБРеестрДляОтправкиЗаполнить();
		 
		 ТБРеестрДляОтправкиАрхивЗаполнить();

		
	КонецЕсли;
	
	
	  Если ИмяСобытия = "ОбновитьГруппуПослеРедактирования" Тогда
		  
		      ПробаобновитьСтр(Параметр);

		  
			 Элементы.ДинСписок.Обновить();
			 
			
			 
			 
			 
			 
	   КонецЕсли;

	

	

	
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПрисоединенныеФайлы(Команда)
	
	 //ПолучитьСсылкуОбъекта(гуид)
	   стрТек=Элементы.ТБРеестрДляОтправки.ТекущиеДанные.ДокументСсылка;
	   
	   
	   Если стрТек<>Неопределено Тогда
	  
			  
		     пармСтр=Новый Структура;
		     пармСтр.Вставить("Владелец",стрТек);
			 пармСтр.Вставить("ВладелецФайла",стрТек);
			 ФормаПрисоедФайлы= ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",пармСтр,стрТек);
	
		
	
  	КонецЕсли;

	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьГруппуВходящие(Команда)
	
	ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляГруппыДоговоров",ЭтотОбъект); 
	
	текСтр=Элементы.ТЗВходящие.ТекущиеДанные;
	
	массивСтруктур=МассивИзДинСписок(текСтр.Шифр);
	
	
	 данныеГруппаДоговоровПоискСтруктура=Новый Структура;
	 данныеГруппаДоговоровПоискСтруктура.Вставить("данныеГруппаДоговоровСтруктура",массивСтруктур);
	 данныеГруппаДоговоровПоискСтруктура.Вставить("Исполнитель",ПользовательТк);
							 
							 
       ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаСоздатьГруппуИзПоиск",данныеГруппаДоговоровПоискСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
	
	
КонецПроцедуры



&НаСервере
Функция МассивИзДинСписок(шифр)

	массивСтруктур=Новый Массив;
	
    Схема = Элементы.ДинСписок.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
    Настройки = Элементы.ДинСписок.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);

	
	 Отбор = Новый Структура();
     Отбор.Вставить("ШифрНазвания", шифр);
					
	  массивСтрок=ТаблицаРезультат.НайтиСтроки(Отбор);
	  
	  
	  Для каждого стр  Из массивСтрок Цикл
	  
		    
		        	          данныеГруппаДоговоровСтруктура=Новый Структура;
							  
							 
							  
							   данныеГруппаДоговоровСтруктура.Вставить("ДатаЗагрузки",  стр.ДатаЗагрузки);
							   
							   
							   
							   данныеГруппаДоговоровСтруктура.Вставить("ВидПродукта",стр.ВидПродукта);
							   данныеГруппаДоговоровСтруктура.Вставить("ДатаЦессии",стр.ДатаЦессии);
							   данныеГруппаДоговоровСтруктура.Вставить("КрДоговор",стр.КрДоговор);
							   данныеГруппаДоговоровСтруктура.Вставить("НомерДоговораЦессии", стр.НомерДоговораЦессии);
							   данныеГруппаДоговоровСтруктура.Вставить("ФИОДолжника", стр.ФИОДолжника);
							   данныеГруппаДоговоровСтруктура.Вставить("Цедент", стр.Цедент);
							   данныеГруппаДоговоровСтруктура.Вставить("СуммаЗадолженностиПереданная",стр.СуммаЗадолженностиПереданная);
							 массивСтруктур.Добавить(данныеГруппаДоговоровСтруктура); 

		  
	  
	  КонецЦикла;
	  
	  
	  
	  
	  
	  Возврат  массивСтруктур;
	
	

КонецФункции // ()

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	       ОповещениеОЗакрытии=Новый ОписаниеОповещения("ФормаЗагрузкиЗакрылась",ЭтотОбъект); 
      
		  данныеГруппыДоговоровСтруктура=Новый Структура;
         
		  
		  данныеГруппыДоговоровСтруктура.Вставить("Сотрудник",ПользовательТк);

		 
          ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаЗагрузитьИзФайла",данныеГруппыДоговоровСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		 
	
	   
	
	
	
КонецПроцедуры



&НаКлиенте
Процедура ФормаЗагрузкиЗакрылась(РезультатЗакрытия,ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия= Неопределено Тогда
	     Возврат;
		
	
	Иначе
		
		
		 ПриСозданииНаСервере(Ложь, Ложь);
		
		
	   

		
				
		
		Элементы.ГруппаДоговоровЮрист.Обновить(); 
		
		Элементы.ДинСписок.Обновить(); 
		
				
		ЭтаФорма.ОбновитьОтображениеДанных(Элементы.ДинСписок);

		Пробаобновить();

			
    КонецЕсли;		
		
		
КонецПроцедуры

&НаСервере
Процедура СкопироватьШаблонНаСервере()
	
	
	
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьШаблон(Команда)
	
	 стрДанных=Элементы.ТаблицаШаблоны.ТекущиеДанные;
	 
	 
		   
	   ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляШаблона",ЭтотОбъект);
	   
	   структураДанные=Новый Структура;
	   
	   структураДанные.Вставить("НаименованиеШаблона",стрДанных.Наименование);
	   структураДанные.Вставить("СсылкаШаблона",стрДанных.СсылканаШаблон);
	   
	   структураДанные.Вставить("Исполнитель",ПользовательТк);
	   
		ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаНазваниеШаблона", структураДанные,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	   

	
	//СкопироватьШаблонНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДанныеДляШаблона(РезультатЗакрытия,ДополнительныеПараметры) Экспорт

	
	    
	
		 Если РезультатЗакрытия= Неопределено Тогда
		      Возврат;
		
		 Иначе
			 
			    ЗаполнитьТаблицуШаблоны();

		 
			 
	     КонецЕсли;
			  
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШаблон(Команда)
	
	 стрДанных=Элементы.ТаблицаШаблоны.ТекущиеДанные;
	 
	 Если НЕ стрДанных.ШаблонИстина Тогда
		 
		  значХран= ПолучитьХранилишеШаблона(стрДанных.СсылканаШаблон);
		   
		  Если значХран<>Неопределено Тогда
			  
			   расш="docx";
			   ИмяПромежуточногоФайла = ПолучитьИмяВременногоФайла(расш);
			   
			    ОбратныйВызов = Новый ОписаниеОповещения("ПолучитьКаталогВременныхФайловЗавершение", ЭтотОбъект);
			    НачатьПолучениеКаталогаВременныхФайлов(ОбратныйВызов);

				
				Адрес= ПоместитьВоВременноеХранилище(значХран,Новый УникальныйИдентификатор);
					  
					    ПараметрыДиалога = Новый ПараметрыДиалогаПолученияФайлов;
						ПараметрыДиалога.ВыборКаталога=Истина;
			            ПараметрыДиалога.Заголовок = "НачатьПомещениеФайлаССервер";
						
						НачатьПолучениеФайлаССервера(Адрес,ИмяПромежуточногоФайла,ПараметрыДиалога);
						
						ИмяВременногоФайлаШаблона=ИмяПромежуточногоФайла;
						ссылкаШаблонРедакируемый=стрДанных.СсылканаШаблон;

						//двДанные=ПолучитьДвДанные(ИмяПромежуточногоФайла);
						
						
						МожноСохрнятьШаблон=Истина;
						  
						  
						

						
						
						 //ЗаписатьФайлВШаблон(стрДанных.СсылканаШаблон,ИмяПромежуточногоФайла);
		   

			   // 		// Удаляем временный файл
			   // 		Попытка
			   // 		   УдалитьФайлы(ИмяПромежуточногоФайла);
			   // 	   Исключение
			   // 		   ТекстОшибки = ОписаниеОшибки();
			   // 		   Сообщить(ТекстОшибки);
			   // 		   
			   // 		КонецПопытки;
			   //
			   
			   
		  КонецЕсли;
		 
	 
	 КонецЕсли;
	 
	
	 //Сообщить(ИмяВременногоФайлаШаблона);
	 
	
КонецПроцедуры
 
 
 

&НаКлиенте
Функция ПолучитьДвДанные(путьФайл)
	
	         
			   
	           ВыбФайл = Новый Файл(путьФайл);	 
					  Если ВыбФайл.Существует() Тогда 
					    Если ВыбФайл.ПолучитьТолькоЧтение() Тогда
					        ВыбФайл.УстановитьТолькоЧтение(Ложь);
					    КонецЕсли;
						
					 	sHell = Новый COMОбъект("Wscript.Shell");
                     	моиДок= sHell.SpecialFolders.Item("MyDocuments");
						  ИмяФайла=моиДок+"\Тест.docx";


						 КаталогКудаКопируем = Новый Файл(ИмяФайла);
						
						//КопироватьФайл(ВыбФайл,КаталогКудаКопируем);	
						 
						 ДвоичныеДанные = Новый ДвоичныеДанные(путьФайл);

						 Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
						 
						 //Если ИмяФайла.Существует() Тогда 
						 //      УдалитьФайлы(ИмяФайла); 
						 //    
						 //КонецЕсли;
						 
						 //ПолучаемФайлНаСервере(Адрес,моиДок);
						 
						 
				 КонецЕсли;
					 
					 
	       
	     
	      
	      		  
		  Возврат Адрес;
	

КонецФункции // ()

&НаСервере
Процедура ПолучаемФайлНаСервере(Адрес,моиДок)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	
		
	
	ПутьКНашемуФайлу = Строка(моиДок) + "\МойФайл.docx"; 
	
	ДвоичныеДанные.Записать(ПутьКНашемуФайлу);
	
	А=0;
	
	//теперь на сервер по данному пути можем с ним работать "ПутьКНашемуФайлу"
	
КонецПроцедуры




&НаСервере
Процедура ЗаписатьФайлВШаблон(ссылкаШаблон,двданные)

	
	  
	  
	    
	  
		//ДвоичныеДанные = Новый ДвоичныеДанные(двданные);

	  
	   Хранилище = Новый ХранилищеЗначения(двданные, Новый СжатиеДанных(9));
	   
	   об=ссылкаШаблон.ПолучитьОбъект();
	   об.ФайлШаблона=Хранилище;
	   
	   об.Записать();
	   а=0;

КонецПроцедуры

 
 
 

&НаКлиенте
Процедура ПолучитьКаталогВременныхФайловЗавершение(ИмяКаталогаВременныхФайлов, ДополнительныеПараметры) Экспорт
	
	ИмяКаталогаВрФ=ИмяКаталогаВременныхФайлов;
	
	
КонецПроцедуры

 
 

&НаСервере
Функция ПолучитьХранилишеШаблона(ссылкаШаблон)

	
      значХран=Неопределено;

	   об=ссылкаШаблон.ПолучитьОбъект();
	   
	   
	   
	   Если об.ФайлШаблона<>Неопределено  Тогда
		 
		  значХран=об.ФайлШаблона.Получить();
	 	
	 
	 КонецЕсли; 
	 
	 
	Возврат значХран; 

	   
	   
	  
	
	

КонецФункции // ()

&НаКлиенте
Процедура СохранитьШаблон(Команда)
	
	Если МожноСохрнятьШаблон Тогда
	      	ссылкаШабл=ссылкаШаблонРедакируемый;
			путьФайла=ИмяВременногоФайлаШаблона;

	    ДвоичныеДанные = Новый ДвоичныеДанные(путьФайла);
		
		
	 	ЗаписатьФайлВШаблон(ссылкаШабл,ДвоичныеДанные);
		
		 ВыбФайл = Новый Файл(путьФайла);	 
	     Если ВыбФайл.Существует() Тогда 
			УдалитьФайлы(путьФайла);
 			 
	     КонецЕсли;     		 
			
			
	  МожноСохрнятьШаблон=Ложь;		
		
	
	КонецЕсли;
	
					
	
	Сообщить("Ок");
	
	
	
	
КонецПроцедуры



&НаКлиенте
Процедура СохранитьВпапку(Команда)
	
	   
	    Если ТБРеестрДляОтправки.Количество()>0 Тогда

			     Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросСохранить",ЭтаФорма);
				 
				 стрТек=Элементы.ТБРеестрДляОтправки.ТекущиеДанные;
				 
				  
				 
		         текст="Сохранить все договора - Да.  Нет - сохранить только выделенные - ";

                 ПоказатьВопрос(Оповещение, текст,РежимДиалогаВопрос.ДаНетОтмена,0,,,); 	
	
			
			
			
	    КонецЕсли;

	
	
	
КонецПроцедуры


&НаСервере
Функция Общназн(спр,стрРек)

	  Возврат  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(спр,стрРек)
	

КонецФункции // ()


Функция АдресБанка(дог)

	адресБ="";
	
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Договоры.Банк.Адрес КАК БанкАдрес
				|ИЗ
				|	Справочник.Договоры КАК Договоры
				|ГДЕ
				|	Договоры.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", дог);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				адресБ=ВыборкаДетальныеЗаписи.БанкАдрес;
				
			КонецЦикла;
			
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	
	 Возврат  адресБ;
	

КонецФункции // ()




&НаКлиенте
Процедура СоздатьPDFфайлСПодписью(ссылкаСпр,стрПуть)

	      
	       
	   структураДанные= ПолучитьШаблонСПодписью(ссылкаСпр);
	   
	   
	    Если структураДанные.ДаСоздать Тогда
			
			//структураДанные.ДоговорСсылка
			MSWord = новый COMОбъект("Word.Application");

			
			 Попытка
				 
				 
				структураКартинка= ПолучитьФайлПодписьПредставителя();
				 
				имяКартинка=Строка(ПользовательТк)+"_"+структураКартинка.ТипФайла;
				
				ИмяФайлаКартинка=Строка(КаталогВременныхФайлов())+имяКартинка;
				
                ВыбранныйФайл = Новый Файл(ИмяФайлаКартинка);
				Если ВыбранныйФайл.Существует() Тогда
					
					УдалитьФайлы(ВыбранныйФайл);
					
				
				КонецЕсли; 
	 
				
				структураКартинка.ДвоичныеДанные.Записать(ИмяФайлаКартинка);
				 
				
				
				 имяД=Строка(ПользовательТк)+"_ЗаявлениеОПроцессуальномПравопреемстве";

				
				 
				 
			   ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".pdf";
				
				ВыбранныйФайл = Новый Файл(ИмяФайла);
				Если ВыбранныйФайл.Существует() Тогда
					
					УдалитьФайлы(ВыбранныйФайл);
					
				
				КонецЕсли; 
	 
				 
				 
			    ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
				ВыбранныйФайл = Новый Файл(ИмяФайла);
				Если ВыбранныйФайл.Существует() Тогда
					
					УдалитьФайлы(ВыбранныйФайл);
					
				
				КонецЕсли; 

				
				
				 структураДанные.ДвШаблон.Записать(ИмяФайла);

				
				  				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				 
				Если  MSWordDoc.Bookmarks.Exists("НаименованиеСуда")  Тогда 
				   MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"НаименованиеСуда")));
				КонецЕсли;
				   
				
					   
				   //АдресСуда
				Если  MSWordDoc.Bookmarks.Exists("АдресСуда")  Тогда   
				   MSWordDoc.Bookmarks("АдресСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"АдресСуда"));
			    КонецЕсли;
			   
				   //ФИОДолжника
				 Если  MSWordDoc.Bookmarks.Exists("ФИОДолжника")  Тогда  
				   MSWordDoc.Bookmarks("ФИОДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"ФИОДолжника")));
				 КонецЕсли;  
				   
					//ДолжникаДатаРождения
				Если  MSWordDoc.Bookmarks.Exists("ДолжникаДатаРождения")  Тогда	
	  		       MSWordDoc.Bookmarks("ДолжникаДатаРождения").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаРожденияДолжника");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				КонецЕсли;   
				   
					//ДолжникАдрес
				Если  MSWordDoc.Bookmarks.Exists("ДолжникАдрес")  Тогда	
				   MSWordDoc.Bookmarks("ДолжникАдрес").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"АдресРегистрацииДолжника"));
				КонецЕсли; 
				
				
				
				
				
					 //////////////
					 
					 //МестоРожденияДолжника
					Если  MSWordDoc.Bookmarks.Exists("МестоРожденияДолжника")  Тогда
					   MSWordDoc.Bookmarks("МестоРожденияДолжника").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"МестоРожденияДолжника"));
					КонецЕсли;  
					 
					
					//ПаспортНомер
					Если  MSWordDoc.Bookmarks.Exists("ПаспортНомер")  Тогда
					   MSWordDoc.Bookmarks("ПаспортНомер").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"ПаспортныеДанныеДолжника"));
					КонецЕсли;  

					
					
					// ПаспортДатаВыдачи
					Если  MSWordDoc.Bookmarks.Exists("ПаспортДатаВыдачи")  Тогда
		  		       MSWordDoc.Bookmarks("ПаспортДатаВыдачи").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   датРож=Общназн(ссылкаСпр,"ПаспортДатаВыдачи");
					   Если датРож<>Дата('00010101') Тогда
					   
					   	     дат= Формат(датРож, "ДЛФ=ДД");
					   
					   Иначе
					   
					   	     дат= "        ";
					   
					   КонецЕсли;
					   
					   
					    						   
						    MSWordDoc.Application.Selection.TypeText(дат);

					   
						//MSWordDoc.Application.Selection.TypeText(дат);
					 КонецЕсли;  
					
					 
					 // КемВыдан
					 Если  MSWordDoc.Bookmarks.Exists("КемВыдан")  Тогда
					   MSWordDoc.Bookmarks("КемВыдан").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   
					    Если Общназн(ссылкаСпр,"КемВыданПаспорт")<>"" Тогда
					         MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"КемВыданПаспорт"));
		   
					   Иначе
					         MSWordDoc.Application.Selection.TypeText("     ");

					   
					   КонецЕсли;

					   
	                
					КонецЕсли;  

					
					
					// ПервоначальныйКредиторЗаголовок
					 Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредиторЗаголовок")  Тогда
					   MSWordDoc.Bookmarks("ПервоначальныйКредиторЗаголовок").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора")+" ");
					КонецЕсли;   

					
					// ПервоначальныйКредиторАдресЗагол
					 Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредиторАдресЗагол")  Тогда
					   MSWordDoc.Bookmarks("ПервоначальныйКредиторАдресЗагол").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.TypeText(АдресБанка(структураДанные.ДоговорСсылка)+" ");
					КонецЕсли;   

					
					// НомерДелаЗаголовок
					  Если  MSWordDoc.Bookmarks.Exists("НомерДелаЗаголовок")  Тогда
					   MSWordDoc.Bookmarks("НомерДелаЗаголовок").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерСудебногоДела")+" ");
					КонецЕсли;   

					//НаименованиеСудаВынес
					  Если  MSWordDoc.Bookmarks.Exists("НаименованиеСудаВынес")  Тогда
					   MSWordDoc.Bookmarks("НаименованиеСудаВынес").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"НаименованиеСуда")));
				     КонецЕсли;

					
					 // НомерДелаВынес
					  Если  MSWordDoc.Bookmarks.Exists("НомерДелаВынес")  Тогда
					   MSWordDoc.Bookmarks("НомерДелаВынес").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерСудебногоДела"));
				     КонецЕсли;

					 
					 // ДатаДелаВынес
					 Если  MSWordDoc.Bookmarks.Exists("ДатаДелаВынес")  Тогда
		  		       MSWordDoc.Bookmarks("ДатаДелаВынес").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   датРож=Общназн(ссылкаСпр,"ДатаСудебногоДела");
					   дат= Формат(датРож, "ДЛФ=ДД");
					   MSWordDoc.Application.Selection.TypeText(дат);
					 КонецЕсли;  
					

					 //ПервоначальныйКредиторУдовлетвор
					  Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредиторУдовлетвор")  Тогда
					   MSWordDoc.Bookmarks("ПервоначальныйКредиторУдовлетвор").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора")+" ");
					КонецЕсли; 
					 
					 
					// ФИОДОЛЖНИКУдовлет
					Если  MSWordDoc.Bookmarks.Exists("ФИОДОЛЖНИКУдовлет")  Тогда
					   MSWordDoc.Bookmarks("ФИОДОЛЖНИКУдовлет").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
	                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"ФИОДолжника")));
					КонецЕсли;
									 
					   
					   // ФИОСотрудника
					  Если  MSWordDoc.Bookmarks.Exists("ФИОСотрудника")  Тогда
					   MSWordDoc.Bookmarks("ФИОСотрудника").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
                       MSWordDoc.Application.Selection.TypeText(ПолучитьФИО());
				     КонецЕсли;

					 
					   
				
					 

					 
					 
					   
					 
					
					////////
					 

				
				
				
				
				
				
				
					//СудПоле
				Если  MSWordDoc.Bookmarks.Exists("СудПоле")  Тогда	
				   MSWordDoc.Bookmarks("СудПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"НаименованиеСуда"))+" ");
				КонецЕсли;   
				   
				  // НомерДелаВСуде
				  Если  MSWordDoc.Bookmarks.Exists("НомерДелаВСуде")  Тогда
				   MSWordDoc.Bookmarks("НомерДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерСудебногоДела"));
			      КонецЕсли;
			   
				   //ПервоначальныйКредитор
				  Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредитор")  Тогда 
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора")+" ");
			     КонецЕсли;
			   
				   
				   //ФИОДолжникПоле
				  Если  MSWordDoc.Bookmarks.Exists("ФИОДолжникПоле")  Тогда 
				   MSWordDoc.Bookmarks("ФИОДолжникПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"ФИОДолжника")));
			     КонецЕсли;
			   
				   //НомерКредитногоДоговора
				  Если  MSWordDoc.Bookmarks.Exists("НомерКредитногоДоговора")  Тогда 
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерКредитногоДоговора"));
				  КонецЕсли; 
				   
				   //ДатаКредитногоДоговора
				  Если  MSWordDoc.Bookmarks.Exists("ДатаКредитногоДоговора")  Тогда 
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаКредитногоДоговора");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				  КонецЕсли; 
					
				   //ПервоначальныйКредитор_Между
				   Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредитор_Между")  Тогда
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора"))+" ");
                   КонецЕсли;
				   
				   
				   //НомерЦессии
				   Если  MSWordDoc.Bookmarks.Exists("НомерЦессии")  Тогда
				   MSWordDoc.Bookmarks("НомерЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерДоговораЦессии")+" ");
				   КонецЕсли;
				   

				   //ДатаЦессии
				   Если  MSWordDoc.Bookmarks.Exists("ДатаЦессии")  Тогда
				    MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаДоговораЦессии");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				   
				   
					//НомерКредитногоДоговора_Между
					Если  MSWordDoc.Bookmarks.Exists("НомерКредитногоДоговора_Между")  Тогда
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерКредитногоДоговора"));
				   КонецЕсли;
				   
				   //ДатаКредитногоДоговора_Между
				   Если  MSWordDoc.Bookmarks.Exists("ДатаКредитногоДоговора_Между")  Тогда
				    MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаКредитногоДоговора");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				   
				   
				   //ПервоначальныйКредитор_М_между
				   Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредитор_М_между")  Тогда
				     MSWordDoc.Bookmarks("ПервоначальныйКредитор_М_между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора")+" ");
                   КонецЕсли;  
				    
				   
				   //ФИОДолжника_Между
				   Если  MSWordDoc.Bookmarks.Exists("ФИОДолжника_Между")  Тогда
				     MSWordDoc.Bookmarks("ФИОДолжника_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"ФИОДолжника")));
				   КонецЕсли;

				   
				   //НомерЦессии_Переход
				   Если  MSWordDoc.Bookmarks.Exists("НомерЦессии_Переход")  Тогда
				    MSWordDoc.Bookmarks("НомерЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерДоговораЦессии")+" ");
				   КонецЕсли;

				   //ДатаЦессии_Переход
				   Если  MSWordDoc.Bookmarks.Exists("ДатаЦессии_Переход")  Тогда
				     MSWordDoc.Bookmarks("ДатаЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаДоговораЦессии");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				
				   
				   //ПервоначальныйКредитор_Также
				   Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредитор_Также")  Тогда
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Также").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора")+" ");
				   КонецЕсли;

				   //НомерДелаВСуде_Прошу
				   Если  MSWordDoc.Bookmarks.Exists("НомерДелаВСуде_Прошу")  Тогда
				   MSWordDoc.Bookmarks("НомерДелаВСуде_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерСудебногоДела"));
				   КонецЕсли;
				   
				   //ДатаДелаВСуде
				   Если  MSWordDoc.Bookmarks.Exists("ДатаДелаВСуде")  Тогда
				   MSWordDoc.Bookmarks("ДатаДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаСудебногоДела");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				   
				   
				   
				    //ДатаДелаВСуде_1
					Если  MSWordDoc.Bookmarks.Exists("ДатаДелаВСуде_1")  Тогда
					 MSWordDoc.Bookmarks("ДатаДелаВСуде_1").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаСудебногоДела");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				   
				  
				    


				   //ПервоначальныйКредитор_Прошу
				   Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредитор_Прошу")  Тогда
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора")+" ");
				   КонецЕсли;

				   
				   //ФИОДолжника_Прошу
				   Если  MSWordDoc.Bookmarks.Exists("ФИОДолжника_Прошу")  Тогда
				   MSWordDoc.Bookmarks("ФИОДолжника_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(Общназн(ссылкаСпр,"ФИОДолжника")));
				   КонецЕсли;

				   
				   //НомерКредитногоДоговора_Прошу
				   Если  MSWordDoc.Bookmarks.Exists("НомерКредитногоДоговора_Прошу")  Тогда
				     MSWordDoc.Bookmarks("НомерКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерКредитногоДоговора"));
				   КонецЕсли;
				 
				   //ДатаКредитногоДоговора_Прошу
				   Если  MSWordDoc.Bookmarks.Exists("ДатаКредитногоДоговора_Прошу")  Тогда
				      MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаКредитногоДоговора");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
				   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				  
				   
				   //ПервоначальныйКредитор_Прошу_2
				   Если  MSWordDoc.Bookmarks.Exists("ПервоначальныйКредитор_Прошу_2")  Тогда
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу_2").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НаименованиеПервоначальногоКредитора")+" ");
				   КонецЕсли;

				   
				   
				   //НомерЦессии_Приложение
				   Если  MSWordDoc.Bookmarks.Exists("НомерЦессии_Приложение")  Тогда
				   MSWordDoc.Bookmarks("НомерЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерДоговораЦессии")+" ");
				   КонецЕсли;

				   
				   //ДатаЦессии_Приложение
				   Если  MSWordDoc.Bookmarks.Exists("ДатаЦессии_Приложение")  Тогда
				        MSWordDoc.Bookmarks("ДатаЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаДоговораЦессии");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				

				   //НомерЦессии_Приложение_Выписка
				   Если  MSWordDoc.Bookmarks.Exists("НомерЦессии_Приложение_Выписка")  Тогда
				     MSWordDoc.Bookmarks("НомерЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Общназн(ссылкаСпр,"НомерДоговораЦессии")+" ");
				   КонецЕсли;

				   
				   //ДатаЦессии_Приложение_Выписка
				   Если  MSWordDoc.Bookmarks.Exists("ДатаЦессии_Приложение_Выписка")  Тогда
				          MSWordDoc.Bookmarks("ДатаЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=Общназн(ссылкаСпр,"ДатаДоговораЦессии");
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				   КонецЕсли;
				

				   ////ДатаЗаявления
				   //Если  MSWordDoc.Bookmarks.Exists("ДатаЗаявления")  Тогда
				   //  MSWordDoc.Bookmarks("ДатаЗаявления").Select();
				   //MSWordDoc.Application.Selection.Font.Color = 1;
				   //датРож=ТекущаяДата();
				   //дат= Формат(датРож, "ДЛФ=ДД");
				   //MSWordDoc.Application.Selection.TypeText(дат);
				   //КонецЕсли;

				   
				   	 //  Тест - вставить файл
					 
					 Если  MSWordDoc.Bookmarks.Exists("ПодписьПр")  Тогда
					   MSWordDoc.Bookmarks("ПодписьПр").Select();
					   MSWordDoc.Application.Selection.Font.Color = 1;
					   
					   Picture =  MSWordDoc.Application.Selection.InlineShapes.AddPicture(ИмяФайлаКартинка);
					   
					   
					  leftPosition = MSWordDoc.Application.Selection.Information(10);

					  topPosition = MSWordDoc.Application.Selection.Information(8);
					   
					 
										   
					   Shape = Picture.ConvertToShape();
					   
					   
					   Shape.Top=topPosition;
					   
					   Shape.Left=leftPosition+180;
					   //Shape.Left=leftPosition+150;


					   
                       Shape.WrapFormat.Type = 5;		
					  					   
					   
					 КонецЕсли;

				   
				   
				    MSWord.Visible=0;
						
						//MSWord.Activate();
						
					//ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".pdf";
					
					
				      имяД="Заявление О Процессуальном Правопреемстве";

				 
				      ИмяФайла=стрПуть+"\"+имяД+".pdf";
				     	
				    	ВыбранныйФайл = Новый Файл(ИмяФайла);
				    	Если ВыбранныйФайл.Существует() Тогда
				    		
				    		УдалитьФайлы(ВыбранныйФайл);
				    		
				    	
				    	КонецЕсли; 

							

						
					MSWordDoc.SaveAs(ИмяФайла,17);
						
					MSWordDoc.Close(0);
						
					MSWord.Application.Quit();
 
				
				
							 
			 
			 Исключение
				 
				 MSWord.Application.Quit();

				 
       		    Сообщить("Ошибка----- Заявление О Процессуальном Правопреемстве");
				ТекстОшибки = ОписаниеОшибки();
				Сообщить(ТекстОшибки);

				 
				 
				 
			 КонецПопытки;
			
			
			
			
		
		КонецЕсли;
	   
	   
	   
	   
	
	   

	

КонецПроцедуры

&НаСервере
Функция ПолучитьШаблонСПодписью(ссылкаСпр)

	    структураДанные=Новый Структура;
	  
	
	     ДвоичныеШаблон=Неопределено;
		 
		 об=ссылкаСпр.ПолучитьОбъект();
		 
		 Если об.ШаблонДляПечати.ЕстьПодпись Тогда
		 
			        об_Шаблон=об.ШаблонДляПечати;
				    Хран=об_Шаблон.ФайлШаблона;
		        	ДвоичныеШаблоне=Хран.Получить(); 
					
					
					структураДанные.Вставить("ДаСоздать",Истина);
					
					структураДанные.Вставить("ДвШаблон",ДвоичныеШаблоне);
					
					структураДанные.Вставить("ДоговорСсылка",об.Владелец);
					
				
			 			
						
			 
		 
		 Иначе
		 
			   структураДанные.Вставить("ДаСоздать",Ложь);
					
		       структураДанные.Вставить("ДвШаблон",ДвоичныеШаблоне);
					
				
			 			

			 
		 
		 КонецЕсли;
		 
				 
		   
	   Возврат  структураДанные;
	

КонецФункции // ()

&НаСервере
Функция ПолучитьФИО()

          Возврат ПользовательТк.ФИО;	
 
КонецФункции // ()






&НаКлиенте
Процедура СохранитьВыпискаИзРеестраВPDF(строкаПуть,имяФайлаВстр,расширФайла,стрПодкаталогПакета)

	
	
	
         MSWord = новый COMОбъект("Word.Application");
	
	      Попытка
			  
			    структураКартинка= ПолучитьФайлПодписьПредставителя();
				 
				имяКартинка=Строка(ПользовательТк)+"_"+структураКартинка.ТипФайла;
				
				ИмяФайлаКартинка=Строка(КаталогВременныхФайлов())+имяКартинка;
				
                ВыбранныйФайл = Новый Файл(ИмяФайлаКартинка);
				Если ВыбранныйФайл.Существует() Тогда
					
					УдалитьФайлы(ВыбранныйФайл);
					
				
				КонецЕсли; 
	 
				
				структураКартинка.ДвоичныеДанные.Записать(ИмяФайлаКартинка);
				 

				
				 //MSWordDoc = MSWord.Documents.Add(строкаПуть);
				 
				
				 
			  //Передаем текущие параметры форм в MSWord
				 //MSWord.Documents.Open(строкаПуть);
				 
				

				 MSWordDoc = MSWord.Documents.Add(строкаПуть,Истина);

				   //MSWordDoc.Activate();
				   
				   
				 
					 //ПодписьПр
				 Если  MSWordDoc.Bookmarks.Exists("ПодписьПр")  Тогда
					   MSWordDoc.Bookmarks("ПодписьПр").Select();
					   //MSWordDoc.Application.Selection.Font.Color = 1;
					   
					   Picture =  MSWordDoc.Application.Selection.InlineShapes.AddPicture(ИмяФайлаКартинка);
					   
					   
					   
					     leftPosition = MSWordDoc.Application.Selection.Information(10);

					  topPosition = MSWordDoc.Application.Selection.Information(8);
					   
					 
										   
					   Shape = Picture.ConvertToShape();
					   
					   
					   Shape.Top=topPosition;
					   
					   Shape.Left=leftPosition+350;
					   //Shape.Left=leftPosition+150;

					   
					   
					   
                       Shape.WrapFormat.Type = 5;					   
						
					   
					 КонецЕсли;

					 
					 
					
				 
				 
					 
					    MSWord.Visible=0;
						
						
						
					
					  //имяД=Строка(ПользовательТк)+"_ВыпискаИзРеестра";

					  имяД="Выписка Из Реестра";

					  
				      ИмяФайла=стрПодкаталогПакета+"\"+имяД+".pdf";
				     	
				    	ВыбранныйФайл = Новый Файл(ИмяФайла);
				    	Если ВыбранныйФайл.Существует() Тогда
				    		
				    		УдалитьФайлы(ВыбранныйФайл);
				    		
				    	
				    	КонецЕсли; 

							

						
					MSWordDoc.SaveAs(ИмяФайла,17);
						
							 
				 
				 
				 MSWordDoc.Close(0);
			     MSWord.Application.Quit();

				 
		  Исключение
			  
			     MSWord.Application.Quit();

				Сообщить("Ошибка-----_ВыпискаИзРеестра ");
				ТекстОшибки = ОписаниеОшибки();
				Сообщить(ТекстОшибки);

				 
			  
		  КонецПопытки;
	
	
	        
				 
	
	
	
	
	

КонецПроцедуры






	
&НаКлиенте
Процедура ПослеОтветаНаВопросСохранить(Результат, Параметры) Экспорт 
	
     путьКаталог= ВыбранныйКаталог ();
	 
	 Если путьКаталог="" Тогда
	 
	 	Возврат;
	 
	 КонецЕсли;

	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
#Область ЕслиДа			
		   		   
		   
		    естьФильтр=Ложь;
			 Если структураФильтрПечать<>Неопределено Тогда
			 
			       естьФильтр=Истина;
			 
			 КонецЕсли;

			 
			  Для каждого стр  Из  ТБРеестрДляОтправки Цикл

									 
					  стрПодкаталогПакета= СоздатьПодкаталогДляКомплекта(путьКаталог,стр.ФИОДолжника,стр.КредитныйДоговор,стр.GUID); 
						 
					 
					  
					  срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);

					  
					  Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
					  
								  
								      стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
		    		    			  Shell = Новый COMОбъект("WScript.Shell");
		    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		    		    			  
		    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
										  
										  
										     строкаПуть= ПолучитьПутьКФайлу(стрМассив);
											 
											 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

											 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
											 
											 КопироватьФайл(строкаПуть,стрПодкаталогПакета+"\"+ имяФайлаПолное);
											 
											 
											 
											 инд=Найти(Строка(стрМассив),"ВыпискаИзРеестра");
											 
											 Если инд>0 Тогда
												 
												  // ВыпискаИзРеестраВ_pdf
												  
												  
												  строкаПуть= ПреобразоватьФайлыСервер.ПолучитьПутьКФайлу(стрМассив);
												  имяД= ПреобразоватьФайлыСервер.ПолучитьИмяФайла(стрМассив);
					 
					                              расширФайла=ПреобразоватьФайлыСервер.ПолучитьРасширениеФайла(стрМассив);
					 
				                                  СохранитьВыпискаИзРеестраВPDF(строкаПуть,имяД,расширФайла,стрПодкаталогПакета);
			                                    
												 
												 
											 
											 КонецЕсли;

										  
										  
										  
											 //строкаПуть= ПолучитьПутьКФайлу(стрМассив);
											 //
											 //структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

											 //имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
											 //
											 //
											 ////инд=Найти(Строка(стрМассив),"ЗаявлениеОПроцессуальномПравопреемстве");
											 //
											 ////Если инд>0 Тогда
											 //    
											 //    КопироватьФайл(строкаПуть,стрПодкаталогПакета+"\"+ имяФайлаПолное);
											 //    
											 //    
											 //
											 ////КонецЕсли;
											       		 
		    		    			  
		    		    			  КонецЦикла;

								СоздатьPDFфайлСПодписью(срДляПечати.ссылкаДокПечати,стрПодкаталогПакета);		   
								
								
								
									  
									  	 
		    		    		 // Доверенность представителя
		    					 Если естьФильтр   Тогда
		    						 
		    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										 СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
										 
		    						Иначе	 
		    							 
		    								 
		    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
		    							        СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
										 
		    							 КонецЕсли;
		 
		    						КонецЕсли;	 
		    							 
		    													 
		    					 Иначе	 
		    							 
										 СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
		    					 
		    					 КонецЕсли;

									  
								 
								 //  копия договора цессии    стр.КредитныйДоговор
			    				  Если естьФильтр   Тогда
			    						 
			    					  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
			    						  
										  

										  СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);

										  
			    					   Иначе  
			    						   
			    						    
			    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											 
											  СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
			    						 
			    						 КонецЕсли;

			    						   
			    					   КонецЕсли;
			     
			    													 
			    						 
			    					 Иначе	 
			    						 
										 
										  СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
			 
			    					 
			    					 КонецЕсли;

									 
									 
									 
							 // Сохранить копии платежного поручения подтверждающего оплату по договору уступки прав
	    					 Если естьФильтр   Тогда
	    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
									 СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
									 
	    							 
	    						 Иначе
	    							 	 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
	    						           СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
									 
	    						         КонецЕсли;

	    							 
	    						 КонецЕсли;	 
	    						 
	    						 
	    												 
	    						 
	    					 Иначе	 
								 
								  СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета);

								  
	    				 
	    					 КонецЕсли;

									 
								  // Сохранить свидетельства о регистрации Юр.лица
	    					  Если естьФильтр   Тогда
	    						  
	    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
									  
	                                   СохранитьСвидетельстваОРегистрацииЮрЛица(стрПодкаталогПакета);
	    							  
	    						  Иначе	 
	    							  
	    							  	  
	    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьСвидетельстваОРегистрацииЮрЛица И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
	    							 
									
										  СохранитьСвидетельстваОРегистрацииЮрЛица(стрПодкаталогПакета);
	    							 
	    							 КонецЕсли;

	    							  
	    						  КонецЕсли;	  
	    						  
	    												 
	    						 
	    					 Иначе	 
	    						    СохранитьСвидетельстваОРегистрацииЮрЛица(стрПодкаталогПакета);
	    						 
	    					 
	    					 КонецЕсли;
		 
								 
							 
							 //  Сохранить  РеестраУступаемыхПрав
							 
							  Если естьФильтр   Тогда
    						 
		    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда

										  СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
										  
		    						  Иначе	  
		    							  
		    							   Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
		    						 
									         СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
		    						 
		    						        КонецЕсли;

		    							  
		    						   КонецЕсли;

		    						 
			    													 
			    						 
			    			 Иначе	 
								 
								         СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
			    					    					 
	    					 КонецЕсли;
    					 

								 
						  
						  
						  
						  
				  КонецЕсли;	  
				  
				  //////
				  
				   Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда

					   
					       стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
    		    			  Shell = Новый COMОбъект("WScript.Shell");
    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

    		    			  
    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

									 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
		    		    					 
											 
												 
										КопироватьФайл(строкаПуть,стрПодкаталогПакета+"\"+ имяФайлаПолное);
									 
									    		    			  
    		    			  КонецЦикла;

					   
							  
							 	 		 
    		    		 // Доверенность представителя
	    					 Если естьФильтр   Тогда
	    						 
	    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
									 
									 СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
	    							 
	    						 Иначе	 
	    							 
	    								 
	    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
	    							 
										  
										  СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
	    							 
	    							 КонецЕсли;
	 
	    						КонецЕсли;	 
	    							 
	    													 
	    					 Иначе	 
								 
								    СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
	    						     
	    					 
	    					 КонецЕсли;
	 
							  
								//  копия договора цессии    стр.КредитныйДоговор
		    				   	Если естьФильтр   Тогда
		    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										
										
										СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
		    							
		    						Иначе	
		    							
		    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
		    						 
											
											СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
		    						 
		    						      КонецЕсли;
		    							
		    						КонецЕсли;	
		    						
		    													 
		    					 Иначе	 
									 
									    СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);

		    					 
		    					 КонецЕсли;
		  
							  
								 
								 
								 
								 // Сохранить копии платежного поручения подтверждающего оплату по договору уступки прав
		    					Если естьФильтр   Тогда
		    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										 
										 СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета); 
										 
		    						Иначе	
		    							 
			    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											   
											  СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета); 
			    						 
			    						 КонецЕсли;
		    							
		    						КонецЕсли;	
		    													 
		    					 Иначе	 
									   
									    СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета); 
										
		    					 
		    					 КонецЕсли;

								 
								 
								 
								  //  Сохранить КопияУведомленияОбУступкеПраваТребования
		    					  Если естьФильтр   Тогда
		    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										  
										  СохранитьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор,стрПодкаталогПакета);
										  
		    						 Иначе	 
		    							 
		    							  	 
		    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияУведомленияОбУступкеПраваТребования И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
										 
										 СохранитьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор,стрПодкаталогПакета);
									 
		    						 КонецЕсли;

		    						 КонецЕсли;	 
		    													 
		    					 Иначе	 
									    СохранитьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор,стрПодкаталогПакета);
		    						    
		    					 
		    					 КонецЕсли;

					   
								 
								 
								    // Сохранить копии досье клиента
			    		    		Если естьФильтр   Тогда
			    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
											СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);

			    							
			    						Иначе
			    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДосьеКлиента И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											  СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);
			    						 
			    						    КонецЕсли;

			    							
			    					  	КонецЕсли;	
			    						
			    													 
			    					 Иначе	 
			    						 
			  							   
										    СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);
			    					 
			    					 КонецЕсли;

					   
									 
									 
									 	// Сохранить учредительных документов компании
			    		    			    
			    						Если естьФильтр   Тогда
			    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
			    							
											СохранитьКопииУчредительныхДокументовКомпании(стрПодкаталогПакета);
			    						Иначе	
			    							
			    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопииУчредительныхДокументовКомпании И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											   
											   СохранитьКопииУчредительныхДокументовКомпании(стрПодкаталогПакета);


			    						 
			    						 КонецЕсли;

			    						КонецЕсли;	
			    							
			    													 
			    					 Иначе	 
			    							
											СохранитьКопииУчредительныхДокументовКомпании(стрПодкаталогПакета);

			    					 
			    					 КонецЕсли;

									 
									 
									 
									 	 Если естьФильтр   Тогда
				    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
												 СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
				    						 Иначе	 
				    							 
				    							  	 
					    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
					    						 
													  
													  СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
					    						 
					    						 КонецЕсли;

				    						 КонецЕсли;	 
				    													 
				    					 Иначе	 
											 
											    СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
				    					 
				    					 КонецЕсли;
    					 

									 
									 
					   
					   
				   КонецЕсли;	   
				  
				   
				   
				   
				  
			  КонецЦикла;
			 
		   
		   
		   
		  
		   
#КонецОбласти  // ЕслиДа		

		   
	Иначе
		
#Область ЕслиНет		
		
          Для каждого стрИнд Из Элементы.ТБРеестрДляОтправки.ВыделенныеСтроки Цикл
						 
	    		  стр= Элементы.ТБРеестрДляОтправки.ДанныеСтроки(стрИнд);
				  
				  
				   стрПодкаталогПакета= СоздатьПодкаталогДляКомплекта(путьКаталог,стр.ФИОДолжника,стр.КредитныйДоговор,стр.GUID); 

				  
				   естьФильтр=Ложь;
    				 Если структураФильтрПечать<>Неопределено Тогда
    				 
    				       естьФильтр=Истина;
    				 
    				 КонецЕсли;
				  
				     срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);
					 
					 
					   Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
					  
								  
								      стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
		    		    			  Shell = Новый COMОбъект("WScript.Shell");
		    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		    		    			  
		    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
		    		    					 
		    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
											 
											 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

											 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
											 
											 КопироватьФайл(строкаПуть,стрПодкаталогПакета+"\"+ имяФайлаПолное);
											 
											 
											 
											 инд=Найти(Строка(стрМассив),"ВыпискаИзРеестра");
											 
											 Если инд>0 Тогда
												 
												  // ВыпискаИзРеестраВ_pdf
												  
												  
												  строкаПуть= ПреобразоватьФайлыСервер.ПолучитьПутьКФайлу(стрМассив);
												  имяД= ПреобразоватьФайлыСервер.ПолучитьИмяФайла(стрМассив);
					 
					                              расширФайла=ПреобразоватьФайлыСервер.ПолучитьРасширениеФайла(стрМассив);
					 
				                                  СохранитьВыпискаИзРеестраВPDF(строкаПуть,имяД,расширФайла,стрПодкаталогПакета);
			                                    
												 
												 
											 
											 КонецЕсли;
											       		 
		    		    			  
		    		    			  КонецЦикла;

								 // Создать pdf  с печатью
								 
								СоздатьPDFфайлСПодписью(срДляПечати.ссылкаДокПечати,стрПодкаталогПакета);	  
									  
									  
									  	 
		    		    		 // Доверенность представителя
		    					 Если естьФильтр   Тогда
		    						 
		    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										 СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
										 
		    						Иначе	 
		    							 
		    								 
		    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
		    							        СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
										 
		    							 КонецЕсли;
		 
		    						КонецЕсли;	 
		    							 
		    													 
		    					 Иначе	 
		    							 
										 СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
		    					 
		    					 КонецЕсли;

									  
								 
								 //  копия договора цессии    стр.КредитныйДоговор
			    				  Если естьФильтр   Тогда
			    						 
			    					  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
			    						  
										  

										  СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);

										  
			    					   Иначе  
			    						   
			    						    
			    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											 
											  СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
			    						 
			    						 КонецЕсли;

			    						   
			    					   КонецЕсли;
			     
			    													 
			    						 
			    					 Иначе	 
			    						 
										 
										  СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
			 
			    					 
			    					 КонецЕсли;

									 
									 
									 
							 // Сохранить копии платежного поручения подтверждающего оплату по договору уступки прав
	    					 Если естьФильтр   Тогда
	    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
									 СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
									 
	    							 
	    						 Иначе
	    							 	 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
	    						           СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
									 
	    						         КонецЕсли;

	    							 
	    						 КонецЕсли;	 
	    						 
	    						 
	    												 
	    						 
	    					 Иначе	 
								 
								  СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета);

								  
	    				 
	    					 КонецЕсли;

									 
								  // Сохранить свидетельства о регистрации Юр.лица
	    					  Если естьФильтр   Тогда
	    						  
	    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
									  
	                                   СохранитьСвидетельстваОРегистрацииЮрЛица(стрПодкаталогПакета);
	    							  
	    						  Иначе	 
	    							  
	    							  	  
	    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьСвидетельстваОРегистрацииЮрЛица И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
	    							 
									
										  СохранитьСвидетельстваОРегистрацииЮрЛица(стрПодкаталогПакета);
	    							 
	    							 КонецЕсли;

	    							  
	    						  КонецЕсли;	  
	    						  
	    												 
	    						 
	    					 Иначе	 
	    						    СохранитьСвидетельстваОРегистрацииЮрЛица(стрПодкаталогПакета);
	    						 
	    					 
	    					 КонецЕсли;
		 
								 
							 
							 //  Сохранить  РеестраУступаемыхПрав
							 
							  Если естьФильтр   Тогда
    						 
		    						  Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда

										  СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
										  
		    						  Иначе	  
		    							  
		    							   Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
		    						 
									         СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
		    						 
		    						        КонецЕсли;

		    							  
		    						   КонецЕсли;

		    						 
			    													 
			    						 
			    			 Иначе	 
								 
								         СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
			    					    					 
	    					 КонецЕсли;
    					 

								 
						  
						  
						  
						  
				  КонецЕсли;	  
				  
				  //////
				  
				   Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда

					   
					       стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
    		    			  Shell = Новый COMОбъект("WScript.Shell");
    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

    		    			  
    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
    		    					 
    		    					 строкаПуть= ПолучитьПутьКФайлу(стрМассив);
    		    					 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

									 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
		    		    					 
									 
									 
									 
												 
										КопироватьФайл(строкаПуть,стрПодкаталогПакета+"\"+ имяФайлаПолное);
									 
									    		    			  
    		    			  КонецЦикла;

					   
							  
							 	 		 
    		    		 // Доверенность представителя
	    					 Если естьФильтр   Тогда
	    						 
	    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
									 
									 СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
	    							 
	    						 Иначе	 
	    							 
	    								 
	    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДоверенностьПредставителя И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
	    							 
										  
										  СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
	    							 
	    							 КонецЕсли;
	 
	    						КонецЕсли;	 
	    							 
	    													 
	    					 Иначе	 
								 
								    СохранитьДоверенностьПредставителя(стр.Исполнитель,стрПодкаталогПакета);
	    						     
	    					 
	    					 КонецЕсли;
	 
							  
								//  копия договора цессии    стр.КредитныйДоговор
		    				   	Если естьФильтр   Тогда
		    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										
										
										СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
		    							
		    						Иначе	
		    							
		    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечататьКопияДоговораЦессии И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
		    						 
											
											СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);
		    						 
		    						      КонецЕсли;
		    							
		    						КонецЕсли;	
		    						
		    													 
		    					 Иначе	 
									 
									    СохранитьКопииДоговораЦессии(стр.КредитныйДоговор,стрПодкаталогПакета);

		    					 
		    					 КонецЕсли;
		  
							  
								 
								 
								 
								 // Сохранить копии платежного поручения подтверждающего оплату по договору уступки прав
		    					Если естьФильтр   Тогда
		    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										 
										 СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета); 
										 
		    						Иначе	
		    							 
			    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияПлатежногоПорученияПодтверждающееОплатуПоДоговоруУступкиПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											   
											  СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета); 
			    						 
			    						 КонецЕсли;
		    							
		    						КонецЕсли;	
		    													 
		    					 Иначе	 
									   
									    СохранитьКопииПлатежногоПорученияПоДоговоруУступкиПрав(стр.КредитныйДоговор,стрПодкаталогПакета); 
										
		    					 
		    					 КонецЕсли;

								 
								 
								 
								  //  Сохранить КопияУведомленияОбУступкеПраваТребования
		    					  Если естьФильтр   Тогда
		    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
										  
										  СохранитьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор,стрПодкаталогПакета);
										  
		    						 Иначе	 
		    							 
		    							  	 
		    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияУведомленияОбУступкеПраваТребования И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
										 
										 СохранитьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор,стрПодкаталогПакета);
									 
		    						 КонецЕсли;

		    						 КонецЕсли;	 
		    													 
		    					 Иначе	 
									    СохранитьКопияУведомленияОбУступкеПраваТребования(стр.КредитныйДоговор,стрПодкаталогПакета);
		    						    
		    					 
		    					 КонецЕсли;

					   
								 
								 
								    // Сохранить копии досье клиента
			    		    		Если естьФильтр   Тогда
			    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
											СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);

			    							
			    						Иначе
			    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьДосьеКлиента И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											  СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);
			    						 
			    						    КонецЕсли;

			    							
			    					  	КонецЕсли;	
			    						
			    													 
			    					 Иначе	 
			    						 
			  							   
										    СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);
			    					 
			    					 КонецЕсли;

					   
									 
									 
									 	// Сохранить учредительных документов компании
			    		    			    
			    						Если естьФильтр   Тогда
			    						Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
			    							
											СохранитьКопииУчредительныхДокументовКомпании(стрПодкаталогПакета);
			    						Иначе	
			    							
			    							 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопииУчредительныхДокументовКомпании И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
			    						 
											   
											   СохранитьКопииУчредительныхДокументовКомпании(стрПодкаталогПакета);


			    						 
			    						 КонецЕсли;

			    						КонецЕсли;	
			    							
			    													 
			    					 Иначе	 
			    							
											СохранитьКопииУчредительныхДокументовКомпании(стрПодкаталогПакета);

			    					 
			    					 КонецЕсли;

									 
									 
									 
									 	 Если естьФильтр   Тогда
				    						 Если структураФильтрПечать.ДоговорЦессии<>стр.НомерЦессии Тогда
												 СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
				    						 Иначе	 
				    							 
				    							  	 
					    						 Если структураФильтрПечать.ДоговорЦессии=стр.НомерЦессии И структураФильтрПечать.ПечатьКопияРеестраУступаемыхПрав И структураФильтрПечать.НазваниеДокумента=стр.НазваниеДокумента Тогда
					    						 
													  
													  СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
					    						 
					    						 КонецЕсли;

				    						 КонецЕсли;	 
				    													 
				    					 Иначе	 
											 
											    СохранитьРеестраУступаемыхПрав(стр.КредитныйДоговор,стрПодкаталогПакета);
				    					 
				    					 КонецЕсли;
    					 

									 
									 
					   
					   
				   КонецЕсли;	   
				  
				   
				   

					 
				  
				  
				  
				  
		   КонецЦикла;		  



#КонецОбласти  // ЕслиНет		
		

    КонецЕсли;		
	
	
	
	
КонецПроцедуры	


&НаКлиенте
Функция СоздатьПодкаталогДляКомплекта(стрКаталог,стрДолжник,стрДоговор,стрИД)

	    
			 должникСтр=Строка(стрДолжник);  
			 договорСтр=Строка(стрДоговор);
			 должникСтр=СтрЗаменить(должникСтр," ","_");
			 
			 договорСтр=СтрЗаменить(договорСтр," ","_");
			 
			 договорСтр=СтрЗаменить(договорСтр,"/","_");
			 договорСтр=СтрЗаменить(договорСтр,"(","_");
			 договорСтр=СтрЗаменить(договорСтр,")","_");
			 
			 индекс=Найти(стрИД,"-");
			 
			 
			 идСтрока=Лев(стрИД,индекс-1);
			 
			

			 
			стрНовыйПодкаталог=стрКаталог+"\"+должникСтр+"_"+договорСтр+"_"+идСтрока;
			 
			КаталогНаДиске = Новый Файл(стрНовыйПодкаталог);
		    Если КаталогНаДиске.Существует() Тогда
				
				 МассивНайденных = НайтиФайлы(стрНовыйПодкаталог, "*.*");
				 
				 Для Каждого стрФайл из МассивНайденных Цикл 
					 
					 Ф = Новый Файл(стрФайл.ПолноеИмя);
					 
					 
					 Ф.УстановитьТолькоЧтение(Ложь);
					 
				 КонецЦикла; 
				
				 УдалитьФайлы(стрНовыйПодкаталог);
				
			
				
			КонецЕсли; 
			
			СоздатьКаталог(стрНовыйПодкаталог);
					 
		Возврат стрНовыйПодкаталог;	 
	

КонецФункции // ()





&НаКлиенте
Функция ВыбранныйКаталог ()
           
	  путьКаталог="";
	  тДиалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	  Если тДиалог.Выбрать() Тогда
		  путьКаталог=тДиалог.Каталог;
		 
			 
			 
	  КонецЕсли; 
	
     Возврат путьКаталог; 
	  
КонецФункции // ()

&НаКлиенте
Процедура УдалитьИзТВРеестрДляОтпр(Команда)
	
	
	   стрТек=Элементы.ТБРеестрДляОтправки.ТекущиеДанные.ДокументСсылка;
	   
	   
	   Если стрТек<>Неопределено Тогда
		   
		         
				  идентСтр=Элементы.ТБРеестрДляОтправки.ТекущаяСтрока;
				  
				  структураДанные=Новый Структура;
				  
				  структураДанные.Вставить("ссылкаДок",стрТек);
				  структураДанные.Вставить("идентификаторСтр",идентСтр);
				  
				   
				  
		          Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросУдалитьИзТБОтправка",ЭтаФорма,структураДанные);
		          текст="Удалить документ - ? - ";

                 ПоказатьВопрос(Оповещение, текст,РежимДиалогаВопрос.ДаНетОтмена,0,КодВозвратаДиалога.Нет,,); 
		   
		   
				//УдалитьПоДокуменСссылка(стрТек);
		  	
		
	
     	КонецЕсли;

  
	   
	   А=0;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеОтветаНаВопросУдалитьИзТБОтправка(Результат, Параметры) Экспорт 

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		СтрокаТаблицы = ТБРеестрДляОтправки.НайтиПоИдентификатору(Параметры.идентификаторСтр);
		
		
		 УдалитьПоДокуменСссылка(Параметры.ссылкаДок);

		 ТБРеестрДляОтправки.Удалить(СтрокаТаблицы);
		
		
	КонецЕсли;
	
	
	
КонецПроцедуры
   

&НаСервере
Процедура УдалитьПоДокуменСссылка(ссылкаДок)

	  об=ссылкаДок.ПолучитьОбъект();
	  
	  об.Удалить();
	

КонецПроцедуры

&НаКлиенте
Процедура СоздатьГруппуИзСостояниеДел(Команда)
	
	 
	 ОповещениеОЗакрытии=Новый ОписаниеОповещения("ДанныеДляГруппыДоговоров",ЭтотОбъект); 

	
	
	  ВыделенныеСтрокиМассив = Элементы.СостояниеДел.ВыделенныеСтроки;
	  
	  
	   массивСтруктур=Новый Массив;

	   Если ВыделенныеСтрокиМассив.Количество()>0 Тогда
		   
		  Попытка
			  
			    Для каждого стрИнд Из Элементы.СостояниеДел.ВыделенныеСтроки Цикл
				
					 стр= Элементы.СостояниеДел.ДанныеСтроки(стрИнд);
					 
					  структурДаннные= НайтиДатаЗагрузкиИСуммаПереданная(стр.Договор);
					  структураЦессия= НайтиДоговорИДатаЦессии(стр.Договор);
					  
					 
					  данныеГруппаДоговоровСтруктура=Новый Структура;
							  
					   	       данныеГруппаДоговоровСтруктура.Вставить("ДатаЗагрузки",  структурДаннные.ДатаЗагрузки);
							   данныеГруппаДоговоровСтруктура.Вставить("ВидПродукта",структурДаннные.ВидПродукта);
							   данныеГруппаДоговоровСтруктура.Вставить("ДатаЦессии",структураЦессия.ДатаЦессии);
							   данныеГруппаДоговоровСтруктура.Вставить("КрДоговор",стр.Договор);
							   данныеГруппаДоговоровСтруктура.Вставить("НомерДоговораЦессии", структураЦессия.НомерДоговораЦессии);
							   данныеГруппаДоговоровСтруктура.Вставить("ФИОДолжника", структурДаннные.ФИОДолжника);
							   данныеГруппаДоговоровСтруктура.Вставить("Цедент", структурДаннные.Цедент);
							 
							   данныеГруппаДоговоровСтруктура.Вставить("СуммаЗадолженностиПереданная",структурДаннные.СуммаЗадолженностиПереданная);
							   
							   // Номер дела ....
							   
							   данныеГруппаДоговоровСтруктура.Вставить("ИзИсторииБД", Истина);
							   данныеГруппаДоговоровСтруктура.Вставить("НомерДела",стр.НомерСудебногоДела);
							   
							   
							   данныеГруппаДоговоровСтруктура.Вставить("Суд",стр.Суд);
							   
							   
							   
							 массивСтруктур.Добавить(данныеГруппаДоговоровСтруктура); 
				
				КонецЦикла;
			  
			  
				 данныеГруппаДоговоровПоискСтруктура=Новый Структура;
			     данныеГруппаДоговоровПоискСтруктура.Вставить("данныеГруппаДоговоровСтруктура",массивСтруктур);
			     данныеГруппаДоговоровПоискСтруктура.Вставить("Исполнитель",ПользовательТк);
						 
				   ОткрытьФорму("Обработка.НачальнаяСтраницаЮристы.Форма.ФормаСоздатьГруппуИзПоиск",данныеГруппаДоговоровПоискСтруктура,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
						
		  
		  Исключение
			  
			  
			    ТекстОшибки = ОписаниеОшибки();
				Сообщить(ТекстОшибки);

		  КонецПопытки; 
		   
		   
		   		   
		   
	   КонецЕсли;
	
	  
	
	
КонецПроцедуры


&НаСервере
Функция НайтиДоговорИДатаЦессии(дог)

	  структураДанные=Новый Структура;
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии,
		|	ДоговорЦессии.НомерДоговора КАК НомерДоговора
		|ИЗ
		|	Справочник.ДоговорЦессии КАК ДоговорЦессии
		|ГДЕ
		|	ДоговорЦессии.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	 Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
	 
	 	    
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				структураДанные.Вставить("ДатаЦессии",ВыборкаДетальныеЗаписи.ДатаЦессии);
				структураДанные.Вставить("НомерДоговораЦессии",ВыборкаДетальныеЗаписи.НомерДоговора);
				
				
			КонецЦикла;

	 
	 Иначе
	          структураДанные.Вставить("ДатаЦессии",Неопределено);
			  структураДанные.Вставить("НомерДоговораЦессии",Неопределено);

	 	
	 
	 КонецЕсли;
		
	 Возврат структураДанные;
	

КонецФункции // ()




&НаСервере
Функция НайтиДатаЗагрузкиИСуммаПереданная(ссылкаДог)
            
	     структураДанные=Новый Структура;
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачальныеДанныеДоговораСрезПервых.Регистратор.Дата КАК РегистраторДата,
		|	НачальныеДанныеДоговораСрезПервых.Регистратор.Банк КАК РегистраторБанк,
		|	НачальныеДанныеДоговораСрезПервых.СуммаЗадолженности КАК СуммаЗадолженности,
		|	НачальныеДанныеДоговораСрезПервых.Договор.Владелец КАК ДоговорВладелец,
		|	НачальныеДанныеДоговораСрезПервых.Договор.ТипКредита КАК ДоговорТипКредита
		|ИЗ
		|	РегистрСведений.НачальныеДанныеДоговора.СрезПервых КАК НачальныеДанныеДоговораСрезПервых
		|ГДЕ
		|	НачальныеДанныеДоговораСрезПервых.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Договор", ссылкаДог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество()>0  Тогда
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			структураДанные.Вставить("ДатаЗагрузки",ВыборкаДетальныеЗаписи.РегистраторДата);
			структураДанные.Вставить("Цедент",ВыборкаДетальныеЗаписи.РегистраторБанк);
			структураДанные.Вставить("СуммаЗадолженностиПереданная",ВыборкаДетальныеЗаписи.СуммаЗадолженности);
			структураДанные.Вставить("ФИОДолжника",ВыборкаДетальныеЗаписи.ДоговорВладелец);
			структураДанные.Вставить("ВидПродукта",ВыборкаДетальныеЗаписи.ДоговорТипКредита);
			
		
	    КонецЦикла;
	
	
	Иначе
	   		структураДанные.Вставить("ДатаЗагрузки",Неопределено);
			структураДанные.Вставить("Цедент",Неопределено);
			структураДанные.Вставить("СуммаЗадолженностиПереданная",Неопределено);
			структураДанные.Вставить("ФИОДолжника",Неопределено);
			структураДанные.Вставить("ВидПродукта",Неопределено);
			
		
	
	КонецЕсли;
	
	
	Возврат структураДанные;
	     
	 

КонецФункции // ()

&НаКлиенте
Процедура ПеренестиВРеестрДляОтправкиАрхив(Команда)
	
	   	Для каждого стрИнд Из Элементы.ТБРеестрДляОтправки.ВыделенныеСтроки Цикл

			  Стр= Элементы.ТБРеестрДляОтправки.ДанныеСтроки(стрИнд);
			  
			  УстановитьФлагPost(Стр.GUID,Стр.ДокументСсылка);
			
			
	    КонецЦикла;
	
		 ТБРеестрДляОтправкиЗаполнить();

		 ТБРеестрДляОтправкиАрхивЗаполнить();

		
		
КонецПроцедуры

&НаКлиенте
Процедура ДокументыДляГАС(Команда)
	
	    Если ТБРеестрДляОтправки.Количество()>0 Тогда

			     Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросСохранитьГАС",ЭтаФорма);
				 
				 стрТек=Элементы.ТБРеестрДляОтправки.ТекущиеДанные;
				 
				  
				 
		         текст="Сохранить все договора - Да.  Нет - сохранить только выделенные - ";

                 ПоказатьВопрос(Оповещение, текст,РежимДиалогаВопрос.ДаНетОтмена,0,,,); 	
	
			
			
	    КонецЕсли;

	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеОтветаНаВопросСохранитьГАС(Результат, Параметры) Экспорт 
	
     путьКаталог= ВыбранныйКаталог ();
	 
	 Если путьКаталог="" Тогда
	 
	 	Возврат;
	 
	 КонецЕсли;

	 Если Результат = КодВозвратаДиалога.Да Тогда
	 
		 Для каждого стр  Из  ТБРеестрДляОтправки Цикл
			 
			  стрПодкаталогПакета= СоздатьПодкаталогДляКомплекта(путьКаталог,стр.ФИОДолжника,стр.КредитныйДоговор,стр.GUID); 
					  
			  срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);

			  Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
				  
				      стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
		    		    			  Shell = Новый COMОбъект("WScript.Shell");
		    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		    		    			  
		    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
										  
										  
										     строкаПуть= ПолучитьПутьКФайлу(стрМассив);
											 
											 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

											 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
											 
											 //КопироватьФайл(строкаПуть,стрПодкаталогПакета+"\"+ имяФайлаПолное);
											 
											 
											 
											 инд=Найти(Строка(стрМассив),"ВыпискаИзРеестра");
											 
											 Если инд>0 Тогда
												 
												  // ВыпискаИзРеестраВ_pdf
												  
												  
												  строкаПуть= ПреобразоватьФайлыСервер.ПолучитьПутьКФайлу(стрМассив);
												  имяД= ПреобразоватьФайлыСервер.ПолучитьИмяФайла(стрМассив);
					 
					                              расширФайла=ПреобразоватьФайлыСервер.ПолучитьРасширениеФайла(стрМассив);
					 
				                                  СохранитьВыпискаИзРеестраВPDF(строкаПуть,имяД,расширФайла,стрПодкаталогПакета);
			                                    
												 
												 
											 
											 КонецЕсли;
											       		 
		    		    			  
		    		    			  КонецЦикла;

						СоздатьPDFфайлСПодписью(срДляПечати.ссылкаДокПечати,стрПодкаталогПакета);		   
												  
				  
			  КонецЕсли;
			  
			  СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);

			  
			 
			 
			 
		 
		 КонецЦикла;

		 
	 
	 Иначе
	 
		   Для каждого стрИнд Из Элементы.ТБРеестрДляОтправки.ВыделенныеСтроки Цикл
						 
	    		  стр= Элементы.ТБРеестрДляОтправки.ДанныеСтроки(стрИнд);

				  
				  стрПодкаталогПакета= СоздатьПодкаталогДляКомплекта(путьКаталог,стр.ФИОДолжника,стр.КредитныйДоговор,стр.GUID); 
					  
				  срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);

				  Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
					  
					      стрФайлыМассив= ПолучитьПрисоединенныеФайлы(срДляПечати.ссылкаДокПечати);
			    		    			  Shell = Новый COMОбъект("WScript.Shell");
			    		                  дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

			    		    			  
			    		    			  Для каждого стрМассив  Из стрФайлыМассив  Цикл
											  
											  
											     строкаПуть= ПолучитьПутьКФайлу(стрМассив);
												 
												 структураДанные= ПолучитьИмяФайлаИРасширение(стрМассив);

												 имяФайлаПолное=структураДанные.Наименование+"."+структураДанные.Расширение; 
												 
												 //КопироватьФайл(строкаПуть,стрПодкаталогПакета+"\"+ имяФайлаПолное);
												 
												 
												 
												 инд=Найти(Строка(стрМассив),"ВыпискаИзРеестра");
												 
												 Если инд>0 Тогда
													 
													  // ВыпискаИзРеестраВ_pdf
													  
													  
													  строкаПуть= ПреобразоватьФайлыСервер.ПолучитьПутьКФайлу(стрМассив);
													  имяД= ПреобразоватьФайлыСервер.ПолучитьИмяФайла(стрМассив);
						 
						                              расширФайла=ПреобразоватьФайлыСервер.ПолучитьРасширениеФайла(стрМассив);
						 
					                                  СохранитьВыпискаИзРеестраВPDF(строкаПуть,имяД,расширФайла,стрПодкаталогПакета);
				                                    
													 
													 
												 
												 КонецЕсли;
												       		 
			    		    			  
			    		    			  КонецЦикла;

									СоздатьPDFфайлСПодписью(срДляПечати.ссылкаДокПечати,стрПодкаталогПакета);		   
													  
					  
				  КонецЕсли;
				  
				  СохранитьДосьеКлиента(стр.КредитныйДоговор,стрПодкаталогПакета);

				  
				  
		   КонецЦикла;

		 
	 
	 КонецЕсли;
	 
	 
	 
	 
	 
	 
КонецПроцедуры
   
   




входящиеОткр=Ложь;
сервисОткр=Ложь;
флагВозр=Ложь;
СтраницаШаблоныОткр=Ложь;





