
&НаКлиенте
Перем ИнфОСудеОткр, ссылкаСпрВкладкаСудебнаяСтадия, ЗадолженностьОткр,ТекСтрокаТБД, СервисОткр;




&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	 Если Параметры.Свойство("тДоговор") Тогда
		 
		 
		   ткПользователь = Справочники.Сотрудники.НайтиПоНаименованию(ПараметрыСеанса.ТекущийПользователь.Наименование, Истина);

		  
		 
		   ссылкаДоговор=Параметры.тДоговор;
		   ссылкаСписокДел=Параметры.ссылкаДела;
		 
		   Объект.Исполнитель=НайтиИсполнителя(Параметры.тДоговор);
		   
		   стрДолжник=ДанныеДолжника(Параметры.тДоговор);
		   Объект.ФИОДолжника=стрДолжник.ДолжникСсылка;
		   Объект.ДатаРожденияДолжника=стрДолжник.ДолжникДатаРождения;
		   Объект.МестоРожденияДолжника=стрДолжник.МестоРожденияДолж;
		   Объект.АдресДолжника=стрДолжник.АдресДолжника;
		   Объект.ПаспртныеДанныеДолжника=стрДолжник.ДолжникПаспортныеДанные;
		   Объект.ПаспортДатаВыдачи=стрДолжник.ПаспортДатаВыдачи;
		   Объект.ПаспортКемВыдан=стрДолжник.ПаспортКемВыдан;
		   
		   стрДоговор= ДанныеДоговора(Параметры.тДоговор);
		   
		   Объект.НомерКредитДоговора=стрДоговор.НомерДоговора;
		   Объект.ПервоначальныйКредитор=стрДоговор.Банк;
		   Объект.ДатаКредитногоДоговора=стрДоговор.ДатаФинансирования;
		   
		   Если стрДоговор.ДатаЦессии="" Тогда
		   
			   
			   	   Объект.НомерДоговораЦессии=Параметры.тНомерДоговораЦессии;
				   Объект.ДатаЦессии=Параметры.тДатаЦессии;

		   
		   Иначе
		   
  				   Объект.НомерДоговораЦессии=стрДоговор.НомерДоговораЦессии;
				   Объект.ДатаЦессии=стрДоговор.ДатаЦессии;

		   
		   КонецЕсли;
		    				   
		   Объект.ТипКредита=стрДоговор.ТипКредита;
		   Объект.ОсновнойДолг=стрДоговор.ВсегоЗадолженность;
		   Объект.СуммаЗадолженностиЗаявлено=0;  // стрДоговор.ТекущиеПроценты;
		   Объект.СуммаЗадолженностиРешСуда=0; // стрДоговор.ПросроченныеПроценты;
		   Объект.Неустойка=стрДоговор.Неустойка;
		   Объект.Госпошлина=стрДоговор.Госпошлина;
		   Объект.ПервоначальныйКредитор=стрДоговор.Банк;
		   
		   Объект.ПервоначальныйНомерКредитДоговора=стрДоговор.НомерПервичногоКредитногоДоговора;
		   Объект.ПервоначальныйКредитор0=стрДоговор.БанкПервоначальныйКредитор;
		   
		   
		   Объект.СуммаКредита=стрДоговор.СуммаКредита;
		   Объект.НомерСудебногоДела=Параметры.НомерДела;
		   Объект.ДатаСудебногоДела= Параметры.ДатаДела;
		   
		   
		   
		   
		   
		   ВсегоЗадолженностьВклЗадолженность=стрДоговор.ВсегоЗадолженность;
		   ТекущийОсновнойДолгВклЗадолженность=стрДоговор.ТекущийОсновнойДолг;
		   ТекущиеПроцентыВклЗадолженностьВклЗадолженность=стрДоговор.ТекущиеПроценты;
		   ПросроченныйОсновнойДолгВклЗадолженность=стрДоговор.ПросроченныйОсновнойДолг;
		   НеустойкаВклЗадолженность=стрДоговор.Неустойка;
		   
		   ГоспошлинаВклЗадолженность=стрДоговор.Госпошлина;
		   ПрочееВклЗадолженность=стрДоговор.Прочее;
		   
		   
		   
		   Если стрДолжник.БанкротИД<>"00000" Тогда
		       ЭтаФорма.Элементы.БанкротДолжник.Видимость=Истина;
		   	   Объект.БанкротДолжник =стрДолжник.БанкротИД;
			   
			   //ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
			   //ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();

			   //ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("БанкротДолжник");
			   //
			   //ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Красный);
			   //
			   //ЭтаФорма.Элементы.БанкротДолжник.ЦветФона=Новый Цвет(255, 0, 0);
			   //
			   //ЭтаФорма.Элементы.БанкротДолжник.ЦветТекста=Новый Цвет(255, 0, 0);
			   //
			  //ЭтаФорма.Прочитать();			   
			  			   
		   Иначе
			     Объект.БанкротДолжник = "00000";
			   
		   КонецЕсли;
		   
			   // //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			   // // Данный фрагмент построен конструктором.
			   // // При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			   // 
			   // Запрос = Новый Запрос;
			   // Запрос.Текст = 
			   // 	"ВЫБРАТЬ
			   // 	|	ВкладкаСудСудебнаяСтадия.Ссылка КАК Ссылка
			   // 	|ИЗ
			   // 	|	Справочник.ВкладкаСудСудебнаяСтадия КАК ВкладкаСудСудебнаяСтадия
			   // 	|ГДЕ
			   // 	|	ВкладкаСудСудебнаяСтадия.Владелец = &Владелец";
			   // 
			   // Запрос.УстановитьПараметр("Владелец",Параметры.тДоговор);
			   // 
			   // РезультатЗапроса = Запрос.Выполнить();
			   // 
			   // ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			   // 
			   // Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
			   //      Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			   // 	
			   // 		 //ссылкаСпрВкладкаСудебнаяСтадия=ВыборкаДетальныеЗаписи.Ссылка;
			   // 		 СпрВклСудСудебнаяСтадия=ВыборкаДетальныеЗаписи.Ссылка;
			   // 						
			   //    КонецЦикла;

			   // 	
			   // 
			   //КонецЕсли;
			   //
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				
				  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ВкладкаСудСудебнаяСтадияСписокДел.Ссылка КАК Ссылка
							|ИЗ
							|	Справочник.ВкладкаСудСудебнаяСтадияСписокДел КАК ВкладкаСудСудебнаяСтадияСписокДел
							|ГДЕ
							|	ВкладкаСудСудебнаяСтадияСписокДел.Владелец = &Владелец";
						
						Запрос.УстановитьПараметр("Владелец", Параметры.ссылкаДела);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							СпрВкладкаСудСудебнаяСтадияСписокДел=ВыборкаДетальныеЗаписи.Ссылка;
							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						
						
						
						
						
						
						
					//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ВкладкаСудебноеПроизводствоСудебнаяСтадия.Ссылка КАК Ссылка
								|ИЗ
								|	Справочник.ВкладкаСудебноеПроизводствоСудебнаяСтадия КАК ВкладкаСудебноеПроизводствоСудебнаяСтадия
								|ГДЕ
								|	ВкладкаСудебноеПроизводствоСудебнаяСтадия.Владелец = &Владелец";
							
							Запрос.УстановитьПараметр("Владелец", ссылкаДоговор);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								ВкладкаСудебноеПроизводствоСудебнаяСтадия=ВыборкаДетальныеЗаписи.Ссылка;
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							
							
							
				 Если Параметры.Свойство("номерСтрокиСпрГруппаДог") Тогда
					 номерСтрокиСпрГруппаДог=Параметры.номерСтрокиСпрГруппаДог;
				 КонецЕсли;	
				 
				 
				 				
				 Если Параметры.Свойство("спрГруппадоговоровЮристСсылка") Тогда
					 спрГруппадоговоровЮристСсылка=Параметры.спрГруппадоговоровЮристСсылка;
				 КонецЕсли;	
				 
				 
							
							
				Если НЕ ВкладкаСудебноеПроизводствоСудебнаяСтадия.Пустая() Тогда
				
											    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ВкладкаСудебноеПроизводствоСудебнаяСтадия.ГотовКГенерацииДокументов КАК ГотовКГенерацииДокументов
								|ИЗ
								|	Справочник.ВкладкаСудебноеПроизводствоСудебнаяСтадия КАК ВкладкаСудебноеПроизводствоСудебнаяСтадия
								|ГДЕ
								|	ВкладкаСудебноеПроизводствоСудебнаяСтадия.Ссылка = &Ссылка";
							
							Запрос.УстановитьПараметр("Ссылка", ВкладкаСудебноеПроизводствоСудебнаяСтадия);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								ГотовКПечати=ВыборкаДетальныеЗаписи.ГотовКГенерацииДокументов;
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

											
											
					
				
				КонецЕсли;			
							
							
							
						
						
				
				
				

			   // найду дату суда если есть
			    Если НЕ СпрВкладкаСудСудебнаяСтадияСписокДел.Пустая() Тогда
					
					          	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
									// Данный фрагмент построен конструктором.
									// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
									
									Запрос = Новый Запрос;
									Запрос.Текст = 
										"ВЫБРАТЬ ПЕРВЫЕ 1
										|	ВкладкаСудСудебнаяСтадияСписокДелТЧ.ДатаЗаседания КАК ДатаЗаседания,
										|	ВкладкаСудСудебнаяСтадияСписокДелТЧ.Инстанция КАК Инстанция,
										|	ВкладкаСудСудебнаяСтадияСписокДелТЧ.Суд КАК Суд
										|ИЗ
										|	Справочник.ВкладкаСудСудебнаяСтадияСписокДел.ТЧ КАК ВкладкаСудСудебнаяСтадияСписокДелТЧ
										|ГДЕ
										|	ВкладкаСудСудебнаяСтадияСписокДелТЧ.Ссылка = &Ссылка
										|
										|УПОРЯДОЧИТЬ ПО
										|	ДатаЗаседания УБЫВ";
									
									Запрос.УстановитьПараметр("Ссылка", СпрВкладкаСудСудебнаяСтадияСписокДел);
									
									РезультатЗапроса = Запрос.Выполнить();
									
									Выборка = РезультатЗапроса.Выбрать();
									
									Пока Выборка.Следующий() Цикл
										// Вставить обработку выборки ВыборкаДетальныеЗаписи
										
											Объект.ДатаЗаседания= Выборка.ДатаЗаседания;
							                Объект.СтатусСуд= Выборка.Инстанция;
							                Объект.СудЗаседания= Выборка.Суд;

									КонецЦикла;
									
									//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

													  
										//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ВкладкаСудСудебнаяСтадияСписокДел.НазваниеСуда КАК НазваниеСуда,
								|	ВкладкаСудСудебнаяСтадияСписокДел.АдресСудаВкладка КАК АдресСудаВкладка,
								|	ВкладкаСудСудебнаяСтадияСписокДел.ТелефонВкладкаСуд КАК ТелефонВкладкаСуд,
								|	ВкладкаСудСудебнаяСтадияСписокДел.СудьяВкладка КАК Судья
								|ИЗ
								|	Справочник.ВкладкаСудСудебнаяСтадияСписокДел КАК ВкладкаСудСудебнаяСтадияСписокДел
								|ГДЕ
								|	ВкладкаСудСудебнаяСтадияСписокДел.Владелец = &Владелец";
							
							Запрос.УстановитьПараметр("Владелец", Параметры.ссылкаДела);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								
								
								Объект.НаименованиеСуда=ВыборкаДетальныеЗаписи.НазваниеСуда;
			
			                    Объект.АдресСуда=ВыборкаДетальныеЗаписи.АдресСудаВкладка;
								
								Объект.Судья=ВыборкаДетальныеЗаписи.Судья;
								
								Объект.Телефон=ВыборкаДетальныеЗаписи.ТелефонВкладкаСуд;
								
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
										
									
									
					
									
									
									
										
				
				КонецЕсли;
				
				
				// найду поручителей
				
				    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Поручители.ФИОПоручитель КАК ФИОПоручитель,
						|	Поручители.ДатаРожденияПоручителя КАК ДатаРожденияПоручителя,
						|	Поручители.МестоРожденияПоручителя КАК МестоРожденияПоручителя,
						|	Поручители.АдресПоручителя КАК АдресПоручителя,
						|	Поручители.ФИОПоручитель1 КАК ФИОПоручитель1,
						|	Поручители.ДатаРожденияПоручителя1 КАК ДатаРожденияПоручителя1,
						|	Поручители.МестоРожденияПоручителя1 КАК МестоРожденияПоручителя1,
						|	Поручители.АдресПоручителя1 КАК АдресПоручителя1,
						|	Поручители.ФИОПоручитель2 КАК ФИОПоручитель2,
						|	Поручители.ДатаРожденияПоручителя2 КАК ДатаРожденияПоручителя2,
						|	Поручители.МестоРожденияПоручителя2 КАК МестоРожденияПоручителя2,
						|	Поручители.АдресПоручителя2 КАК АдресПоручителя2,
						|	Поручители.ФИОПоручитель3 КАК ФИОПоручитель3,
						|	Поручители.ДатаРожденияПоручителя3 КАК ДатаРожденияПоручителя3,
						|	Поручители.МестоРожденияПоручителя3 КАК МестоРожденияПоручителя3,
						|	Поручители.АдресПоручителя3 КАК АдресПоручителя3,
						|	Поручители.ФИОПоручитель4 КАК ФИОПоручитель4,
						|	Поручители.ДатаРожденияПоручителя4 КАК ДатаРожденияПоручителя4,
						|	Поручители.МестоРожденияПоручителя4 КАК МестоРожденияПоручителя4,
						|	Поручители.АдресПоручителя4 КАК АдресПоручителя4,
						|	Поручители.ФИОПоручитель5 КАК ФИОПоручитель5,
						|	Поручители.ДатаРожденияПоручителя5 КАК ДатаРожденияПоручителя5,
						|	Поручители.МестоРожденияПоручителя5 КАК МестоРожденияПоручителя5,
						|	Поручители.АдресПоручителя5 КАК АдресПоручителя5
						|ИЗ
						|	Справочник.Поручители КАК Поручители
						|ГДЕ
						|	Поручители.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", Параметры.тДоговор);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					КоличествоПоручителей= ВыборкаДетальныеЗаписи.Количество();
					
					Если КоличествоПоручителей>0 Тогда
						      
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							Если ВыборкаДетальныеЗаписи.ФИОПоручитель<>""  Тогда
								Попытка
									новСтр=ПоручителиТЗ.Добавить();
									новСтр.ФИОПоручителя=ВыборкаДетальныеЗаписи.ФИОПоручитель;
									новСтр.ДатаРожденияПоручителя=ВыборкаДетальныеЗаписи.ДатаРожденияПоручителя;
									новСтр.МестоРожденияПоручителя=ВыборкаДетальныеЗаписи.МестоРожденияПоручителя;
									новСтр.АдресПоручителя=ВыборкаДетальныеЗаписи.АдресПоручителя;
									
									Объект.ФИОПоручитель=ВыборкаДетальныеЗаписи.ФИОПоручитель;
									Объект.ДатаРожденияПоручителя=ВыборкаДетальныеЗаписи.ДатаРожденияПоручителя;
									Объект.МестоРожденияПоручителя=ВыборкаДетальныеЗаписи.МестоРожденияПоручителя;
									Объект.АдресПоручителя=ВыборкаДетальныеЗаписи.АдресПоручителя;
									 
								
								Исключение
									//Сообщить("Не все есть данные."); 
									
								КонецПопытки;
								
								
							
							КонецЕсли;
							
							
							Если ВыборкаДетальныеЗаписи.ФИОПоручитель1<>""  Тогда
								Попытка
									новСтр=ПоручителиТЗ.Добавить();
									новСтр.ФИОПоручителя=ВыборкаДетальныеЗаписи.ФИОПоручитель1;
									новСтр.ДатаРожденияПоручителя=ВыборкаДетальныеЗаписи.ДатаРожденияПоручителя1;
									новСтр.МестоРожденияПоручителя=ВыборкаДетальныеЗаписи.МестоРожденияПоручителя1;
									новСтр.АдресПоручителя=ВыборкаДетальныеЗаписи.АдресПоручителя1;
								
								Исключение
									//Сообщить("Не все есть данные."); 
									
								КонецПопытки;
								
								
							
							КонецЕсли;

							
							Если ВыборкаДетальныеЗаписи.ФИОПоручитель2<>""  Тогда
								Попытка
									новСтр=ПоручителиТЗ.Добавить();
									новСтр.ФИОПоручителя=ВыборкаДетальныеЗаписи.ФИОПоручитель2;
									новСтр.ДатаРожденияПоручителя=ВыборкаДетальныеЗаписи.ДатаРожденияПоручителя2;
									новСтр.МестоРожденияПоручителя=ВыборкаДетальныеЗаписи.МестоРожденияПоручителя2;
									новСтр.АдресПоручителя=ВыборкаДетальныеЗаписи.АдресПоручителя2;
								
								Исключение
									//Сообщить("Не все есть данные."); 
									
								КонецПопытки;
								
								
							
							КонецЕсли;

							
							Если ВыборкаДетальныеЗаписи.ФИОПоручитель3<>""  Тогда
								Попытка
									новСтр=ПоручителиТЗ.Добавить();
									новСтр.ФИОПоручителя=ВыборкаДетальныеЗаписи.ФИОПоручитель3;
									новСтр.ДатаРожденияПоручителя=ВыборкаДетальныеЗаписи.ДатаРожденияПоручителя3;
									новСтр.МестоРожденияПоручителя=ВыборкаДетальныеЗаписи.МестоРожденияПоручителя3;
									новСтр.АдресПоручителя=ВыборкаДетальныеЗаписи.АдресПоручителя3;
								
								Исключение
									//Сообщить("Не все есть данные."); 
									
								КонецПопытки;
								
								
							
							КонецЕсли;

							  Если ВыборкаДетальныеЗаписи.ФИОПоручитель4<>""  Тогда
								Попытка
									новСтр=ПоручителиТЗ.Добавить();
									новСтр.ФИОПоручителя=ВыборкаДетальныеЗаписи.ФИОПоручитель4;
									новСтр.ДатаРожденияПоручителя=ВыборкаДетальныеЗаписи.ДатаРожденияПоручителя4;
									новСтр.МестоРожденияПоручителя=ВыборкаДетальныеЗаписи.МестоРожденияПоручителя4;
									новСтр.АдресПоручителя=ВыборкаДетальныеЗаписи.АдресПоручителя4;
								
								Исключение
									//Сообщить("Не все есть данные."); 
									
								КонецПопытки;
								
								
							
							КонецЕсли;
							
							
							  Если ВыборкаДетальныеЗаписи.ФИОПоручитель5<>""  Тогда
								Попытка
									новСтр=ПоручителиТЗ.Добавить();
									новСтр.ФИОПоручителя5=ВыборкаДетальныеЗаписи.ФИОПоручитель5;
									новСтр.ДатаРожденияПоручителя5=ВыборкаДетальныеЗаписи.ДатаРожденияПоручителя5;
									новСтр.МестоРожденияПоручителя5=ВыборкаДетальныеЗаписи.МестоРожденияПоручителя5;
									новСтр.АдресПоручителя5=ВыборкаДетальныеЗаписи.АдресПоручителя5;
								
								Исключение
									//Сообщить("Не все есть данные."); 
									
								КонецПопытки;
								
								
							
							КонецЕсли;


							
						КонецЦикла;

						
					
					КонецЕсли;
										
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

								
					
					// загружу задолженность из реестров ...
					
					
												//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ЗадолженностьПодачаСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность,
								|	ЗадолженностьПодачаСрезПоследних.ТекущийОсновнойДолг КАК ТекущийОсновнойДолг,
								|	ЗадолженностьПодачаСрезПоследних.ТекущиеПроценты КАК ТекущиеПроценты,
								|	ЗадолженностьПодачаСрезПоследних.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг,
								|	ЗадолженностьПодачаСрезПоследних.Неустойка КАК Неустойка,
								|	ЗадолженностьПодачаСрезПоследних.Госпошлина КАК Госпошлина,
								|	ЗадолженностьПодачаСрезПоследних.Прочее КАК Прочее
								|ИЗ
								|	РегистрСведений.ЗадолженностьПодача.СрезПоследних КАК ЗадолженностьПодачаСрезПоследних
								|ГДЕ
								|	ЗадолженностьПодачаСрезПоследних.Договор = &Договор";
							
							Запрос.УстановитьПараметр("Договор", Параметры.тДоговор);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								Объект.СуммаЗадолженностиЗаявлено= ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
								ВсегоЗадолженностьВклПодача=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
								ТекущийОсновнойДолгВклПодача=ВыборкаДетальныеЗаписи.ТекущийОсновнойДолг;
								ТекущиеПроцентыВклЗадолженностьВклПодача=ВыборкаДетальныеЗаписи.ТекущиеПроценты;
								ПросроченныйОсновнойДолгВклПодача=ВыборкаДетальныеЗаписи.ПросроченныйОсновнойДолг;
								НеустойкаВклЗадолженностьПодача=ВыборкаДетальныеЗаписи.Неустойка;
								ГоспошлинаВклПодача=ВыборкаДетальныеЗаписи.Госпошлина;
								
								ПрочееВклПодача=ВыборкаДетальныеЗаписи.Прочее;
								
								
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

							
														//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ЗадолженностьРешениеСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность,
								|	ЗадолженностьРешениеСрезПоследних.ТекущийОсновнойДолг КАК ТекущийОсновнойДолг,
								|	ЗадолженностьРешениеСрезПоследних.ТекущиеПроценты КАК ТекущиеПроценты,
								|	ЗадолженностьРешениеСрезПоследних.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг,
								|	ЗадолженностьРешениеСрезПоследних.Неустойка КАК Неустойка,
								|	ЗадолженностьРешениеСрезПоследних.Госпошлина КАК Госпошлина,
								|	ЗадолженностьРешениеСрезПоследних.Прочее КАК Прочее
								|ИЗ
								|	РегистрСведений.ЗадолженностьРешение.СрезПоследних КАК ЗадолженностьРешениеСрезПоследних
								|ГДЕ
								|	ЗадолженностьРешениеСрезПоследних.Договор = &Договор";
							
							Запрос.УстановитьПараметр("Договор", Параметры.тДоговор);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								
								Объект.СуммаЗадолженностиРешСуда=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
								ВсегоЗадолженностьВклРешение=ВыборкаДетальныеЗаписи.ВсегоЗадолженность;
								ТекущийОсновнойДолгВклРешение=ВыборкаДетальныеЗаписи.ТекущийОсновнойДолг;
								ТекущиеПроцентыВклЗадолженностьВклРешение=ВыборкаДетальныеЗаписи.ТекущиеПроценты;
								ПросроченныйОсновнойДолгВклРешение=ВыборкаДетальныеЗаписи.ПросроченныйОсновнойДолг;
								НеустойкаВклЗадолженностьРешение=ВыборкаДетальныеЗаписи.Неустойка;
								ГоспошлинаВклРешение=ВыборкаДетальныеЗаписи.Госпошлина;
								ПрочееВклРешение=ВыборкаДетальныеЗаписи.Прочее;

								
								
							КонецЦикла;
							
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

							
							
							// Загружу примечание
							
							     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
							// Данный фрагмент построен конструктором.
							// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ВкладкаПримечаниеСудебнаяСтадия.Примечание КАК Примечание,
								|	ВкладкаПримечаниеСудебнаяСтадия.Ссылка КАК Ссылка
								|ИЗ
								|	Справочник.ВкладкаПримечаниеСудебнаяСтадия КАК ВкладкаПримечаниеСудебнаяСтадия
								|ГДЕ
								|	ВкладкаПримечаниеСудебнаяСтадия.Владелец = &Владелец";
							
							Запрос.УстановитьПараметр("Владелец", Параметры.тДоговор);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
							
								  Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
									// Вставить обработку выборки ВыборкаДетальныеЗаписи
									 ВкладкаПримечаниеСудебнаяСтадия=ВыборкаДетальныеЗаписи.Ссылка;
									 Примечание=ВыборкаДетальныеЗаписи.Примечание.Получить();
									  
								  КонецЦикла;

							
							КонецЕсли;
																
							//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

							
							
							  // Загружу примечание Таблица
							  
							 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ВкладкаПримечаниеТаблицаСудебнаяСтадияТЧ.Ссылка КАК Ссылка,
				|	ВкладкаПримечаниеТаблицаСудебнаяСтадияТЧ.Дата КАК Дата,
				|	ВкладкаПримечаниеТаблицаСудебнаяСтадияТЧ.Примечание КАК Примечание,
				|	ВкладкаПримечаниеТаблицаСудебнаяСтадияТЧ.Исполнитель КАК Исполнитель
				|ИЗ
				|	Справочник.ВкладкаПримечаниеТаблицаСудебнаяСтадия.ТЧ КАК ВкладкаПримечаниеТаблицаСудебнаяСтадияТЧ
				|ГДЕ
				|	ВкладкаПримечаниеТаблицаСудебнаяСтадияТЧ.Ссылка.Владелец = &Владелец";
			
			Запрос.УстановитьПараметр("Владелец", Параметры.тДоговор);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
				
				 
					     
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					   стрНовая=ТЗПримечание.Добавить();
					   
					   стрНовая.Дата=ВыборкаДетальныеЗаписи.Дата;
					   стрНовая.Примечание=ВыборкаДетальныеЗаписи.Примечание;
					   стрНовая.Исполнитель=ВыборкаДетальныеЗаписи.Исполнитель;
					   
					   
				  СпрВкладкаПримечаниеТаблицаСудебнаяСтадия= ВыборкаДетальныеЗаписи.Ссылка;	
					
				КонецЦикла;

				ТЗПримечание.Сортировать("Дата Убыв");
			
			КонецЕсли;
						
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		 
									  
							  
							
							
							// заполню ТБСписокДокументов - 1 -  ЗаявлениеОПроцессуальномПравопреемстве
							
							
							
							ЗаполнитьТБСписокДокументов (Параметры.тДоговор);
							
							
							 
					  		 
				
		   
     КонецЕсли;
	
	
 КонецПроцедуры
 
 
 
 &НаСервере
 Процедура ЗаполнитьТБСписокДокументов (дог)
	 
	         ТБСписокДокументов.Очистить();
			  
	                 
	 
	     // заполню ТБСписокДокументов - 1 -  ЗаявлениеОПроцессуальномПравопреемстве
		 
		        
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ЗаявлениеОПроцессуальномПравопреемстве.Ссылка КАК Ссылка,
						|	ЗаявлениеОПроцессуальномПравопреемстве.Наименование КАК Наименование,
						|	ЗаявлениеОПроцессуальномПравопреемстве.НаименованиеСуда КАК НаименованиеСуда,
						|	ЗаявлениеОПроцессуальномПравопреемстве.АдресСуда КАК АдресСуда,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ФИОДолжника КАК ФИОДолжника,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ДатаРожденияДолжника КАК ДатаРожденияДолжника,
						|	ЗаявлениеОПроцессуальномПравопреемстве.АдресРегистрацииДолжника КАК АдресРегистрацииДолжника,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ПаспортныеДанныеДолжника КАК ПаспортныеДанныеДолжника,
						|	ЗаявлениеОПроцессуальномПравопреемстве.МестоРожденияДолжника КАК МестоРожденияДолжника,
						|	ЗаявлениеОПроцессуальномПравопреемстве.НаименованиеПервоначальногоКредитора КАК НаименованиеПервоначальногоКредитора,
						|	ЗаявлениеОПроцессуальномПравопреемстве.НомерДоговораЦессии КАК НомерДоговораЦессии,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ДатаДоговораЦессии КАК ДатаДоговораЦессии,
						|	ЗаявлениеОПроцессуальномПравопреемстве.НомерКредитногоДоговора КАК НомерКредитногоДоговора,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ДатаКредитногоДоговора КАК ДатаКредитногоДоговора,
						|	ЗаявлениеОПроцессуальномПравопреемстве.НазваниеЗаявителя КАК НазваниеЗаявителя,
						|	ЗаявлениеОПроцессуальномПравопреемстве.НомерСудебногоДела КАК НомерСудебногоДела,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ДатаСудебногоДела КАК ДатаСудебногоДела,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ТипДокумента КАК ТипДокумента,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ДатаСоздания КАК ДатаСоздания,
						|	ЗаявлениеОПроцессуальномПравопреемстве.СтадияДокумента КАК СтадияДокумента,
						|	ЗаявлениеОПроцессуальномПравопреемстве.Исполнитель КАК Исполнитель,
						|	ЗаявлениеОПроцессуальномПравопреемстве.is_ready КАК is_ready,
						|	ЗаявлениеОПроцессуальномПравопреемстве.is_post КАК is_post,
						|	ЗаявлениеОПроцессуальномПравопреемстве.РегистрационныйНомер КАК РегистрационныйНомер,
						|	ЗаявлениеОПроцессуальномПравопреемстве.ДатаРегистрации КАК ДатаРегистрации
						|ИЗ
						|	Справочник.ЗаявлениеОПроцессуальномПравопреемстве КАК ЗаявлениеОПроцессуальномПравопреемстве
						|ГДЕ
						|	ЗаявлениеОПроцессуальномПравопреемстве.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					Выборка = РезультатЗапроса.Выбрать();
					
					Пока Выборка.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						новаяЗапись= ТБСписокДокументов.Добавить();
						новаяЗапись.ДокументСсылка=Выборка.Ссылка;
						
						новаяЗапись.ДатаСоздания=Выборка.ДатаСоздания;
						
						новаяЗапись.Тип=Выборка.ТипДокумента;
						
						новаяЗапись.Стадия=Выборка.СтадияДокумента;
						
						новаяЗапись.НазваниеДокумента=Выборка.Наименование;
						
						
						новаяЗапись.Исполнитель=Выборка.Исполнитель;
						
						новаяЗапись.is_ready=Выборка.is_ready;
						
						новаяЗапись.НаименованиеСуда=Выборка.НаименованиеСуда;
						
						новаяЗапись.АдресСуда=Выборка.АдресСуда;
						
						новаяЗапись.РегистрационныйНомер=Выборка.РегистрационныйНомер;
						новаяЗапись.ДатаРегистрации=Выборка.ДатаРегистрации;
						
						
						
						новаяЗапись.is_post=Выборка.is_post;
						
						новаяЗапись.НомерДела=Выборка.НомерСудебногоДела;
						
						
						//новаяЗапись.ДокументСсылка=Выборка.Ссылка;
						//
						
						
						
						
						
					КонецЦикла;
					
					

					
					// заполню ТБСписокДокументов - 2 -  ЗаявлениеОВыдачеСудебногоПриказа
					
					 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЗаявлениеОВыдачеСудебногоПриказа.Ссылка КАК Ссылка,
					|	ЗаявлениеОВыдачеСудебногоПриказа.Наименование КАК Наименование,
					|	ЗаявлениеОВыдачеСудебногоПриказа.НаименованиеСуда КАК НаименованиеСуда,
					|	ЗаявлениеОВыдачеСудебногоПриказа.АдресСуда КАК АдресСуда,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ФИОДолжника КАК ФИОДолжника,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ДатаРожденияДолжника КАК ДатаРожденияДолжника,
					|	ЗаявлениеОВыдачеСудебногоПриказа.АдресРегистрацииДолжника КАК АдресРегистрацииДолжника,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ПаспортныеДанныеДолжника КАК ПаспортныеДанныеДолжника,
					|	ЗаявлениеОВыдачеСудебногоПриказа.МестоРожденияДолжника КАК МестоРожденияДолжника,
					|	ЗаявлениеОВыдачеСудебногоПриказа.НаименованиеПервоначальногоКредитора КАК НаименованиеПервоначальногоКредитора,
					|	ЗаявлениеОВыдачеСудебногоПриказа.НомерДоговораЦессии КАК НомерДоговораЦессии,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ДатаДоговораЦессии КАК ДатаДоговораЦессии,
					|	ЗаявлениеОВыдачеСудебногоПриказа.НомерКредитногоДоговора КАК НомерКредитногоДоговора,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ДатаКредитногоДоговора КАК ДатаКредитногоДоговора,
					|	ЗаявлениеОВыдачеСудебногоПриказа.НазваниеЗаявителя КАК НазваниеЗаявителя,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ТипДокумента КАК ТипДокумента,
					|	ЗаявлениеОВыдачеСудебногоПриказа.СтадияДокумента КАК СтадияДокумента,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ДатаСоздания КАК ДатаСоздания,
					|	ЗаявлениеОВыдачеСудебногоПриказа.Исполнитель КАК Исполнитель,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ОбщаяСуммаЗадолженностиПоДоговору КАК ОбщаяСуммаЗадолженностиПоДоговору,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ГоспошлинаНаша КАК ГоспошлинаНаша,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ГоспошлинаКредитор КАК ГоспошлинаКредитор,
					|	ЗаявлениеОВыдачеСудебногоПриказа.Пеня КАК Пеня,
					|	ЗаявлениеОВыдачеСудебногоПриказа.Неустойка КАК Неустойка,
					|	ЗаявлениеОВыдачеСудебногоПриказа.Штраф КАК Штраф,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ПроцентыНаПроценты КАК ПроцентыНаПроценты,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ПроцентНаОсновнойДолг КАК ПроцентНаОсновнойДолг,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ОсновнойДолг КАК ОсновнойДолг,
					|	ЗаявлениеОВыдачеСудебногоПриказа.СуммаКредита КАК СуммаКредита,
					|	ЗаявлениеОВыдачеСудебногоПриказа.is_ready КАК is_ready,
					|	ЗаявлениеОВыдачеСудебногоПриказа.is_post КАК is_post,
					|	ЗаявлениеОВыдачеСудебногоПриказа.РегистрационныйНомер КАК РегистрационныйНомер,
					|	ЗаявлениеОВыдачеСудебногоПриказа.ДатаРегистрации КАК ДатаРегистрации
					|ИЗ
					|	Справочник.ЗаявлениеОВыдачеСудебногоПриказа КАК ЗаявлениеОВыдачеСудебногоПриказа
					|ГДЕ
					|	ЗаявлениеОВыдачеСудебногоПриказа.Владелец = &Владелец";
				
				Запрос.УстановитьПараметр("Владелец", дог);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				Выборка = РезультатЗапроса.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					
				    	новаяЗапись= ТБСписокДокументов.Добавить();
						новаяЗапись.ДокументСсылка=Выборка.Ссылка;
						
						новаяЗапись.ДатаСоздания=Выборка.ДатаСоздания;
						
						новаяЗапись.Тип=Выборка.ТипДокумента;
						
						новаяЗапись.Стадия=Выборка.СтадияДокумента;
						
						новаяЗапись.НазваниеДокумента=Выборка.Наименование;
						
						
						новаяЗапись.Исполнитель=Выборка.Исполнитель;
						
					    новаяЗапись.is_ready=Выборка.is_ready;

						новаяЗапись.НаименованиеСуда=Выборка.НаименованиеСуда;
						
						новаяЗапись.АдресСуда=Выборка.АдресСуда;
						новаяЗапись.РегистрационныйНомер=Выборка.РегистрационныйНомер;
						новаяЗапись.ДатаРегистрации=Выборка.ДатаРегистрации;
						
						
						новаяЗапись.is_post=Выборка.is_post;

						
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				
				
				
				
				// Пройдусь по входящим 
				
				 типДок=Перечисления.ТипДокумента.исх;
				
								        	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ДокументВходящий.ДатаСоздания КАК ДатаСоздания,
						|	ДокументВходящий.НазваниеДокумента КАК НазваниеДокумента,
						|	ДокументВходящий.Исполнитель КАК Исполнитель,
						|	ДокументВходящий.РегистрационныйНомер КАК РегистрационныйНомер,
						|	ДокументВходящий.ДатаРегистрации КАК ДатаРегистрации,
						|	ДокументВходящий.ДатаВынесения КАК ДатаВынесения,
						|	ДокументВходящий.ДатаИсполнения КАК ДатаИсполнения,
						|	ДокументВходящий.ДатаВступленияВСилу КАК ДатаВступленияВСилу,
						|	ДокументВходящий.СсылкаНаДокумент КАК СсылкаНаДокумент,
						|	ДокументВходящий.Ссылка КАК Ссылка,
						|	НазванияДокументов.Стадия КАК Стадия,
						|	НазванияДокументов.ТипДокумента КАК ТипДокумента,
						|	ДокументВходящий.НомерДела КАК НомерДела,
						|	ДокументВходящий.НазваниеДокументаСправочник.ПолноеНаименование КАК НазваниеДокументаСправочникПолноеНаименование
						|ИЗ
						|	Справочник.ДокументВходящий КАК ДокументВходящий
						|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НазванияДокументов КАК НазванияДокументов
						|		ПО ДокументВходящий.НазваниеДокументаСправочник = НазванияДокументов.Ссылка
						|ГДЕ
						|	ДокументВходящий.Договор = &Договор";
					
					Запрос.УстановитьПараметр("Договор", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					Выборка = РезультатЗапроса.Выбрать();
					
					Пока Выборка.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						новаяЗапись= ТБСписокДокументов.Добавить();
						новаяЗапись.ДокументСсылка=Выборка.СсылкаНаДокумент;
						новаяЗапись.ДатаСоздания=Выборка.ДатаСоздания;
						новаяЗапись.Стадия=Выборка.Стадия;
						
						новаяЗапись.НазваниеДокумента=Выборка.НазваниеДокументаСправочникПолноеНаименование;
						
						новаяЗапись.Тип=Выборка.ТипДокумента;
						
						новаяЗапись.Исполнитель=Выборка.Исполнитель;
						
						новаяЗапись.РегистрационныйНомер=Выборка.РегистрационныйНомер;
						
						новаяЗапись.ДатаРегистрации=Выборка.ДатаРегистрации;
						
						новаяЗапись.ДатаВынесения=Выборка.ДатаВынесения;
						
						новаяЗапись.ДатаИсполнения=Выборка.ДатаИсполнения;
						
						новаяЗапись.ДатаВступленияВСилу=Выборка.ДатаВступленияВСилу;
						
						новаяЗапись.ДокументСсылка=Выборка.Ссылка;
						
						новаяЗапись.НомерДела=Выборка.НомерДела;
						
						
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

								
					
					// пройдусь по исходящим ДокументИсходящийДоСтарт
										  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ДокументИсходящийДоСтарт.Ссылка КАК Ссылка,
							|	ДокументИсходящийДоСтарт.ДатаСоздания КАК ДатаСоздания,
							|	ДокументИсходящийДоСтарт.Стадия КАК Стадия,
							|	ДокументИсходящийДоСтарт.НазваниеДокумента КАК НазваниеДокумента,
							|	ДокументИсходящийДоСтарт.ТипДокумента КАК ТипДокумента,
							|	ДокументИсходящийДоСтарт.Исполнитель КАК Исполнитель,
							|	ДокументИсходящийДоСтарт.РегистрационныйНомер КАК РегистрационныйНомер,
							|	ДокументИсходящийДоСтарт.ДатаРегистрации КАК ДатаРегистрации
							|ИЗ
							|	Справочник.ДокументИсходящийДоСтарт КАК ДокументИсходящийДоСтарт
							|ГДЕ
							|	ДокументИсходящийДоСтарт.Договор = &Договор";
						
						Запрос.УстановитьПараметр("Договор", дог);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДокументИсходящийДоСтарт = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДокументИсходящийДоСтарт.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							
						новаяЗапись= ТБСписокДокументов.Добавить();
						//новаяЗапись.ДокументСсылка=ВыборкаДокументИсходящийДоСтарт.СсылкаНаДокумент;
						новаяЗапись.ДатаСоздания=ВыборкаДокументИсходящийДоСтарт.ДатаСоздания;
						
						новаяЗапись.Стадия=ВыборкаДокументИсходящийДоСтарт.Стадия;
						
						новаяЗапись.НазваниеДокумента=ВыборкаДокументИсходящийДоСтарт.НазваниеДокумента;
						
						новаяЗапись.Тип=типДок;
						
						новаяЗапись.Исполнитель=ВыборкаДокументИсходящийДоСтарт.Исполнитель;
						
						новаяЗапись.РегистрационныйНомер=ВыборкаДокументИсходящийДоСтарт.РегистрационныйНомер;
						
						новаяЗапись.ДатаРегистрации=ВыборкаДокументИсходящийДоСтарт.ДатаРегистрации;
						
						//новаяЗапись.ДатаВынесения=ВыборкаДокументИсходящийДоСтарт.ДатаВынесения;
						
						//новаяЗапись.ДатаИсполнения=ВыборкаДокументИсходящийДоСтарт.ДатаИсполнения;
						
						//новаяЗапись.ДатаВступленияВСилу=ВыборкаДокументИсходящийДоСтарт.ДатаВступленияВСилу;
						
						новаяЗапись.ДокументСсылка=ВыборкаДокументИсходящийДоСтарт.Ссылка;
						

							
							
							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						
					   	
														//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
								// Данный фрагмент построен конструктором.
								// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
								
								Запрос = Новый Запрос;
								Запрос.Текст = 
									"ВЫБРАТЬ
									|	ДокументИсходящий.Ссылка КАК Ссылка,
									|	ДокументИсходящий.ДатаСоздания КАК ДатаСоздания,
									|	ДокументИсходящий.НазваниеДокумента КАК НазваниеДокумента,
									|	ДокументИсходящий.Исполнитель КАК Исполнитель,
									|	ДокументИсходящий.РегистрационныйНомер КАК РегистрационныйНомер,
									|	ДокументИсходящий.ДатаРегистрации КАК ДатаРегистрации,
									|	НазванияДокументов.Стадия КАК Стадия,
									|	НазванияДокументов.ТипДокумента КАК ТипДокумента
									|ИЗ
									|	Справочник.ДокументИсходящий КАК ДокументИсходящий
									|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НазванияДокументов КАК НазванияДокументов
									|		ПО ДокументИсходящий.НазваниеДокументаСправочник = НазванияДокументов.Ссылка
								    |ГДЕ
						            |	ДокументИсходящий.Договор = &Договор";
								
								Запрос.УстановитьПараметр("Договор", дог);
								РезультатЗапроса = Запрос.Выполнить();
								
								ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
								
								Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
									// Вставить обработку выборки ВыборкаДетальныеЗаписи
									
										новаяЗапись= ТБСписокДокументов.Добавить();
									//новаяЗапись.ДокументСсылка=ВыборкаДокументИсходящийДоСтарт.СсылкаНаДокумент;
									новаяЗапись.ДатаСоздания=ВыборкаДетальныеЗаписи.ДатаСоздания;
									
									новаяЗапись.Стадия=ВыборкаДетальныеЗаписи.Стадия;
									
									новаяЗапись.НазваниеДокумента=ВыборкаДетальныеЗаписи.НазваниеДокумента;
									
									новаяЗапись.Тип=типДок;
									
									новаяЗапись.Исполнитель=ВыборкаДетальныеЗаписи.Исполнитель;
									
									новаяЗапись.РегистрационныйНомер=ВыборкаДетальныеЗаписи.РегистрационныйНомер;
									
									новаяЗапись.ДатаРегистрации=ВыборкаДетальныеЗаписи.ДатаРегистрации;
									
									//новаяЗапись.ДатаВынесения=ВыборкаДокументИсходящийДоСтарт.ДатаВынесения;
									
									//новаяЗапись.ДатаИсполнения=ВыборкаДокументИсходящийДоСтарт.ДатаИсполнения;
									
									//новаяЗапись.ДатаВступленияВСилу=ВыборкаДокументИсходящийДоСтарт.ДатаВступленияВСилу;
									
									новаяЗапись.ДокументСсылка=ВыборкаДетальныеЗаписи.Ссылка;
									

									
									
								КонецЦикла;
								
								//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						
					
					
					

              
			
			
			
			// пройдусь по этой таблице  ТБСписокДокументов и подставлю из ОбращенияВГАС
			
			Для каждого стрТаб  Из ТБСписокДокументов Цикл
				
				   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ОбращенияВГАС.Наименование КАК Наименование,
							|	ОбращенияВГАС.СтатусОбращения КАК СтатусОбращения,
							|	ОбращенияВГАС.СтатусКомментарий КАК СтатусКомментарий
							|ИЗ
							|	Справочник.ОбращенияВГАС КАК ОбращенияВГАС
							|ГДЕ
							|	ОбращенияВГАС.СсылкаДокумент = &СсылкаДокумент
							|	И ОбращенияВГАС.КредитныйДоговор = &КредитныйДоговор";
						
						Запрос.УстановитьПараметр("КредитныйДоговор",ссылкаДоговор);
						Запрос.УстановитьПараметр("СсылкаДокумент",стрТаб.ДокументСсылка);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							  стрТаб.НомерОбращения=ВыборкаДетальныеЗаписи.Наименование;
							  стрТаб.СтатусОбращения=ВыборкаДетальныеЗаписи.СтатусОбращения;
							  стрТаб.СтатусКомментарий=ВыборкаДетальныеЗаписи.СтатусКомментарий;
							
						   КонецЦикла;

							
						
						КонецЕсли;
						
												
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				
						
						
						
				
				
				
			
			КонецЦикла;
			
			
			
			
			ТБСписокДокументов.Сортировать("ДатаСоздания Убыв");	
 
 КонецПроцедуры
 
 
&НаСервере
Процедура ТБРеестрДляОтправкиЗаполнить()

	  ТБРеестрДляОтправки.Очистить();
	  ТБРеестрДляОтправкиАрхив.Очистить();

	
	  Для каждого сртК Из ТБСписокДокументов Цикл
		  
		  Если сртК.is_ready И НЕ сртК.is_post Тогда
			  
			  новаяСтрока=ТБРеестрДляОтправки.Добавить();
			  новаяСтрока.КредитныйДоговор=ссылкаДоговор;
			  новаяСтрока.ФИОДолжника=Объект.ФИОДолжника;
			  новаяСтрока.ТипДокумента=сртК.Тип;
			  
			  новаяСтрока.Стадия=сртК.Стадия;
			  
			  новаяСтрока.НазваниеДокумента=сртК.НазваниеДокумента;
			  
			  новаяСтрока.GUID=сртК.ДокументСсылка.УникальныйИдентификатор();
			  
			  новаяСтрока.НаименованиеСуда=сртК.НаименованиеСуда;
			  новаяСтрока.АдресСуда=сртК.АдресСуда;
			  
			  новаяСтрока.ДокументСсылка=сртК.ДокументСсылка;
			  
              новаяСтрока.Исполнитель=Объект.Исполнитель.Наименование;
 
			  
		  
		  КонецЕсли;
		  
		  Если  сртК.is_post Тогда
			  
			  новаяСтрока=ТБРеестрДляОтправкиАрхив.Добавить();
			  новаяСтрока.КредитныйДоговор=ссылкаДоговор;
			  новаяСтрока.ФИОДолжника=Объект.ФИОДолжника;
			  новаяСтрока.ТипДокумента=сртК.Тип;
			  
			  новаяСтрока.Стадия=сртК.Стадия;
			  
			  новаяСтрока.НазваниеДокумента=сртК.НазваниеДокумента;
			  
			  новаяСтрока.GUID=сртК.ДокументСсылка.УникальныйИдентификатор();
			  
			  новаяСтрока.НаименованиеСуда=сртК.НаименованиеСуда;
			  новаяСтрока.АдресСуда=сртК.АдресСуда;
			  
			  новаяСтрока.ДокументСсылка=сртК.ДокументСсылка;
			  
			  
			  новаяСтрока.Исполнитель=Объект.Исполнитель.Наименование;

			  
		  
		  КонецЕсли;
		  
		  
	  	
	  
	  КонецЦикла;
	 
	

КонецПроцедуры


 
 


&НаСервере
Функция ДанныеДолжника(дог)

	данныеДолж=Новый Структура;
	должСсылка=Неопределено;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Ссылка КАК Ссылка,
		|	Должники.ДатаРождения КАК ДатаРождения,
		|	Должники.НомерПаспорта КАК НомерПаспорта,
		|	Должники.ПаспортКемВыдан КАК ПаспортКемВыдан,
		|	Должники.ПаспортКогдаВыдан КАК ПаспортКогдаВыдан
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
		|		ПО Договоры.Владелец = Должники.Ссылка
		|ГДЕ
		|	Договоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		должСсылка=ВыборкаДетальныеЗаписи.Ссылка;
		данныеДолж.Вставить("ДолжникСсылка",ВыборкаДетальныеЗаписи.Ссылка);
		данныеДолж.Вставить("ДолжникДатаРождения",ВыборкаДетальныеЗаписи.ДатаРождения);
		СтрокаДата = Формат(ВыборкаДетальныеЗаписи.ПаспортКогдаВыдан,"ДФ=dd.MM.yyyy");
		
		данныеДолж.Вставить("ДолжникПаспортныеДанные", ВыборкаДетальныеЗаписи.НомерПаспорта);
		
		данныеДолж.Вставить("ПаспортДатаВыдачи", ВыборкаДетальныеЗаписи.ПаспортКогдаВыдан);
		
		данныеДолж.Вставить("ПаспортКемВыдан", ВыборкаДетальныеЗаписи.ПаспортКемВыдан);
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	 спрДопРеквизМестоРождения=Справочники.ДополнительныеРеквизиты.НайтиПоНаименованию("Место рождения");
     
				         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ДополнительныеДанные.Наименование КАК Наименование
					|ИЗ
					|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
					|ГДЕ
					|	ДополнительныеДанные.Владелец = &Владелец
					|	И ДополнительныеДанные.Реквизит = &Реквизит";
				
				Запрос.УстановитьПараметр("Владелец", должСсылка);
				Запрос.УстановитьПараметр("Реквизит", спрДопРеквизМестоРождения);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
				        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
				    	данныеДолж.Вставить("МестоРожденияДолж",ВыборкаДетальныеЗаписи.Наименование);
			    	КонецЦикла;

				Иначе
					 данныеДолж.Вставить("МестоРожденияДолж","не заполнено");
				
				КонецЕсли;
				
								
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 
				
	 спрТипАдресовРегистрация=Справочники.ТипыАдресов.НайтиПоНаименованию("Регистрации"); 			
				
	 
	     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Адреса.Наименование КАК Наименование
					|ИЗ
					|	Справочник.Адреса КАК Адреса
					|ГДЕ
					|	Адреса.Владелец = &Владелец
					|	И Адреса.Тип = &Тип";
				
				Запрос.УстановитьПараметр("Владелец", должСсылка);
				Запрос.УстановитьПараметр("Тип", спрТипАдресовРегистрация);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
				        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
				    	данныеДолж.Вставить("АдресДолжника",ВыборкаДетальныеЗаписи.Наименование);
			    	КонецЦикла;

				Иначе
					 данныеДолж.Вставить("АдресДолжника","не заполнено");
				
				КонецЕсли;
				

				
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	//  Созаемщик
	//  Поручитель/дата рождения
	
	
	      Если должСсылка<>Неопределено Тогда
		  
		  	         	
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Банкроты.IDDebitor КАК IDDebitor
						|ИЗ
						|	Справочник.Банкроты КАК Банкроты
						|ГДЕ
						|	Банкроты.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", должСсылка);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
					
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						 	
						     данныеДолж.Вставить("БанкротИД",ВыборкаДетальныеЗаписи.IDDebitor);

						КонецЦикла;
					 Иначе	

						  данныеДолж.Вставить("БанкротИД","00000");

					
					КонецЕсли;
					
					
		  
		  КонецЕсли;
				
				
	
	
	Возврат  данныеДолж;
	

КонецФункции // ()




&НаСервере
Функция ДанныеДоговора(дог)

	   данныеДог=Новый Структура;
	   
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.НомерДоговора КАК НомерДоговора,
		|	Договоры.Банк КАК Банк,
		|	Договоры.СуммаКредита КАК СуммаКредита,
		|	Договоры.ДатаФинансирования КАК ДатаФинансирования,
		|	Договоры.ТипКредита КАК ТипКредита,
		|	Договоры.БанкПервоначальныйКредитор КАК БанкПервоначальныйКредитор,
		|	Договоры.НомерПервичногоКредитногоДоговора КАК НомерПервичногоКредитногоДоговора
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		данныеДог.Вставить("НомерДоговора",ВыборкаДетальныеЗаписи.НомерДоговора);
		данныеДог.Вставить("Банк",ВыборкаДетальныеЗаписи.Банк.ПолноеНазвание);
		данныеДог.Вставить("ДатаФинансирования",ВыборкаДетальныеЗаписи.ДатаФинансирования);
		данныеДог.Вставить("ТипКредита",ВыборкаДетальныеЗаписи.ТипКредита);
		данныеДог.Вставить("СуммаКредита",ВыборкаДетальныеЗаписи.СуммаКредита);
		
		данныеДог.Вставить("БанкПервоначальныйКредитор",ВыборкаДетальныеЗаписи.БанкПервоначальныйКредитор.ПолноеНазвание);
		данныеДог.Вставить("НомерПервичногоКредитногоДоговора",ВыборкаДетальныеЗаписи.НомерПервичногоКредитногоДоговора);
		
		
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 
				     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ДоговорЦессии.НомерДоговора КАК НомерДоговора,
					|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии
					|ИЗ
					|	Справочник.ДоговорЦессии КАК ДоговорЦессии
					|ГДЕ
					|	ДоговорЦессии.Владелец = &Владелец";
				
				Запрос.УстановитьПараметр("Владелец", дог);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
					Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
				        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					      данныеДог.Вставить("НомерДоговораЦессии",ВыборкаДетальныеЗаписи.НомерДоговора);
				    	  данныеДог.Вставить("ДатаЦессии",ВыборкаДетальныеЗаписи.ДатаЦессии);
			    	    КонецЦикла;

				Иначе
					    данныеДог.Вставить("НомерДоговораЦессии","не заполнено");
				        данныеДог.Вставить("ДатаЦессии","");
				
				КонецЕсли;

				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
					//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ДанныеДоговоровСрезПоследних.ТекущийОсновнойДолг КАК ТекущийОсновнойДолг,
						|	ДанныеДоговоровСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность,
						|	ДанныеДоговоровСрезПоследних.ПросроченныеПроценты КАК ПросроченныеПроценты,
						|	ДанныеДоговоровСрезПоследних.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг,
						|	ДанныеДоговоровСрезПоследних.Неустойка КАК Неустойка,
						|	ДанныеДоговоровСрезПоследних.ТекущиеПроценты КАК ТекущиеПроценты,
						|	ДанныеДоговоровСрезПоследних.Госпошлина КАК Госпошлина,
						|	ДанныеДоговоровСрезПоследних.Прочее КАК Прочее
						|ИЗ
						|	РегистрСведений.ДанныеДоговоров.СрезПоследних КАК ДанныеДоговоровСрезПоследних
						|ГДЕ
						|	ДанныеДоговоровСрезПоследних.Договор = &Договор";
					
					Запрос.УстановитьПараметр("Договор", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
						Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
					        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								
							  данныеДог.Вставить("ВсегоЗадолженность",ВыборкаДетальныеЗаписи.ВсегоЗадолженность);
					    	  данныеДог.Вставить("ТекущиеПроценты",ВыборкаДетальныеЗаписи.ТекущиеПроценты);
							  данныеДог.Вставить("ПросроченныеПроценты",ВыборкаДетальныеЗаписи.ПросроченныеПроценты);
							  данныеДог.Вставить("Неустойка",ВыборкаДетальныеЗаписи.Неустойка);
							  данныеДог.Вставить("Госпошлина",ВыборкаДетальныеЗаписи.Госпошлина);
							  данныеДог.Вставить("Прочее",ВыборкаДетальныеЗаписи.Прочее);
							  
							  данныеДог.Вставить("ТекущийОсновнойДолг",ВыборкаДетальныеЗаписи.ТекущийОсновнойДолг);
							  данныеДог.Вставить("ПросроченныйОсновнойДолг",ВыборкаДетальныеЗаписи.ПросроченныйОсновнойДолг);
							  
							  
				    	    КонецЦикла;

						Иначе
							  данныеДог.Вставить("ВсегоЗадолженность",0);
					    	  данныеДог.Вставить("ТекущиеПроценты",0);
							  данныеДог.Вставить("ПросроченныеПроценты",0);
							  данныеДог.Вставить("Неустойка",0);
							  данныеДог.Вставить("Госпошлина",0);
							  данныеДог.Вставить("Прочее",0);
							  
							  данныеДог.Вставить("ТекущийОсновнойДолг",0);
							  данныеДог.Вставить("ПросроченныйОсновнойДолг",0);
							  
							  
							  
							
						КонецЕсли;

					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

								
				
				
				
				
				
	
	Возврат данныеДог;

КонецФункции // ()




&НаСервере
Функция НайтиИсполнителя(дог)
	
	   сотрудИсп=Неопределено;
	         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПривязкаДоговорСрезПоследних.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.ПривязкаДоговор.СрезПоследних КАК ПривязкаДоговорСрезПоследних
		|ГДЕ
		|	ПривязкаДоговорСрезПоследних.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Договор", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		 сотрудИсп=ВыборкаДетальныеЗаписи.Сотрудник;

	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	 Возврат  сотрудИсп;
	

КонецФункции // ()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	 ИнфОСудеОткр=Ложь;
	 ЗадолженностьОткр=Ложь;
	 СервисОткр=Ложь;
	 
	 Если Объект.ПервоначальныйНомерКредитДоговора<>"" Тогда
		 
		 Элементы.ГруппаНомерПервоначальный.Видимость=Истина;
	 	
	 
	 КонецЕсли;
	 
	 
КонецПроцедуры

&НаСервере
Процедура НазваниеСудаПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
	
	
КонецПроцедуры

&НаКлиенте
Процедура НазваниеСудаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
   	СтандартнаяОбработка = Ложь;
	  
	  ПараметрыФормы  = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе", Истина, Истина);
      ОбработкаВыбора = Новый ОписаниеОповещения("ВыбратьЭлементСправочника", ЭтаФорма);
	    
	
	  ОткрытьФорму("Справочник.Суды.ФормаВыбора",ПараметрыФормы,,,,,ОбработкаВыбора);

	
	
КонецПроцедуры


Процедура ВыбратьЭлементСправочника(РезультатЗакрытия,ДопПараметры) Экспорт

			Если Не ЗначениеЗаполнено(РезультатЗакрытия) Тогда
			   Возврат;
			КонецЕсли;

			НазваниеСуда = РезультатЗакрытия;
			АдресСудаВкладка=РезультатЗакрытия.Адрес; 
			
			Объект.НаименованиеСуда=РезультатЗакрытия;
			
			Объект.АдресСуда=РезультатЗакрытия.Адрес;
			
			
			
КонецПроцедуры	 

&НаКлиенте
Процедура КредитныйДоговорПриСменеСтраницы(Элемент, ТекущаяСтраница)
	// Вставить содержимое обработчика.
	
	
	 Если ТекущаяСтраница.Имя="ИнфСуд" и (НЕ ИнфОСудеОткр) Тогда
		 
		 ИнфОСудеОткр=Истина;
		 
		 Если  НЕ СпрВкладкаСудСудебнаяСтадияСписокДел.Пустая() Тогда
		 
		         ЗаполнитьИнфСуд(ссылкаСписокДел);

	     КонецЕсли;

		 
		 		 
	
	 КонецЕсли;
	 
	Если ТекущаяСтраница.Имя="Задолженность" и (НЕ ЗадолженностьОткр) Тогда
	
		ЗадолженностьОткр=Истина;
		
		
	
	КонецЕсли; 
	
	
	
	Если ТекущаяСтраница.Имя="Сервис" и (НЕ СервисОткр) Тогда
	
		СервисОткр=Истина;
		
		ТБРеестрДляОтправкиЗаполнить();
		
	
	КонецЕсли; 
	

	
	 
	 
	
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьЗадолженностьВкл(дог)

	

КонецПроцедуры




&НаСервере
Процедура ЗаполнитьИнфСуд(дог)

		     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ВкладкаСудСудебнаяСтадия.Ссылка КАК Ссылка1,
						|	ВкладкаСудСудебнаяСтадия.Владелец КАК Владелец,
						|	ВкладкаСудСудебнаяСтадия.ТипСуда КАК ТипСуда,
						|	ВкладкаСудСудебнаяСтадия.НазваниеСуда КАК НазваниеСуда,
						|	ВкладкаСудСудебнаяСтадия.АдресСудаВкладка КАК АдресСудаВкладка,
						|	ВкладкаСудСудебнаяСтадия.ТелефонВкладкаСуд КАК ТелефонВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.СудьяВкладка КАК СудьяВкладка,
						|	ВкладкаСудСудебнаяСтадия.Получатель КАК Получатель,
						|	ВкладкаСудСудебнаяСтадия.ИННПолучатель КАК ИННПолучатель,
						|	ВкладкаСудСудебнаяСтадия.КПППолучатель КАК КПППолучатель,
						|	ВкладкаСудСудебнаяСтадия.БИКПолучатель КАК БИКПолучатель,
						|	ВкладкаСудСудебнаяСтадия.ОКАТОПолучатель КАК ОКАТОПолучатель,
						|	ВкладкаСудСудебнаяСтадия.РасчСчетВкладкаСуд КАК РасчСчетВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.КорСчетВкладкаСуд КАК КорСчетВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.БанкВкладкаСуд КАК БанкВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.КБКВкладкаСуд КАК КБКВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.РасчетнаяСуммаГоспошлина КАК РасчетнаяСуммаГоспошлина
						|ИЗ
						|	Справочник.ВкладкаСудСудебнаяСтадияСписокДел КАК ВкладкаСудСудебнаяСтадия
						|ГДЕ
						|	ВкладкаСудСудебнаяСтадия.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						ТипСуда=ВыборкаДетальныеЗаписи.ТипСуда;
						НазваниеСуда=ВыборкаДетальныеЗаписи.НазваниеСуда;
						АдресСудаВкладка=ВыборкаДетальныеЗаписи.АдресСудаВкладка;
						ТелефонВкладкаСуд=ВыборкаДетальныеЗаписи.ТелефонВкладкаСуд;
						СудьяВкладка=ВыборкаДетальныеЗаписи.СудьяВкладка;
						Получатель=ВыборкаДетальныеЗаписи.Получатель;
						
						
						ИННПолучатель=Получатель.ИННПолучатель;
						КПППолучатель=Получатель.КПППолучатель;
						БИКПолучатель=Получатель.БИКПолучатель;
						ОКАТОПолучатель=Получатель.ОКАТОПолучатель;
						РасчСчетВкладкаСуд=Получатель.РасчСчетПолучатель;
						КорСчетВкладкаСуд=Получатель.КорСчетПолучатель;
						БанкВкладкаСуд=Получатель.БанкПолучатель;
						КБКВкладкаСуд=Получатель.КБКПолучатель;
					
						
						
						РасчетнаяСуммаГоспошлина=ВыборкаДетальныеЗаписи.РасчетнаяСуммаГоспошлина;
						
						
						
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					
					 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ВкладкаСудСудебнаяСтадияТЧ.ДатаЗаседания КАК ДатаЗаседания,
							|	ВкладкаСудСудебнаяСтадияТЧ.Инстанция КАК Инстанция,
							|	ВкладкаСудСудебнаяСтадияТЧ.Суд КАК Суд
							|ИЗ
							|	Справочник.ВкладкаСудСудебнаяСтадияСписокДел.ТЧ КАК ВкладкаСудСудебнаяСтадияТЧ
							|ГДЕ
							|	ВкладкаСудСудебнаяСтадияТЧ.Ссылка.Владелец = &Владелец";
						
						Запрос.УстановитьПараметр("Владелец", дог);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							табСтр=ТБСуды.Добавить();
							табСтр.ДатаЗаседания=ВыборкаДетальныеЗаписи.ДатаЗаседания;
							табСтр.Инстанция=ВыборкаДетальныеЗаписи.Инстанция;
							табСтр.Суд=ВыборкаДетальныеЗаписи.Суд;
							
							
							
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьИнфСудПол(дог)

		     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ВкладкаСудСудебнаяСтадия.Ссылка КАК Ссылка1,
						|	ВкладкаСудСудебнаяСтадия.Владелец КАК Владелец,
						|	ВкладкаСудСудебнаяСтадия.ТипСуда КАК ТипСуда,
						|	ВкладкаСудСудебнаяСтадия.НазваниеСуда КАК НазваниеСуда,
						|	ВкладкаСудСудебнаяСтадия.АдресСудаВкладка КАК АдресСудаВкладка,
						|	ВкладкаСудСудебнаяСтадия.ТелефонВкладкаСуд КАК ТелефонВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.СудьяВкладка КАК СудьяВкладка,
						|	ВкладкаСудСудебнаяСтадия.Получатель КАК Получатель,
						|	ВкладкаСудСудебнаяСтадия.ИННПолучатель КАК ИННПолучатель,
						|	ВкладкаСудСудебнаяСтадия.КПППолучатель КАК КПППолучатель,
						|	ВкладкаСудСудебнаяСтадия.БИКПолучатель КАК БИКПолучатель,
						|	ВкладкаСудСудебнаяСтадия.ОКАТОПолучатель КАК ОКАТОПолучатель,
						|	ВкладкаСудСудебнаяСтадия.РасчСчетВкладкаСуд КАК РасчСчетВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.КорСчетВкладкаСуд КАК КорСчетВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.БанкВкладкаСуд КАК БанкВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.КБКВкладкаСуд КАК КБКВкладкаСуд,
						|	ВкладкаСудСудебнаяСтадия.РасчетнаяСуммаГоспошлина КАК РасчетнаяСуммаГоспошлина
						|ИЗ
						|	Справочник.ВкладкаСудСудебнаяСтадия КАК ВкладкаСудСудебнаяСтадия
						|ГДЕ
						|	ВкладкаСудСудебнаяСтадия.Владелец = &Владелец";
					
					Запрос.УстановитьПараметр("Владелец", дог);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						ТипСуда=ВыборкаДетальныеЗаписи.ТипСуда;
						НазваниеСуда=ВыборкаДетальныеЗаписи.НазваниеСуда;
						АдресСудаВкладка=ВыборкаДетальныеЗаписи.АдресСудаВкладка;
						ТелефонВкладкаСуд=ВыборкаДетальныеЗаписи.ТелефонВкладкаСуд;
						СудьяВкладка=ВыборкаДетальныеЗаписи.СудьяВкладка;
						Получатель=ВыборкаДетальныеЗаписи.Получатель;
						ИННПолучатель=ВыборкаДетальныеЗаписи.ИННПолучатель;
						КПППолучатель=ВыборкаДетальныеЗаписи.КПППолучатель;
						БИКПолучатель=ВыборкаДетальныеЗаписи.БИКПолучатель;
						ОКАТОПолучатель=ВыборкаДетальныеЗаписи.ОКАТОПолучатель;
						РасчСчетВкладкаСуд=ВыборкаДетальныеЗаписи.РасчСчетВкладкаСуд;
						КорСчетВкладкаСуд=ВыборкаДетальныеЗаписи.КорСчетВкладкаСуд;
						БанкВкладкаСуд=ВыборкаДетальныеЗаписи.БанкВкладкаСуд;
						КБКВкладкаСуд=ВыборкаДетальныеЗаписи.КБКВкладкаСуд;
						
						РасчетнаяСуммаГоспошлина=ВыборкаДетальныеЗаписи.РасчетнаяСуммаГоспошлина;
						
						
						
						
					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

					
				
	

КонецПроцедуры





&НаСервере
Процедура СохранитьНаСервере(спр,дог)
	// Вставить содержимое обработчика.
	
	     Если  НЕ спр.Пустая() Тогда
			 
			 спрОбъект=спр.ПолучитьОбъект();
			 
			 ВремТабл = ТБСуды.Выгрузить();
			 
			 НачатьТранзакцию();

		    Попытка
				
				 спрОбъект.ТипСуда=ТипСуда;
				 
				 спрОбъект.НазваниеСуда=НазваниеСуда;
				 спрОбъект.АдресСудаВкладка=АдресСудаВкладка;
				 спрОбъект.ТелефонВкладкаСуд=ТелефонВкладкаСуд;
				 спрОбъект.СудьяВкладка=СудьяВкладка;
				 спрОбъект.Получатель=Получатель;
				 //спрОбъект.ИННПолучатель=ИННПолучатель;
				 //спрОбъект.КПППолучатель=КПППолучатель;
				 //спрОбъект.БИКПолучатель=БИКПолучатель;
				 //спрОбъект.ОКАТОПолучатель=ОКАТОПолучатель;
				 //спрОбъект.РасчСчетВкладкаСуд=РасчСчетВкладкаСуд;
				 //спрОбъект.КорСчетВкладкаСуд=КорСчетВкладкаСуд;
				 //спрОбъект.БанкВкладкаСуд=БанкВкладкаСуд;
				 //спрОбъект.КБКВкладкаСуд=КБКВкладкаСуд;
				 //
				 спрОбъект.РасчетнаяСуммаГоспошлина=РасчетнаяСуммаГоспошлина;
				 
				 
				 спрОбъект.ТЧ.Загрузить(ВремТабл);
				 
				 
				спрОбъект.Записать();
				
				ЗафиксироватьТранзакцию();
				Сообщить("Ок");
		    Исключение
		        ОтменитьТранзакцию();
				ТекстОшибки = ОписаниеОшибки();
				Сообщить(ТекстОшибки);
		        
		    КонецПопытки;
					 
			 
			 
			 
		 Иначе 	 
			 
			 //Запишу в справочник новый элемент
			 новыйВкладкаИнфСуд=Справочники.ВкладкаСудСудебнаяСтадияСписокДел.СоздатьЭлемент();
			 новыйВкладкаИнфСуд.Владелец= дог;
			 
			 новыйВкладкаИнфСуд.НазваниеСуда=НазваниеСуда;
			 
			 новыйВкладкаИнфСуд.АдресСудаВкладка=АдресСудаВкладка;
			 новыйВкладкаИнфСуд.ТелефонВкладкаСуд=ТелефонВкладкаСуд;
			 новыйВкладкаИнфСуд.СудьяВкладка=СудьяВкладка;
			 новыйВкладкаИнфСуд.Получатель=Получатель;
			 новыйВкладкаИнфСуд.ТипСуда=ТипСуда;

			 
			 //новыйВкладкаИнфСуд.ИННПолучатель=ИННПолучатель;
			 //новыйВкладкаИнфСуд.КПППолучатель=КПППолучатель;
			 //новыйВкладкаИнфСуд.БИКПолучатель=БИКПолучатель;
			 //новыйВкладкаИнфСуд.ОКАТОПолучатель=ОКАТОПолучатель;
			 //новыйВкладкаИнфСуд.РасчСчетВкладкаСуд=РасчСчетВкладкаСуд;
			 //новыйВкладкаИнфСуд.КорСчетВкладкаСуд=КорСчетВкладкаСуд;
			 //новыйВкладкаИнфСуд.БанкВкладкаСуд=БанкВкладкаСуд;
			 //новыйВкладкаИнфСуд.КБКВкладкаСуд=КБКВкладкаСуд; 
			 //новыйВкладкаИнфСуд.РасчетнаяСуммаГоспошлина=РасчСчетВкладкаСуд;
			 //
			 // Табличная часть
			 
			  Для каждого стр  Из ТБСуды Цикл
			        стртч= новыйВкладкаИнфСуд.ТЧ.Добавить();
					стртч.ДатаЗаседания=стр.ДатаЗаседания;
					стртч.Инстанция=стр.Инстанция;
					стртч.Суд=стр.Суд;
					
					
			  
			  КонецЦикла; 
			 
			 новыйВкладкаИнфСуд.Записать();
			 
			 

	     КонецЕсли;

	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
		 
		 СохранитьНаСервере(СпрВкладкаСудСудебнаяСтадияСписокДел,ссылкаСписокДел);
		        
	
	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗадолженностьНаСервере()
	
	
	 НачатьТранзакцию();

    Попытка
		
         МенеджерЗаписиПодача = РегистрыСведений.ЗадолженностьПодача.СоздатьМенеджерЗаписи();
	     МенеджерЗаписиПодача.Договор =ссылкаДоговор;
		 МенеджерЗаписиПодача.ВсегоЗадолженность=ВсегоЗадолженностьВклПодача;
		 МенеджерЗаписиПодача.ТекущийОсновнойДолг=ТекущийОсновнойДолгВклПодача;
		 МенеджерЗаписиПодача.ТекущиеПроценты=ТекущиеПроцентыВклЗадолженностьВклПодача;
		 МенеджерЗаписиПодача.ПросроченныйОсновнойДолг=ПросроченныйОсновнойДолгВклПодача;
		 МенеджерЗаписиПодача.Неустойка=НеустойкаВклЗадолженностьПодача;
		 МенеджерЗаписиПодача.Госпошлина=ГоспошлинаВклПодача;
		 МенеджерЗаписиПодача.Прочее=ПрочееВклПодача;
		 МенеджерЗаписиПодача.Период=ТекущаяДата();
		 МенеджерЗаписиПодача.Записать();
		 
		 
		 МенеджерЗаписиРешение = РегистрыСведений.ЗадолженностьРешение.СоздатьМенеджерЗаписи();
	     МенеджерЗаписиРешение.Договор =ссылкаДоговор;
		 МенеджерЗаписиРешение.ВсегоЗадолженность=ВсегоЗадолженностьВклРешение;
		 МенеджерЗаписиРешение.ТекущийОсновнойДолг=ТекущийОсновнойДолгВклРешение;
		 МенеджерЗаписиРешение.ТекущиеПроценты=ТекущиеПроцентыВклЗадолженностьВклРешение;
		 МенеджерЗаписиРешение.ПросроченныйОсновнойДолг=ПросроченныйОсновнойДолгВклРешение;
		 МенеджерЗаписиРешение.Неустойка=НеустойкаВклЗадолженностьРешение;
		 МенеджерЗаписиРешение.Госпошлина=ГоспошлинаВклРешение;
		 МенеджерЗаписиРешение.Прочее=ПрочееВклРешение;
		 МенеджерЗаписиРешение.Период=ТекущаяДата();
		 МенеджерЗаписиРешение.Записать();
		 

		 
		 
		 
		
		ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
    КонецПопытки;
	
		
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьЗадолженность(Команда)
	СохранитьЗадолженностьНаСервере();
	Сообщить("Ок");
КонецПроцедуры




&НаКлиенте
Процедура Документы(Команда)
	
	
	     Если  НЕ СпрВклСудСудебнаяСтадия.Пустая() Тогда
		 
				 ЗаполнитьИнфСудПол(ссылкаДоговор);

	     КонецЕсли;

	
	     Оповещение = Новый ОписаниеОповещения("БольшеНеПоказыватьНапоминаниеЗавершение", ЭтотОбъект);
		 парамСтруктура=Новый Структура;
		 парамСтруктура.Вставить("ДоговорСсылка",ссылкаДоговор);
		 парамСтруктура.Вставить("ДолжникФИО",Объект.ФИОДолжника);
		 парамСтруктура.Вставить("ДолжникДатаРожд",Объект.ДатаРожденияДолжника);
		 парамСтруктура.Вставить("ДолжникАдоес",Объект.АдресДолжника);
		 парамСтруктура.Вставить("ДолжникМестоРождения",Объект.МестоРожденияДолжника);   
		 парамСтруктура.Вставить("ДолжникПаспорт",Объект.ПаспртныеДанныеДолжника);
		 
		 парамСтруктура.Вставить("ДолжникПаспортДатаВыдачи",Объект.ПаспортДатаВыдачи);
		 парамСтруктура.Вставить("ПаспортКемВыдан",Объект.ПаспортКемВыдан);
		 
		 
		 
		 парамСтруктура.Вставить("Кредитор",Объект.ПервоначальныйКредитор);
		 
		 
		 Если  Объект.ПервоначальныйНомерКредитДоговора<>"" Тогда
			 
			парамСтруктура.Вставить("ПервоначальныйНомерКредитДоговора",Объект.ПервоначальныйНомерКредитДоговора);
			парамСтруктура.Вставить("ПервоначальныйКредитор0",Объект.ПервоначальныйКредитор0);
			
			 
		ИНАЧЕ	 
			
			парамСтруктура.Вставить("ПервоначальныйНомерКредитДоговора","");
			парамСтруктура.Вставить("ПервоначальныйКредитор0",Неопределено);
			 
			 
		 
		 КонецЕсли;
		 
		 
		 парамСтруктура.Вставить("НомерДоговораЦессии",Объект.НомерДоговораЦессии);
		 
		 парамСтруктура.Вставить("ДатаЦессии",Объект.ДатаЦессии);
		 
		 парамСтруктура.Вставить("НомерКредитногоДоговора",Объект.НомерКредитДоговора);
		 
		 парамСтруктура.Вставить("ДатаКредитногоДоговора",Объект.ДатаКредитногоДоговора);
		 
		 
		 
		 парамСтруктура.Вставить("НазваниеСуда",Объект.НаименованиеСуда);
		 
		 парамСтруктура.Вставить("АдресСудаВкладка",Объект.АдресСуда);
		 
		  
		 // передать текущего пользователя
		 
		 
		 
		   парамСтруктура.Вставить("Исполнитель",ткПользователь);
		 
		 
		 
		 парамСтруктура.Вставить("СуммаКредита",Объект.СуммаКредита);
		 
		 парамСтруктура.Вставить("НомерСудебногоДела",Объект.НомерСудебногоДела);
		 
		 парамСтруктура.Вставить("ДатаСудебногоДела",Объект.ДатаСудебногоДела);
		 
		 
		
		 
		 
		 
		 
		 
		 
		 
         ОткрытьФорму("Обработка.СудебнаяСтадия.Форма.ФормаВыборДокумента",парамСтруктура,ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
 КонецПроцедуры
	 
	 
&НаКлиенте
Процедура БольшеНеПоказыватьНапоминаниеЗавершение(БольшеНеПоказыватьНапоминание, Параметры) Экспорт

	
	 ЗаполнитьТБСписокДокументов (ссылкаДоговор);
	 ТБРеестрДляОтправкиЗаполнить();

  
  
КонецПроцедуры




&НаКлиенте
Процедура ТБСписокДокументовПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
	  ТекСтрокаТБД= Элемент;
	
  КонецПроцедуры
  
  

  

&НаКлиенте
Процедура РедактироватьДокумент(Команда)
	
	 
	
	Если НЕ ТекСтрокаТБД.ТекущиеДанные.is_post Тогда
		
		 спрЗаявлОПрПр = ТекСтрокаТБД.ТекущиеДанные.ДокументСсылка;
			 
			 
			 ПараметрыФормы = Новый Структура("Ключ", спрЗаявлОПрПр);
			 
		     Оповещение = Новый ОписаниеОповещения("БольшеНеПоказыватьНапоминаниеЗавершение", ЭтотОбъект);
			 
			 
			 Если ТипЗнч(спрЗаявлОПрПр)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
			 
			 	    ОткрытьФорму("Справочник.ЗаявлениеОВыдачеСудебногоПриказа.Форма.ФормаЭлемента", ПараметрыФормы,,,,,Оповещение);
			 
			 КонецЕсли;
			 
			  Если ТипЗнч(спрЗаявлОПрПр)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда
			 
			 	      ОткрытьФорму("Справочник.ЗаявлениеОПроцессуальномПравопреемстве.Форма.ФормаЭлемента", ПараметрыФормы,,,,,Оповещение);

			 
			 КонецЕсли;

			 
			 
			 
			 
								 
			СервисОткр=Ложь;	
			
	Иначе
		 Оповещение = Новый ОписаниеОповещения("ОповещениеНеРедактируется", ЭтотОбъект);	
				
		 ПоказатьОповещениеПользователя("Установлен флаг -На почту",Оповещение,"Уже нельзя редактировать",БиблиотекаКартинок.ДиалогВосклицание);
		 
	КонецЕсли;
	
	
	
КонецПроцедуры



&НаКлиенте
Процедура ОповещениеНеРедактируется(Результат, ДополнительныеПараметры) Экспорт

	
	

КонецПроцедуры




&НаСервере
Процедура УдалитьДокументНаСервере(guid,спрЗаявлОПрПр)

	
	
	 Если ТипЗнч(спрЗаявлОПрПр)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
	 
	 	      ссылкаД=Справочники.ЗаявлениеОВыдачеСудебногоПриказа.ПолучитьСсылку(guid);
			
			  ссылкаД.ПолучитьОбъект().Удалить();

	 
	 КонецЕсли;

	 
	 Если ТипЗнч(спрЗаявлОПрПр)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда
	 
	 	      ссылкаД=Справочники.ЗаявлениеОПроцессуальномПравопреемстве.ПолучитьСсылку(guid);
			
			  ссылкаД.ПолучитьОбъект().Удалить();

	 
	 КонецЕсли;

	  
	 
	
			
			
	

КонецПроцедуры



&НаКлиенте
Процедура УдалитьДокумент(Команда)
	
	   Если НЕ ТекСтрокаТБД.ТекущиеДанные.is_post Тогда
	
			спрЗаявлОПрПр = ТекСтрокаТБД.ТекущиеДанные.ДокументСсылка;
			
			Если спрЗаявлОПрПр<>Неопределено Тогда
				
				
					guid= спрЗаявлОПрПр.УникальныйИдентификатор();
					
					
					  УдалитьДокументНаСервере(guid,спрЗаявлОПрПр);
					
					
					 ЗаполнитьТБСписокДокументов (ссылкаДоговор);

				
			
			КонецЕсли;
			
			 СервисОткр=Ложь;
			 Оповестить("ОбновитьСписок1");
			 
	 Иначе
			 
			  Оповещение = Новый ОписаниеОповещения("ОповещениеНеРедактируется", ЭтотОбъект);	
				
		 ПоказатьОповещениеПользователя("Установлен флаг -На почту",Оповещение,"Уже нельзя удалить.",БиблиотекаКартинок.ДиалогВосклицание);
		 

			 
	  КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьЮрлицоВклСуд (guid)

	
	       ссылкаЮрЛ=Справочники.ЮридическиеЛица.ПолучитьСсылку(guid);
		   
		                ИННПолучатель=ссылкаЮрЛ.ИННПолучатель;
						КПППолучатель=ссылкаЮрЛ.КПППолучатель;
						БИКПолучатель=ссылкаЮрЛ.БИКПолучатель;
						ОКАТОПолучатель=ссылкаЮрЛ.ОКАТОПолучатель;
						РасчСчетВкладкаСуд=ссылкаЮрЛ.РасчСчетПолучатель;
						КорСчетВкладкаСуд=ссылкаЮрЛ.КорСчетПолучатель;
						БанкВкладкаСуд=ссылкаЮрЛ.БанкПолучатель;
						КБКВкладкаСуд=ссылкаЮрЛ.КБКПолучатель;
						

	

КонецПроцедуры

 

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	                    guid= Получатель.УникальныйИдентификатор();
						
						ЗаполнитьЮрлицоВклСуд (guid);
									
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьExcelФайлДляРеестра(Команда)
	
	   Если ТБРеестрДляОтправки.Количество()>0 Тогда
	   
	   	      ТабДокумент= ПолучитьМакетНаСервере();
			
		      ТабДокумент.Показать(Строка(Объект.Исполнитель)+ "_Реестр");

			   ЗаполнитьТБСписокДокументов (ссылкаДоговор);

			   ТБРеестрДляОтправкиЗаполнить();

	   
	   КонецЕсли;
	
			 	
	
КонецПроцедуры




&НаСервере
Функция ПолучитьМакетНаСервере()
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб=Истина;
	ТабДокумент.ТолькоПросмотр=Истина;

	
	ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
    Макет =  ОтчетОбъект.ПолучитьМакет("МакетРеестрПочта"); 
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	 	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	
    ТабДокумент.Вывести(ОбластьШапка);
	
	
	Если ТБРеестрДляОтправки.Количество()>0 Тогда
	         	Для каждого Стр  Из ТБРеестрДляОтправки  Цикл
				
				ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
				
				ОбластьСтрока.Параметры.ADDRESSLINE=Стр.АдресСуда;
				
				ОбластьСтрока.Параметры.ADRESAT=Стр.НаименованиеСуда;
				
				ОбластьСтрока.Параметры.COMMENT=Строка(Стр.ФИОДолжника)+","+Стр.НазваниеДокумента+","+ Стр.КредитныйДоговор.НомерДоговора+","+Объект.Исполнитель.Наименование+","+"%"+ Стр.GUID+"%";
				
				УстановитьФлагPost(Стр.GUID,Стр.ДокументСсылка);
				
				 ТабДокумент.Вывести(ОбластьСтрока);
			
			 КонецЦикла;
			 
			 
		 Иначе
				Для каждого Стр  Из ТБРеестрДляОтправкиАрхив  Цикл
				
				ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
				
				ОбластьСтрока.Параметры.ADDRESSLINE=Стр.АдресСуда;
				
				ОбластьСтрока.Параметры.ADRESAT=Стр.НаименованиеСуда;
				
				ОбластьСтрока.Параметры.COMMENT=Строка(Стр.ФИОДолжника)+","+Стр.НазваниеДокумента+","+ Стр.КредитныйДоговор.НомерДоговора+","+Объект.Исполнитель.Наименование+","+"%"+ Стр.GUID+"%";
				
				УстановитьФлагPost(Стр.GUID,Стр.ДокументСсылка);
				
				 ТабДокумент.Вывести(ОбластьСтрока);
			
			 КонецЦикла;
			  
			 
	
	КонецЕсли;
	
	
	
	
	

	

    Возврат  ТабДокумент;
    
КонецФункции


&НаСервере
Функция УстановитьФлагPost(guid,спрСсылка)

	  
	     
	 Если ТипЗнч(спрСсылка)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
	  
			спрОб= спрСсылка.ПолучитьОбъект();
			спрОб.is_post=Истина;
			спрОб.Записать();
			
			
	 КонецЕсли;

	 
	 Если ТипЗнч(спрСсылка)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда
	 	
			 спрОб= спрСсылка.ПолучитьОбъект();
			 спрОб.is_post=Истина;
			 спрОб.Записать();
			 
	 КонецЕсли;

	
	

КонецФункции // ()

&НаСервере
Функция СнятьФлагPost(guid,спрСсылка)

	  
	     
	 Если ТипЗнч(спрСсылка)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
	  
			спрОб= спрСсылка.ПолучитьОбъект();
			спрОб.is_post=Ложь;
			спрОб.Записать();
			
			
	 КонецЕсли;

	 
	 Если ТипЗнч(спрСсылка)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда
	 	
			 спрОб= спрСсылка.ПолучитьОбъект();
			 спрОб.is_post=Ложь;
			 спрОб.Записать();
			 
	 КонецЕсли;

	
	

КонецФункции // ()



&НаКлиенте
Процедура СнятьФлагПост(Команда)
	// Вставить содержимое обработчика.
	      спрЗаявлОПрПр = ТекСтрокаТБД.ТекущиеДанные.ДокументСсылка;
		  
	      guid= спрЗаявлОПрПр.УникальныйИдентификатор();
		  
		  СнятьФлагPost(guid,спрЗаявлОПрПр);
		  
		  ЗаполнитьТБСписокДокументов (ссылкаДоговор);

	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДокумента(Команда)
	
	  спрЗаявлОПрПр = ТекСтрокаТБД.ТекущиеДанные.ДокументСсылка;
	  
	  #Область  ЗаявлениеОПроцессуальномПравопреемстве

	   Если ТипЗнч(спрЗаявлОПрПр)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда
		   видД="ШаблонЗаявлениеОПроцессуальномПравопреемстве";
		   
		   ДвоичныеДанные=ПолучитьФайлИзХран(видД);
		   
		   Если ДвоичныеДанные<>Неопределено  Тогда
			   
			   Попытка
				   
				    спрОбСтруктура= ПолучитьДанныеДляПечати(спрЗаявлОПрПр);
				    имяД=Строка(Объект.Исполнитель)+"_ЗаявлениеОПроцессуальномПравопреемстве";

					ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);

					
					 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				 
				   MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеСуда);
				   
				   //АдресСуда
				   MSWordDoc.Bookmarks("АдресСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресСуда);
				   
				   //ФИОДолжника
				   MSWordDoc.Bookmarks("ФИОДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 
					//ДолжникаДатаРождения
	  		       MSWordDoc.Bookmarks("ДолжникаДатаРождения").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаРожденияДолжника;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
					//ДолжникАдрес
				   MSWordDoc.Bookmarks("ДолжникАдрес").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресРегистрацииДолжника);
				 
                 
					//СудПоле
				   MSWordDoc.Bookmarks("СудПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеСуда+" ");
				   
				   
				  // НомерДелаВСуде
				   MSWordDoc.Bookmarks("НомерДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерСудебногоДела);
				   
				   //ПервоначальныйКредитор
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				 
				   
				   //ФИОДолжникПоле
				   MSWordDoc.Bookmarks("ФИОДолжникПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 
				   //НомерКредитногоДоговора
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   //ДатаКредитногоДоговора
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
					
				   //ПервоначальныйКредитор_Между
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //НомерЦессии
				   MSWordDoc.Bookmarks("НомерЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				 

				   //ДатаЦессии
				    MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
				   
					//НомерКредитногоДоговора_Между
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_Между
				    MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				  
				   
				   //ПервоначальныйКредитор_М_между
				     MSWordDoc.Bookmarks("ПервоначальныйКредитор_М_между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //ФИОДолжника_Между
				     MSWordDoc.Bookmarks("ФИОДолжника_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 

				   //НомерЦессии_Переход
				    MSWordDoc.Bookmarks("НомерЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   //ДатаЦессии_Переход
				     MSWordDoc.Bookmarks("ДатаЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				
				   
				   //ПервоначальныйКредитор_Также
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Также").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   //НомерДелаВСуде_Прошу
				   MSWordDoc.Bookmarks("НомерДелаВСуде_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерСудебногоДела);
				   
				   //ДатаДелаВСуде
				   MSWordDoc.Bookmarks("ДатаДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаСудебногоДела;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   //ПервоначальныйКредитор_Прошу
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //ФИОДолжника_Прошу
				   MSWordDoc.Bookmarks("ФИОДолжника_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));

				   
				   //НомерКредитногоДоговора_Прошу
				     MSWordDoc.Bookmarks("НомерКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   //ДатаКредитногоДоговора_Прошу
				      MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
				   MSWordDoc.Application.Selection.TypeText(дат);
				  
				   
				   //ПервоначальныйКредитор_Прошу_2
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу_2").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   
				   //НомерЦессии_Приложение
				   MSWordDoc.Bookmarks("НомерЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   
				   //ДатаЦессии_Приложение
				        MSWordDoc.Bookmarks("ДатаЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				

				   //НомерЦессии_Приложение_Выписка
				     MSWordDoc.Bookmarks("НомерЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   
				   //ДатаЦессии_Приложение_Выписка
				          MSWordDoc.Bookmarks("ДатаЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				

				   //ДатаЗаявления
				     MSWordDoc.Bookmarks("ДатаЗаявления").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=ТекущаяДата();
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   
				  MSWord.Visible=1;
				  MSWord.Activate();

				  

					
					
					
			   
			   Исключение
				   Сообщить("Ошибка----- Печать Заявление О Процессуальном Правопреемстве");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

				   
			   КонецПопытки;

			   
		   
			КонецЕсли;	
				
		КонецЕсли;
		
		#КонецОбласти 
		
		
		
		 Если ТипЗнч(спрЗаявлОПрПр)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
		   видД="ШаблонЗаявлениеОВыдачеСудебногоПриказа";
		   
		     ДвоичныеДанные=ПолучитьФайлИзХран(видД);
			 
			 Если ДвоичныеДанные<>Неопределено  Тогда
				 
				 Попытка
					 
				    спрОбСтруктура= ПолучитьДанныеДляПечати(спрЗаявлОПрПр);
				    имяД=Строка(Объект.Исполнитель)+"__ЗаявлениеОВыдачеСудебногоПриказа";

					ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);

					
				 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				
				  MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				  MSWordDoc.Application.Selection.Font.Color = 1;
                  MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.НаименованиеСуда));

				  //АдресСуда
				   MSWordDoc.Bookmarks("АдресСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресСуда);

				   
				   //ФИОДолжника 
				   MSWordDoc.Bookmarks("ФИОДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				   
				   //ДатаРожденияДолжника
				    MSWordDoc.Bookmarks("ДатаРожденияДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаРожденияДолжника;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //МестоРожденияДолжника
				   MSWordDoc.Bookmarks("МестоРожденияДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.МестоРожденияДолжника);
				   
				   //ПаспортНомер
				   MSWordDoc.Bookmarks("ПаспортНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ПаспортныеДанныеДолжника);
				   
				   
				   //ПаспортДатаВыдачи
				   MSWordDoc.Bookmarks("ПаспортДатаВыдачи").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ПаспортДатаВыдачи;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   //АдресРегистрации
				    MSWordDoc.Bookmarks("АдресРегистрации").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресРегистрацииДолжника);
				   
				   
				   //СуммаЗадолженности
				     MSWordDoc.Bookmarks("СуммаЗадолженности").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
					//ГосПошлина
				   MSWordDoc.Bookmarks("ГосПошлина").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ГоспошлинаНаша);
				   
				   //ПервоначальныйКредитор
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   //ФИОДолжника_Между
				     MSWordDoc.Bookmarks("ФИОДолжника_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				   
				   
				   //НомерКредитногоДоговора
				       MSWordDoc.Bookmarks("НомерКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   //ДатаКредитногоДоговора
				     MSWordDoc.Bookmarks("ДатаКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_заключенной
				      MSWordDoc.Bookmarks("ПервоначальныйКредитор_заключенной").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				  
				   //СуммаКредита
				         MSWordDoc.Bookmarks("СуммаКредита").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.СуммаКредита);
				   
				   
				   //ДатаЦессии
				        MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
				   //ПервоначальныйКредитор_ДатаЦессии
				         MSWordDoc.Bookmarks("ПервоначальныйКредитор_ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   //НомерЦессии
				      MSWordDoc.Bookmarks("НомерЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				   
				   
				   //ДатаЦессии_БылЗаключен
				       MSWordDoc.Bookmarks("ДатаЦессии_БылЗаключен").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //НомерКредитногоДоговора_кредитномудого
				         MSWordDoc.Bookmarks("НомерКредитногоДоговора_кредитномудого").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   
				   //ДатаКредитногоДоговора_кредитномудог
				       MSWordDoc.Bookmarks("ДатаКредитногоДоговора_кредитномудог").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_заключенного_межд
				        MSWordDoc.Bookmarks("ПервоначальныйКредитор_заключенного_межд").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   
				   //ФИОДолжника_заключенного_между
				      MSWordDoc.Bookmarks("ФИОДолжника_заключенного_между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				  

				   //ДатаЦессии_уступаемых
				         MSWordDoc.Bookmarks("ДатаЦессии_уступаемых").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

					//ОбщаяСуммаЗадолженностиПоЦессии
			       MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
				   
				   //ОбщаяСуммаЗадолженностиПоЦессии_составля
				    MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии_составля").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
				   //НомерКредитногоДоговора_выполнении
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора_выполнении").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_выполнении
				         MSWordDoc.Bookmarks("ДатаКредитногоДоговора_выполнении").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ФИОДолжника_Прошу_выдать
				         MSWordDoc.Bookmarks("ФИОДолжника_Прошу_выдать").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				  
				   
					//ОбщаяСуммаЗадолженностиПоЦессии_Прошу
					  MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				  
				   //НомерКредитногоДоговора_Прошу
				    MSWordDoc.Bookmarks("НомерКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_Прошу
				          MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_Прошу
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   
				   //ФИОДолжника_Прошу_Взыскать
				   MSWordDoc.Bookmarks("ФИОДолжника_Прошу_Взыскать").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				   
				   
				   //СуммаГоспошлины_Прошу
				      MSWordDoc.Bookmarks("СуммаГоспошлины_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ГоспошлинаНаша);
				 
				   
				   //НомерКредитногоДоговора_Приложение
				      MSWordDoc.Bookmarks("НомерКредитногоДоговора_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   
				   //ДатаКредитногоДоговора_Приложение
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   //НомерЦессии_Приложение
				          MSWordDoc.Bookmarks("НомерЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				   
				   //ДатаЦессии_Приложение
				          MSWordDoc.Bookmarks("ДатаЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ДатаЦессии_Приложение_5
				    MSWordDoc.Bookmarks("ДатаЦессии_Приложение_5").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
					//ДатаЗаявления
				             MSWordDoc.Bookmarks("ДатаЗаявления").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=ТекущаяДата();
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   
				   
				   
				   
				 
				  MSWord.Visible=1;
				  MSWord.Activate();

					
					
					
					
				 	
				 
				 Исключение
					 
					  Сообщить("Ошибка----- Печать Заявление О Выдаче Судебного Приказа");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

					 
				 КонецПопытки;
				 
				 

				 
				 
			  КонецЕсли; 	 
		   
		   
		   
		 КонецЕсли;
		
		
 
	  
	  
	
	
КонецПроцедуры


&НаСервере
Функция ПолучитьДанныеДляПечати(ссылкаДок)

	  данныеСтруктура=Новый Структура;
      спрОб= ссылкаДок.ПолучитьОбъект();

	  
	   Если ТипЗнч(ссылкаДок)=Тип("СправочникСсылка.ЗаявлениеОПроцессуальномПравопреемстве")  Тогда

		    данныеСтруктура.Вставить("НаименованиеСуда",Строка(спрОб.НаименованиеСуда));
			данныеСтруктура.Вставить("АдресСуда",спрОб.АдресСуда);
			данныеСтруктура.Вставить("ФИОДолжника",Строка(спрОб.ФИОДолжника));
			данныеСтруктура.Вставить("ДатаРожденияДолжника",спрОб.ДатаРожденияДолжника);
			данныеСтруктура.Вставить("АдресРегистрацииДолжника",спрОб.АдресРегистрацииДолжника);
			данныеСтруктура.Вставить("НаименованиеПервоначальногоКредитора",спрОб.НаименованиеПервоначальногоКредитора);
			данныеСтруктура.Вставить("НомерДоговораЦессии",спрОб.НомерДоговораЦессии);
			данныеСтруктура.Вставить("ДатаДоговораЦессии",спрОб.ДатаДоговораЦессии);
			данныеСтруктура.Вставить("НомерКредитногоДоговора",спрОб.НомерКредитногоДоговора);
			данныеСтруктура.Вставить("ДатаКредитногоДоговора",спрОб.ДатаКредитногоДоговора);
			данныеСтруктура.Вставить("НомерСудебногоДела",спрОб.НомерСудебногоДела);
			данныеСтруктура.Вставить("ДатаСудебногоДела",спрОб.ДатаСудебногоДела);
			
			
		   
	   КонецЕсли;
	  
	    Если ТипЗнч(ссылкаДок)=Тип("СправочникСсылка.ЗаявлениеОВыдачеСудебногоПриказа")  Тогда
	
			данныеСтруктура.Вставить("НаименованиеСуда",Строка(спрОб.НаименованиеСуда));
			данныеСтруктура.Вставить("АдресСуда",спрОб.АдресСуда);
			данныеСтруктура.Вставить("ФИОДолжника",Строка(спрОб.ФИОДолжника));
			данныеСтруктура.Вставить("ДатаРожденияДолжника",спрОб.ДатаРожденияДолжника);
			данныеСтруктура.Вставить("АдресРегистрацииДолжника",спрОб.АдресРегистрацииДолжника);
			данныеСтруктура.Вставить("НаименованиеПервоначальногоКредитора",спрОб.НаименованиеПервоначальногоКредитора);
			данныеСтруктура.Вставить("НомерДоговораЦессии",спрОб.НомерДоговораЦессии);
			данныеСтруктура.Вставить("ДатаДоговораЦессии",спрОб.ДатаДоговораЦессии);
			данныеСтруктура.Вставить("НомерКредитногоДоговора",спрОб.НомерКредитногоДоговора);
			данныеСтруктура.Вставить("ДатаКредитногоДоговора",спрОб.ДатаКредитногоДоговора);
			данныеСтруктура.Вставить("ПаспортныеДанныеДолжника",спрОб.ПаспортныеДанныеДолжника);
			данныеСтруктура.Вставить("ОбщаяСуммаЗадолженностиПоДоговору",спрОб.ОбщаяСуммаЗадолженностиПоДоговору);
			
			данныеСтруктура.Вставить("ГоспошлинаНаша",спрОб.ГоспошлинаНаша);
			данныеСтруктура.Вставить("СуммаКредита",спрОб.СуммаКредита);
			данныеСтруктура.Вставить("ПаспортДатаВыдачи",спрОб.ПаспортДатаВыдачи);
			
			данныеСтруктура.Вставить("МестоРожденияДолжника",спрОб.МестоРожденияДолжника);
			
			
			//
			
		   
	   КонецЕсли;

	  
	  
	  
	  
	  
	  Возврат данныеСтруктура;
	

КонецФункции // ()

	


&НаСервере
Функция ПолучитьФайлИзХран(видДокумента)
	
	 
	   НайтиШабл = Справочники.ШаблоныЮристы.НайтиПоНаименованию(видДокумента,ИСТИНА);
	 
	     Двоичные=Неопределено;
		 
		 Если НайтиШабл<>Неопределено Тогда
		 
		 	 Если НЕ НайтиШабл.ПУСТАЯ() Тогда  
 
        		Хран=НайтиШабл.ФайлШаблона;
        		Двоичные=Хран.Получить(); 
    			
    		КонецЕсли;
			

		 
		 КонецЕсли; 
    	
			
	  Возврат Двоичные;		
	 

КонецФункции // ()


&НаКлиенте
Процедура ПечатьЗаявлениеОПроцессуальномПравопреемстве(спрОбСтруктура)

	       видД="ШаблонЗаявлениеОПроцессуальномПравопреемстве";
		   
		   ДвоичныеДанные=ПолучитьФайлИзХран(видД);
		   
		   Если ДвоичныеДанные<>Неопределено  Тогда
			   
			   Попытка
				   
				    имяД=Строка(Объект.Исполнитель)+"_ЗаявлениеОПроцессуальномПравопреемстве";

					ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);

					
					 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				 
				   MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеСуда);
				   
				   //АдресСуда
				   MSWordDoc.Bookmarks("АдресСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресСуда);
				   
				   //ФИОДолжника
				   MSWordDoc.Bookmarks("ФИОДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 
					//ДолжникаДатаРождения
	  		       MSWordDoc.Bookmarks("ДолжникаДатаРождения").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаРожденияДолжника;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
					//ДолжникАдрес
				   MSWordDoc.Bookmarks("ДолжникАдрес").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресРегистрацииДолжника);
				 
                 
					//СудПоле
				   MSWordDoc.Bookmarks("СудПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеСуда+" ");
				   
				   
				  // НомерДелаВСуде
				   MSWordDoc.Bookmarks("НомерДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерСудебногоДела);
				   
				   //ПервоначальныйКредитор
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				 
				   
				   //ФИОДолжникПоле
				   MSWordDoc.Bookmarks("ФИОДолжникПоле").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 
				   //НомерКредитногоДоговора
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   //ДатаКредитногоДоговора
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
					
				   //ПервоначальныйКредитор_Между
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //НомерЦессии
				   MSWordDoc.Bookmarks("НомерЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				 

				   //ДатаЦессии
				    MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
				   
					//НомерКредитногоДоговора_Между
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_Между
				    MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				  
				   
				   //ПервоначальныйКредитор_М_между
				     MSWordDoc.Bookmarks("ПервоначальныйКредитор_М_между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //ФИОДолжника_Между
				     MSWordDoc.Bookmarks("ФИОДолжника_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				 

				   //НомерЦессии_Переход
				    MSWordDoc.Bookmarks("НомерЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   //ДатаЦессии_Переход
				     MSWordDoc.Bookmarks("ДатаЦессии_Переход").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);
				
				   
				   //ПервоначальныйКредитор_Также
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Также").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   //НомерДелаВСуде_Прошу
				   MSWordDoc.Bookmarks("НомерДелаВСуде_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерСудебногоДела);
				   
				   //ДатаДелаВСуде
				   MSWordDoc.Bookmarks("ДатаДелаВСуде").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаСудебногоДела;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   //ПервоначальныйКредитор_Прошу
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   //ФИОДолжника_Прошу
				   MSWordDoc.Bookmarks("ФИОДолжника_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));

				   
				   //НомерКредитногоДоговора_Прошу
				     MSWordDoc.Bookmarks("НомерКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   //ДатаКредитногоДоговора_Прошу
				      MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
				   MSWordDoc.Application.Selection.TypeText(дат);
				  
				   
				   //ПервоначальныйКредитор_Прошу_2
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу_2").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");

				   
				   
				   //НомерЦессии_Приложение
				   MSWordDoc.Bookmarks("НомерЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   
				   //ДатаЦессии_Приложение
				        MSWordDoc.Bookmarks("ДатаЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				

				   //НомерЦессии_Приложение_Выписка
				     MSWordDoc.Bookmarks("НомерЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");

				   
				   //ДатаЦессии_Приложение_Выписка
				          MSWordDoc.Bookmarks("ДатаЦессии_Приложение_Выписка").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
                   MSWordDoc.Application.Selection.TypeText(дат);
				

				   //ДатаЗаявления
				     MSWordDoc.Bookmarks("ДатаЗаявления").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=ТекущаяДата();
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				        MSWord.Visible=0;
						
						//MSWord.Activate();
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();


					
					
					
			   
			   Исключение
				   Сообщить("Ошибка----- Печать Заявление О Процессуальном Правопреемстве");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

				   
			   КонецПопытки;

	     КонецЕсли; 
	

КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗаявлениеОВыдачеСудебногоПриказа (спрОбСтруктура)

	
	видД="ШаблонЗаявлениеОВыдачеСудебногоПриказа";
		   
		     ДвоичныеДанные=ПолучитьФайлИзХран(видД);
			 
			 Если ДвоичныеДанные<>Неопределено  Тогда
				 
				 Попытка
					 
				  
				    имяД=Строка(Объект.Исполнитель)+"__ЗаявлениеОВыдачеСудебногоПриказа";

					ИмяФайла=Строка(КаталогВременныхФайлов())+имяД+".docx";
				
					ВыбранныйФайл = Новый Файл(ИмяФайла);
					Если ВыбранныйФайл.Существует() Тогда
						
						УдалитьФайлы(ВыбранныйФайл);
						
					
					КонецЕсли; 

					ДвоичныеДанные.Записать(ИмяФайла);

					
				 MSWord = новый COMОбъект("Word.Application");
				 //Передаем текущие параметры форм в MSWord
				 MSWord.Documents.Open(ИмяФайла);	
				 MSWordDoc = MSWord.ActiveDocument();

				
				  MSWordDoc.Bookmarks("НаименованиеСуда").Select();
				  MSWordDoc.Application.Selection.Font.Color = 1;
                  MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.НаименованиеСуда));

				  //АдресСуда
				   MSWordDoc.Bookmarks("АдресСуда").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресСуда);

				   
				   //ФИОДолжника 
				   MSWordDoc.Bookmarks("ФИОДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника));
				   
				   //ДатаРожденияДолжника
				    MSWordDoc.Bookmarks("ДатаРожденияДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаРожденияДолжника;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //МестоРожденияДолжника
				   MSWordDoc.Bookmarks("МестоРожденияДолжника").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.МестоРожденияДолжника);
				   
				   //ПаспортНомер
				   MSWordDoc.Bookmarks("ПаспортНомер").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ПаспортныеДанныеДолжника);
				   
				   
				   //ПаспортДатаВыдачи
				   MSWordDoc.Bookmarks("ПаспортДатаВыдачи").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ПаспортДатаВыдачи;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   //АдресРегистрации
				    MSWordDoc.Bookmarks("АдресРегистрации").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.АдресРегистрацииДолжника);
				   
				   
				   //СуммаЗадолженности
				     MSWordDoc.Bookmarks("СуммаЗадолженности").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
					//ГосПошлина
				   MSWordDoc.Bookmarks("ГосПошлина").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ГоспошлинаНаша);
				   
				   //ПервоначальныйКредитор
				    MSWordDoc.Bookmarks("ПервоначальныйКредитор").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   //ФИОДолжника_Между
				     MSWordDoc.Bookmarks("ФИОДолжника_Между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				   
				   
				   //НомерКредитногоДоговора
				       MSWordDoc.Bookmarks("НомерКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   //ДатаКредитногоДоговора
				     MSWordDoc.Bookmarks("ДатаКредитногоДоговора").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_заключенной
				      MSWordDoc.Bookmarks("ПервоначальныйКредитор_заключенной").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				  
				   //СуммаКредита
				         MSWordDoc.Bookmarks("СуммаКредита").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.СуммаКредита);
				   
				   
				   //ДатаЦессии
				        MSWordDoc.Bookmarks("ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   длина=СтрДлина(дат);
				   дат=Лев(дат,длина-2);
				   MSWordDoc.Application.Selection.TypeText(дат);
				   
				   //ПервоначальныйКредитор_ДатаЦессии
				         MSWordDoc.Bookmarks("ПервоначальныйКредитор_ДатаЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   //НомерЦессии
				      MSWordDoc.Bookmarks("НомерЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				   
				   
				   //ДатаЦессии_БылЗаключен
				       MSWordDoc.Bookmarks("ДатаЦессии_БылЗаключен").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //НомерКредитногоДоговора_кредитномудого
				         MSWordDoc.Bookmarks("НомерКредитногоДоговора_кредитномудого").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   
				   //ДатаКредитногоДоговора_кредитномудог
				       MSWordDoc.Bookmarks("ДатаКредитногоДоговора_кредитномудог").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_заключенного_межд
				        MSWordDoc.Bookmarks("ПервоначальныйКредитор_заключенного_межд").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   
				   //ФИОДолжника_заключенного_между
				      MSWordDoc.Bookmarks("ФИОДолжника_заключенного_между").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				  

				   //ДатаЦессии_уступаемых
				         MSWordDoc.Bookmarks("ДатаЦессии_уступаемых").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

					//ОбщаяСуммаЗадолженностиПоЦессии
			       MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
				   
				   //ОбщаяСуммаЗадолженностиПоЦессии_составля
				    MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии_составля").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				   
				   //НомерКредитногоДоговора_выполнении
				   MSWordDoc.Bookmarks("НомерКредитногоДоговора_выполнении").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_выполнении
				         MSWordDoc.Bookmarks("ДатаКредитногоДоговора_выполнении").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ФИОДолжника_Прошу_выдать
				         MSWordDoc.Bookmarks("ФИОДолжника_Прошу_выдать").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				  
				   
					//ОбщаяСуммаЗадолженностиПоЦессии_Прошу
					  MSWordDoc.Bookmarks("ОбщаяСуммаЗадолженностиПоЦессии_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ОбщаяСуммаЗадолженностиПоДоговору);
				  
				   //НомерКредитногоДоговора_Прошу
				    MSWordDoc.Bookmarks("НомерКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				 
				   
				   //ДатаКредитногоДоговора_Прошу
				          MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ПервоначальныйКредитор_Прошу
				   MSWordDoc.Bookmarks("ПервоначальныйКредитор_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НаименованиеПервоначальногоКредитора+" ");
				   
				   
				   //ФИОДолжника_Прошу_Взыскать
				   MSWordDoc.Bookmarks("ФИОДолжника_Прошу_Взыскать").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(Строка(спрОбСтруктура.ФИОДолжника)+" ");
				   
				   
				   //СуммаГоспошлины_Прошу
				      MSWordDoc.Bookmarks("СуммаГоспошлины_Прошу").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.ГоспошлинаНаша);
				 
				   
				   //НомерКредитногоДоговора_Приложение
				      MSWordDoc.Bookmarks("НомерКредитногоДоговора_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
                   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерКредитногоДоговора);
				   
				   
				   //ДатаКредитногоДоговора_Приложение
				   MSWordDoc.Bookmarks("ДатаКредитногоДоговора_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаКредитногоДоговора;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   //НомерЦессии_Приложение
				          MSWordDoc.Bookmarks("НомерЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   MSWordDoc.Application.Selection.TypeText(спрОбСтруктура.НомерДоговораЦессии+" ");
				   
				   //ДатаЦессии_Приложение
				          MSWordDoc.Bookmarks("ДатаЦессии_Приложение").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
				   //ДатаЦессии_Приложение_5
				    MSWordDoc.Bookmarks("ДатаЦессии_Приложение_5").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=спрОбСтруктура.ДатаДоговораЦессии;
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);

				   
					//ДатаЗаявления
				             MSWordDoc.Bookmarks("ДатаЗаявления").Select();
				   MSWordDoc.Application.Selection.Font.Color = 1;
				   датРож=ТекущаяДата();
				   дат= Формат(датРож, "ДЛФ=ДД");
				   MSWordDoc.Application.Selection.TypeText(дат);


				   
				   
				   
				   
				        MSWord.Visible=0;
						
						//MSWord.Activate();
						MSWordDoc.Application.PrintOut();
						
						MSWordDoc.Close(0);
						
						
						
						MSWord.Application.Quit();

					
					
					
				 	
				 
				 Исключение
					 
					  Сообщить("Ошибка----- Печать Заявление О Выдаче Судебного Приказа");
				   ТекстОшибки = ОписаниеОшибки();
				   Сообщить(ТекстОшибки);

					 
				 КонецПопытки;
				 
				 
     КонецЕсли; 
	
	

КонецПроцедуры




&НаКлиенте
Процедура ПечатьПакетаСервис(Команда)
	
	
	  
	
	  Если ТБРеестрДляОтправки.Количество()>0 Тогда
		  
				   Для каждого стр  Из  ТБРеестрДляОтправки Цикл
				  
				     срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);
					 
					 спрОбСтруктура= ПолучитьДанныеДляПечати(срДляПечати.ссылкаДокПечати);

					 Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
					 
						      ПечатьЗаявлениеОПроцессуальномПравопреемстве(спрОбСтруктура);
						 
						 
					 
					 КонецЕсли;
					 
					 
					 Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда
					 
						   ПечатьЗаявлениеОВыдачеСудебногоПриказа(спрОбСтруктура);

						 
						 
						 
						 
					 
					 КонецЕсли;
					 
					 
					 
					 
				  
			  	
			  
			  КонецЦикла;
	  
	  КонецЕсли;
	  
	  
	  
	  
	 	
	
КонецПроцедуры



&НаСервере
Функция ПолучитьСсылкуОбъекта(гуид)

	      стрДляПечати=Новый Структура;
	
		   Для Каждого Менеджер Из Справочники Цикл
			   
			    Попытка
					
					
					НовыйGUID = Новый УникальныйИдентификатор(гуид);

					 ссылкаД = Менеджер.ПолучитьСсылку(НовыйGUID);
					 
					
					
					Если ссылкаД.ПолучитьОбъект() <> Неопределено Тогда
						
						стрДляПечати.Вставить("ссылкаДокПечати", ссылкаД);
						
						 Если Строка(Менеджер)="СправочникМенеджер.ЗаявлениеОПроцессуальномПравопреемстве"  Тогда
	 
						    
							
							стрДляПечати.Вставить("названиеСправочника", "ЗаявлениеОПроцессуальномПравопреемстве");
							

							 
						КонецЕсли;
						
						 Если Строка(Менеджер)="СправочникМенеджер.ЗаявлениеОВыдачеСудебногоПриказа"  Тогда
	 
						    
							
							стрДляПечати.Вставить("названиеСправочника", "ЗаявлениеОВыдачеСудебногоПриказа");
							

							 
						КонецЕсли;
						
						

						
						
				    КонецЕсли;

				
				Исключение
					  Сообщить(" -----");
					
				КонецПопытки;
			   
			   
									
		  КонецЦикла;

	    Возврат стрДляПечати;

КонецФункции // ()

&НаКлиенте
Процедура СформироватьExcelФайлДляРеестраАрхив(Команда)
	
	
	      Если ТБРеестрДляОтправкиАрхив.Количество()>0 Тогда
	   
	   	      ТабДокумент= ПолучитьМакетНаСервере();
			
		      ТабДокумент.Показать(Строка(Объект.Исполнитель)+ "_Реестр");

			   ЗаполнитьТБСписокДокументов (ссылкаДоговор);

			   ТБРеестрДляОтправкиЗаполнить();

	   
	   КонецЕсли;

	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПакетаСервисАрхив(Команда)
	
	        Если ТБРеестрДляОтправкиАрхив.Количество()>0 Тогда
		  
				   Для каждого стр  Из  ТБРеестрДляОтправкиАрхив Цикл
				  
				     срДляПечати= ПолучитьСсылкуОбъекта(стр.GUID);
					 
					 спрОбСтруктура= ПолучитьДанныеДляПечати(срДляПечати.ссылкаДокПечати);

					 Если срДляПечати.названиеСправочника="ЗаявлениеОПроцессуальномПравопреемстве" Тогда
					 
						      ПечатьЗаявлениеОПроцессуальномПравопреемстве(спрОбСтруктура);
						 
						 
					 
					 КонецЕсли;
					 
					 
					 Если срДляПечати.названиеСправочника="ЗаявлениеОВыдачеСудебногоПриказа" Тогда
					 
						   ПечатьЗаявлениеОВыдачеСудебногоПриказа(спрОбСтруктура);

						 
						 
						 
						 
					 
					 КонецЕсли;
					 
					 
					 
					 
				  
			  	
			  
			  КонецЦикла;
	  
	  КонецЕсли;

	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьГоспошлину(Команда)
	
	 Оповещение = Новый ОписаниеОповещения("РассчетГоспошлины", ЭтотОбъект);
      парамСтруктура=Новый Структура;
	  парамСтруктура.Вставить("РасчетнаяСуммаГоспошлина",РасчетнаяСуммаГоспошлина);
	 
	 ОткрытьФорму("Обработка.СудебнаяСтадия.Форма.ФормаГоспошлина",парамСтруктура,ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	 
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчетГоспошлины(РезультатРассчета, Параметры) Экспорт

	           РасчетнаяСуммаГоспошлина=РезультатРассчета.Госпошлина;
	
	
  
  
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПримечание(Команда)
	// Вставить содержимое обработчика.
	
	  //СпрВклСудСудебнаяСтадия,ссылкаДоговор
	  СохранитьПримечаниеНаСервере(ВкладкаПримечаниеСудебнаяСтадия,ссылкаДоговор);
	  
	
КонецПроцедуры


&НаСервере
Процедура СохранитьПримечаниеНаСервере(ссылкаВкладкаПримечаниеСудебнаяСтадия,дог)
	
	   Если НЕ ссылкаВкладкаПримечаниеСудебнаяСтадия.Пустая() Тогда
	   
		    спр_ВкладкаПримечаниеСудебнаяСтадия=ссылкаВкладкаПримечаниеСудебнаяСтадия.ПолучитьОбъект();
            спр_ВкладкаПримечаниеСудебнаяСтадия.Примечание=Новый ХранилищеЗначения(Примечание);
			
			спр_ВкладкаПримечаниеСудебнаяСтадия.Записать();
			
			
		   
	   
	   Иначе
		   
		   //Запишу в справочник новый элемент
			 новыйВкладкаПримечаниеСудСт=Справочники.ВкладкаПримечаниеСудебнаяСтадия.СоздатьЭлемент();
			 новыйВкладкаПримечаниеСудСт.Владелец= дог;
			 новыйВкладкаПримечаниеСудСт.Примечание=Новый ХранилищеЗначения(Примечание);
			 
			 новыйВкладкаПримечаниеСудСт.Записать();
			 
			 
		   
		   
	   	
	   
	   КонецЕсли;
	
	

КонецПроцедуры

&НаСервере
Процедура СохранитьПримечаниеТаблицаНаСервере(ссылкаВкладкаПримечаниеТаблицаСудебнаяСтадия,дог)
	
	   НачатьТранзакцию();
	   Попытка
		   
		    
	       Если НЕ ссылкаВкладкаПримечаниеТаблицаСудебнаяСтадия.Пустая() Тогда
		   
			   спр_ВкладкаПримечаниеТаблицаСудебнаяСтадия= ссылкаВкладкаПримечаниеТаблицаСудебнаяСтадия.ПолучитьОбъект();
			   
			   спр_ВкладкаПримечаниеТаблицаСудебнаяСтадия.ТЧ.Очистить();
			   
			   Для каждого стрТЗ Из ТЗПримечание Цикл
			      стрНовая=спр_ВкладкаПримечаниеТаблицаСудебнаяСтадия.ТЧ.Добавить();
				  стрНовая.Дата=стрТЗ.Дата;
                  стрНовая.Примечание=стрТЗ.Примечание;
				  стрНовая.Исполнитель=стрТЗ.Исполнитель;
				  
				  
			   	
			   
			   КонецЦикла;
			   
			   
			   
      	       спр_ВкладкаПримечаниеТаблицаСудебнаяСтадия.Записать();
			   
		   
		   Иначе
		        //Запишу в справочник новый элемент

				новыйВкладкаПримечаниеТаблицаСудебнаяСтадия=Справочники.ВкладкаПримечаниеТаблицаСудебнаяСтадия.СоздатьЭлемент();
				новыйВкладкаПримечаниеТаблицаСудебнаяСтадия.Владелец=дог;
				
				Для каждого стр Из ТЗПримечание Цикл
					    стрТЗ=новыйВкладкаПримечаниеТаблицаСудебнаяСтадия.ТЧ.Добавить();
						стрТЗ.Дата=стр.Дата;
						стрТЗ.Примечание=стр.Примечание;
						стрТЗ.Исполнитель=стр.Исполнитель;
						
					
				
				КонецЦикла;
				
				
			 новыйВкладкаПримечаниеТаблицаСудебнаяСтадия.Записать();	
				
		   	
		   
		   КонецЕсли;
 
		   
	   	
	     ЗафиксироватьТранзакцию();
	   Исключение
		   ОтменитьТранзакцию();
		   
		   
	   КонецПопытки;
	
	  	
	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПримечаниеТаблица(Команда)
	
	СохранитьПримечаниеТаблицаНаСервере(СпрВкладкаПримечаниеТаблицаСудебнаяСтадия,ссылкаДоговор);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТЗПримечание(Команда)
	
	     новаяСтрТЗПримечание=ТЗПримечание.Добавить();
		 
		 новаяСтрТЗПримечание.Дата=ТекущаяДата();
		 новаяСтрТЗПримечание.Исполнитель=Объект.Исполнитель;
		 
		 Если Элементы.ТЗПримечание.ТекущаяСтрока<>Неопределено Тогда
		 
		 	   Элементы.ТЗПримечание.ТекущаяСтрока=Элементы.ТЗПримечание.ТекущаяСтрока+1;
		 
		 КонецЕсли;
		 
		 
		
		 
		 ЭтаФорма.ТекущийЭлемент = Элементы.ТЗПримечаниеПримечание;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьВыпискиИзРеестра(Команда)
	// Вставить содержимое обработчика.
	
	структДанных=ПолучитьДанныеДляВыпискиИзРеестра(ссылкаДоговор);
	
	
	ПечатьШаблоновНаКлиенте.ВыпискиИзРеестраУступПрав(структДанных);

	
	
КонецПроцедуры


&НаСервере
Функция ПолучитьДанныеДляВыпискиИзРеестра(дог)

	     структДанных=Новый Структура;
	
	
	              //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ДанныеДоговоровСрезПоследних.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг,
					|	ДанныеДоговоровСрезПоследних.ПросроченныеПроценты КАК ПросроченныеПроценты,
					|	ДанныеДоговоровСрезПоследних.ТекущиеПроценты КАК ТекущиеПроценты,
					|	ДанныеДоговоровСрезПоследних.Госпошлина КАК Госпошлина,
					|	ДанныеДоговоровСрезПоследних.Неустойка КАК Неустойка,
					|	ДанныеДоговоровСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность
					|ИЗ
					|	РегистрСведений.ДанныеДоговоров.СрезПоследних КАК ДанныеДоговоровСрезПоследних
					|ГДЕ
					|	ДанныеДоговоровСрезПоследних.Договор = &Договор";
				
				Запрос.УстановитьПараметр("Договор", дог);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					
					структДанных.Вставить("ОстатокПросроченнойЗадПоОсновнДолг",ВыборкаДетальныеЗаписи.ПросроченныйОсновнойДолг);
					
					структДанных.Вставить("ОстатокПросроченнойЗадПоПроцентам",0);
					
					структДанных.Вставить("СуммаПросроченнойКомиссии",0);
					структДанных.Вставить("ШтрафыИНеустойки",ВыборкаДетальныеЗаписи.Неустойка);
					
					структДанных.Вставить("СуммаПроцНаПросрочЗадолж",ВыборкаДетальныеЗаписи.ПросроченныеПроценты);
					
					структДанных.Вставить("Госпошлина",ВыборкаДетальныеЗаписи.Госпошлина);
					
					структДанных.Вставить("Итого",ВыборкаДетальныеЗаписи.ВсегоЗадолженность);
					
					
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорЦессии.НомерДоговора КАК НомерЦессии,
		|	ДоговорЦессии.ДатаЦессии КАК ДатаЦессии,
		|	Договоры.НомерДоговора КАК НомерДоговора,
		|	Договоры.Владелец КАК Владелец,
		|	Договоры.Владелец.ДатаРождения КАК ВладелецДатаРождения,
		|	Договоры.ДатаФинансирования КАК ДатаФинансирования
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорЦессии КАК ДоговорЦессии
		|		ПО (ДоговорЦессии.Владелец = Договоры.Ссылка)
		|ГДЕ
		|	Договоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", дог);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		структДанных.Вставить("Цессия_заголовок",ВыборкаДетальныеЗаписи.НомерЦессии);
		структДанных.Вставить("ЦессияДата_заголовок",ВыборкаДетальныеЗаписи.ДатаЦессии);
		структДанных.Вставить("Дата_Рождения",ВыборкаДетальныеЗаписи.ВладелецДатаРождения);
		структДанных.Вставить("Цессия_Название",ВыборкаДетальныеЗаписи.НомерЦессии);
		структДанных.Вставить("ЦессияДата_Название",ВыборкаДетальныеЗаписи.ДатаЦессии);
		структДанных.Вставить("ФИО_Должник",ВыборкаДетальныеЗаписи.Владелец);
		структДанных.Вставить("НомерКредитногоДоговора",ВыборкаДетальныеЗаписи.НомерДоговора);
		структДанных.Вставить("Дата_ВыдачиКредитногоДоговора",ВыборкаДетальныеЗаписи.ДатаФинансирования);
		
		
		//структДанных.Вставить("Цессия_заголовок",ВыборкаДетальныеЗаписи.НомерЦессии);
		//структДанных.Вставить("Цессия_заголовок",ВыборкаДетальныеЗаписи.НомерЦессии);
		//
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

     структДанных.Вставить("Исполнитель",Объект.Исполнитель);
				
	
	
	
   Возврат 	структДанных;
  
				
КонецФункции // ()

&НаКлиенте
Процедура КомандаПрисоединенныеФайлы(Команда)
	
	спрЗаявлОПрПр = ТекСтрокаТБД.ТекущиеДанные.ДокументСсылка;
	
	Если спрЗаявлОПрПр<>Неопределено Тогда
	         колФайлов= ПолучитьКоличествоФайлов(спрЗаявлОПрПр);
	  
	  Если колФайлов=1 Тогда
	  
	  	 
			
			 //ЗапуститьПриложение
			 ссылкаНаФайл=ПолучитьСсылкуНаФайл(спрЗаявлОПрПр);
			 структураДанныеФайл= ПолучитьДанныеПрисоединенногоФайла(ссылкаНаФайл);
			 
	
			 
			       ИмяФайла=Строка(КаталогВременныхФайлов())+структураДанныеФайл.ИмяФайла;
			    
			    	ВыбранныйФайл = Новый Файл(ИмяФайла);
			    	Если ВыбранныйФайл.Существует() Тогда
			    		
			    		УдалитьФайлы(ВыбранныйФайл);
			    		
			    	
			    	КонецЕсли; 

			    	структураДанныеФайл.ДвоичныеданныеФайла.Записать(ИмяФайла);

			         ФайловаяСистемаКлиент.ОткрытьФайл(ИмяФайла);
			 
					  
	  
	  Иначе
		  
		     пармСтр=Новый Структура;
		     пармСтр.Вставить("Владелец",спрЗаявлОПрПр);
			 пармСтр.Вставить("ВладелецФайла",спрЗаявлОПрПр);
			 ФормаПрисоедФайлы= ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",пармСтр,спрЗаявлОПрПр);
		

		  	  
	  КонецЕсли;
	  
	
		
	
	КонецЕсли;
	
	
	  
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСсылкуНаФайл(ссылкаВладелец)

	         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОФайлах.Файл КАК Файл
		|ИЗ
		|	РегистрСведений.СведенияОФайлах КАК СведенияОФайлах
		|ГДЕ
		|	СведенияОФайлах.ВладелецФайла = &ВладелецФайла";
	
	Запрос.УстановитьПараметр("ВладелецФайла",ссылкаВладелец);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		файл= ВыборкаДетальныеЗаписи.Файл;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 Возврат файл;

КонецФункции // ()


&НаСервере
Функция ПолучитьДанныеПрисоединенногоФайла(ссылкаНаФайл)
	
	  структураДанныеФайл=Новый Структура;
	
	   Результат = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ссылкаНаФайл);
	   
	            
	   
	   двоичныеДанныеФайл= ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(ссылкаНаФайл);
	   
	    структураДанныеФайл.Вставить("ИмяФайла",Результат.ИмяФайла);
		структураДанныеФайл.Вставить("ДвоичныеданныеФайла",двоичныеДанныеФайл);
		
	  
     Возврат структураДанныеФайл;	

КонецФункции // ()




&НаСервере
Функция ПолучитьКоличествоФайлов(владелецСсылка)
	
	   колФайлов=0;
	
	         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОФайлах.Файл КАК Файл
		|ИЗ
		|	РегистрСведений.СведенияОФайлах КАК СведенияОФайлах
		|ГДЕ
		|	СведенияОФайлах.ВладелецФайла = &ВладелецФайла";
	
	Запрос.УстановитьПараметр("ВладелецФайла", владелецСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
    	колФайлов= ВыборкаДетальныеЗаписи.Количество();
	
		
	
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 Возврат колФайлов;

КонецФункции // ()

&НаКлиенте
Процедура ГотовКПечатиПриИзменении(Элемент)
	
	   Если ГотовКПечати=Истина Тогда
		   // Записать вкладку ВкладкаСудебноеПроизводствоСудебнаяСтадия
		   
		   ЗаписатьВкладкаСудебноеПроизводствоСудебнаяСтадия(); 
		   
		   // послать оповещение
		   Оповестить("ОбновитьСписокДоговоровГотовКПечати");
		   
		   
		Иначе   
		   
			ЗаписатьВкладкаСудебноеПроизводствоСудебнаяСтадияЛожь();
			   // послать оповещение
		   Оповестить("ОбновитьСписокДоговоровГотовКПечати");
		  
	   
	   КонецЕсли;
	   
	   
	
	
	
	
КонецПроцедуры
   

&НаСервере
Процедура ЗаписатьВкладкаСудебноеПроизводствоСудебнаяСтадияЛожь()
	
	       Если  ВкладкаСудебноеПроизводствоСудебнаяСтадия.Пустая() Тогда
			   
			     новаяЗапись=Справочники.ВкладкаСудебноеПроизводствоСудебнаяСтадия.СоздатьЭлемент();
				 новаяЗапись.Владелец=ссылкаДоговор;
				 новаяЗапись.ГотовКГенерацииДокументов=Ложь;
				 новаяЗапись.Записать();
				 
				 
		   Иначе
			   
			   
			     об=ВкладкаСудебноеПроизводствоСудебнаяСтадия.ПолучитьОбъект();
				 об.ГотовКГенерацииДокументов=Ложь;
				 
				 об.Записать();
				 
			   
		   КонецЕсли;	   
	
	

КонецПроцедуры


&НаСервере
Процедура ЗаписатьВкладкаСудебноеПроизводствоСудебнаяСтадия()
	
	       Если  ВкладкаСудебноеПроизводствоСудебнаяСтадия.Пустая() Тогда
			   
			     новаяЗапись=Справочники.ВкладкаСудебноеПроизводствоСудебнаяСтадия.СоздатьЭлемент();
				 новаяЗапись.Владелец=ссылкаДоговор;
				 новаяЗапись.ГотовКГенерацииДокументов=Истина;
				 новаяЗапись.Записать();
				 
				 
		   Иначе
			   
			   
			     об=ВкладкаСудебноеПроизводствоСудебнаяСтадия.ПолучитьОбъект();
				 об.ГотовКГенерацииДокументов=Истина;
				 
				 об.Записать();
				 
			   
		   КонецЕсли;	   
	
	

КонецПроцедуры

&НаКлиенте
Процедура ТелефонВкладкаСудПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	 Объект.Телефон=ТелефонВкладкаСуд;
	
КонецПроцедуры

&НаКлиенте
Процедура СудьяВкладкаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Объект.Судья=СудьяВкладка;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерОбращения(Команда)
	
	    стр=ТекСтрокаТБД.ТекущиеДанные;
		
		Если стр<>Неопределено Тогда
			
			 Оповещение = Новый ОписаниеОповещения("ФормаНомерОбращенияРезультат", ЭтотОбъект);
			 
			  структураДанные=Новый Структура;
			  
			  структураДанные.Вставить("КредитныйДоговор",ссылкаДоговор);
			  структураДанные.Вставить("НомерОбращения",стр.НомерОбращения);
			  структураДанные.Вставить("СсылкаДокумент",стр.ДокументСсылка);
			  структураДанные.Вставить("СтатусОбращения",стр.СтатусОбращения);
		  	  //стр.НазваниеДокумента
			  
			  
			   ОткрытьФорму("Обработка.СудебнаяСтадия.Форма.ФормаНомерОбращения",структураДанные,ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
							
							
							
			 
		
		КонецЕсли;
		
		
		
		
	
	
КонецПроцедуры


&НаКлиенте
Процедура ФормаНомерОбращенияРезультат(РезультатЗакрытия, Параметры) Экспорт

	   		  Если РезультатЗакрытия= Неопределено Тогда
		          Возврат;
		
			  Иначе

				  стр=ТекСтрокаТБД.ТекущиеДанные;
				  стр.НомерОбращения=РезультатЗакрытия.НомерОбращения;
				  
				   
		      КонецЕсли;
	  
	

  
  
КонецПроцедуры




  



   




