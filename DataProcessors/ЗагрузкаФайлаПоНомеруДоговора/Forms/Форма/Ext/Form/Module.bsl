
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= Объект.ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
	
	
КонецПроцедуры



&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 Объект.ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура Обработать(Команда)
		
	//  Пройду по шаблону
	
	
	
	 стрДолж=ПолучитьКолонки(Объект.ИмяШаблона);
	 
	 стрДоговор=ПолучитьКолонкиДоговор(Объект.ИмяШаблона);
	 
	 стрДопРеквизиты=ПолучитьКолонкиДопРеквизиты(Объект.ИмяШаблона);
	 
	             
	   
      	   
	   
	   
	  загодин=Ложь;
	 
	  фамилия= стрДолж["Фамилия"];
	  
	  имя=стрДолж["Имя"];
	  отчество=стрДолж["Отчество"];
	  
	  
	  Если фамилия=имя Тогда
	      //Значит  один заголовок для Должника
	      должникЗаг=фамилия;
	      загодин=Истина;
	  Иначе
	      
		   //должникЗаг= стрДолж["Фамилия"]+" "+стрДолж["Имя"]+" "+ стрДолж["Отчество"];
	  КонецЕсли;	  
	    
	  
	  массивЗаг=Новый Массив;
	  
	  
	  Для каждого стр Из стрДолж Цикл
	  
		  Если стр.Ключ<>"Имя" И стр.Ключ<>"Отчество" Тогда
			  
			   массивЗаг.Добавить(стр);
			   
			   
		  	
		  
		  КонецЕсли;
	  
	  КонецЦикла;
	  
	  
	  Для каждого стр Из стрДоговор Цикл
	  
			  
			   массивЗаг.Добавить(стр);
		  	
		  
	  КонецЦикла;
	  
	  
	  Для каждого стр Из стрДопРеквизиты Цикл
	  
		      
		  
			   массивЗаг.Добавить(стр);
			   
			   СписокПолей.Добавить(стр.Ключ);

		  
	  КонецЦикла;
	  
	  
	  
	  
	  
	  
	      // запишу врем файл и передам его  обработчику
	  
     	   Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		   имяэксел=Объект.ИмяФайла;
		   
		   Если Х2=Истина  Тогда
			   
			    прогрпуть="D:\public\Distr";
		 
		        имяфайлатемп=прогрпуть+"\долждопд.txt";

				
				имяфайлатемпответ=прогрпуть+"\долждопд_out.txt";

    			 программаОбр=прогрпуть+"\ParseExcel86.exe";
		   
		   Иначе
			   
			   имяфайлатемп=дирМоиД+"\долждопд.txt";
			   
			   имяфайлатемпответ=дирМоиД+"\долждопд_out.txt";

			   программаОбр=дирМоиД+"\ExcelParse.exe";
			   
		   КонецЕсли; 
		   
		   
		   
		   
	       
	       
		   
		   
		   
		   
		   
		   ФайлТемп = Новый ЗаписьТекста(имяфайлатемп);
		   
		   Для каждого масстр Из массивЗаг  Цикл
			   
			 ФайлТемп.ЗаписатьСтроку(масстр.Значение);   
			 
			 
			 
			 
		   
		   КонецЦикла;
		   
		   ФайлТемп.ЗаписатьСтроку(Объект.ИмяФайла);
		   
		   ФайлТемп.Закрыть();

		     
			 
			 
			 программаОбр=программаОбр+" "+"5";
			 
			 
	    	 Shell.Run(программаОбр,0, 1);

	  
			 // код 240 символа
			 
			 //  обработаем вернувшийся файл     долждопд_out.txt
			 
			 
			   
	   
			   мСтрокФайла = Новый Массив();

			   
			   ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
			   Если ВыбранныйФайл.Существует() Тогда
				   
				   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
												
					Строка = ПрочитанныйТекст.ПрочитатьСтроку();
												//а не был ли файл пуст?
					Если Строка <> Неопределено Тогда
					     мСтрокФайла.Добавить(Строка);
					КонецЕсли;
					

					Пока Строка <> Неопределено Цикл
                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					     Если Строка <> Неопределено Тогда
					          мСтрокФайла.Добавить(Строка);
					     КонецЕсли;
					КонецЦикла;

				   
				   
			   КонецЕсли;
		 
			  			 
	  
	          ПостроитьТаблицу(массивЗаг);

			  
			  должДанныет=Новый Структура;
			  
			  
			  Для каждого стрд  Из мСтрокФайла Цикл
				  
				     должДанныет=РазбитьСтроку(стрд,массивЗаг);
				   
				   	Запись=ТЧ.Добавить();
				     Для каждого мстр Из должДанныет Цикл
						 
						стрк=мстр.Ключ; 
					
						
						Запись[Строка(стрк)]=мстр.Значение; 	
					 
					 КонецЦикла;
				   
				  
				  
			  КонецЦикла;

			  
			  
				
				
				
				
				
	  
      
	
	
	
	
КонецПроцедуры
		  
		  

&НаКлиенте
Функция РазбитьСтроку(стрк,массивзаг)

   должДанные=Новый Структура;

	
	Разделитель = Символ(240);
    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
		
		темпстр=массивзаг[Индекс-1].Ключ;
				
		
		должДанные.Вставить(темпстр,СтрПолучитьСтроку(Строки, Индекс));
		
    КонецЦикла;
	
	
	
	Возврат должДанные; 	

КонецФункции // ()




&НаСервере
Функция ПостроитьТаблицу(СтрМ)

	
	КС = Новый КвалификаторыСтроки(150);
    Массив = Новый Массив;
    Массив.Добавить(Тип("Строка"));
    ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);

	
	 ТЗ = РеквизитФормыВЗначение("ТЧ");
	
	 //ТЗ = Новый ТаблицаЗначений;
	 
	 
	 инд=0;
     Для каждого мас Из СтрМ Цикл
		  
		  //инд=инд+1;
		  //строк=Строка(инд);
		  //
    	  ТЗ.Колонки.Добавить(мас.Ключ,ОписаниеТиповС,Строка(мас.Значение),150);
		  
     	
     
     КонецЦикла;
     
       
     
     
     
     
     //Опишем массив реквизитов
    МассивРеквизитов = Новый Массив;
    МассивТипаВыбора = Новый Массив;
    МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
    ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
    
    //Добавим в массив реквизитов таблицу значений
    МассивРеквизитов.Добавить(Новый РеквизитФормы("ДанныеФайла", ОписаниеТипаВыбора));
  
	//Добавим в массив реквизитов колонки таблицы
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		
		МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "ТЧ"));
		
	КонецЦикла;
  
    ИзменитьРеквизиты(МассивРеквизитов);
    
     //Добавим Таблицу на форму
    ТаблицаДанныхФайла             = Элементы.Добавить("ТаблицаДанныхФайла", Тип("ТаблицаФормы"));
    ТаблицаДанныхФайла.ПутьКДанным = "ТЧ";
    ТаблицаДанныхФайла.Отображение = ОтображениеТаблицы.Список;
	ТаблицаДанныхФайла.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
    //Добавим колонки
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        НовыйЭлемент = Элементы.Добавить(Колонка.Имя, Тип("ПолеФормы"), ТаблицаДанныхФайла);
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "ТЧ." + Колонка.Имя;
		НовыйЭлемент.Заголовок=Колонка.Заголовок;
		
    КонецЦикла;  
    ЗначениеВРеквизитФормы(ТЗ,"ТЧ");
    
	
	
	
	
      	 
	
	
КонецФункции // ()


&НаСервере
Функция ПолучитьКолонкиДоговор(стр)

	должДоговор=Новый Структура;

	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДоговоры.Реквизит КАК Реквизит,
		|	ШаблоныФайловДоговоры.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Договоры КАК ШаблоныФайловДоговоры
		|ГДЕ
		|	ШаблоныФайловДоговоры.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		   должДоговор.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	Возврат должДоговор;
	
	
КонецФункции // ()



&НаСервере
Функция ПолучитьКолонкиДопРеквизиты(стр)

	 должДопРекв=Новый Структура;

	
	           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДополнительныеРеквизиты.Реквизит КАК Реквизит,
		|	ШаблоныФайловДополнительныеРеквизиты.Заголовок КАК Заголовок
		|ИЗ
		|	Справочник.ШаблоныФайлов.ДополнительныеРеквизиты КАК ШаблоныФайловДополнительныеРеквизиты
		|ГДЕ
		|	ШаблоныФайловДополнительныеРеквизиты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		должДопРекв.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовок);

	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Возврат должДопРекв;
	

КонецФункции // ()





&НаСервере
Функция ПолучитьКолонки(стр)

		
	//    Получить должника Колонку
	
	должФИО=Новый Структура;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШаблоныФайловДолжники.Реквизит КАК Реквизит,
		|	ШаблоныФайловДолжники.Заголовки КАК Заголовки
		|ИЗ
		|	Справочник.ШаблоныФайлов.Должники КАК ШаблоныФайловДолжники
		|ГДЕ
		|	ШаблоныФайловДолжники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", стр);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	    должФИО.Вставить(ВыборкаДетальныеЗаписи.Реквизит,ВыборкаДетальныеЗаписи.Заголовки);
	 
		
	КонецЦикла;

	
	Возврат должФИО;
	  
	
	

КонецФункции // ()

&НаКлиенте
Процедура Записать(Команда)
	
	
	// для пробы пройдусь по ТЧ
	
	Для каждого стр  Из ТЧ Цикл

		// должника ищем по Наименованию - первый реквизит отнесем к Наименованию
		
		 // а как передать значения доп полей?
		 
		 допДанныеСтруктура=Новый Структура;
		 
		 Для каждого сппол  Из СписокПолей  Цикл
			 
			 допДанныеСтруктура.Вставить(сппол.Значение,стр[сппол.Значение]);
		 
		 КонецЦикла;
		 
		 
		 
		 
		 
		  ЗаписатьДопданные(стр.Фамилия,стр.НомерДоговора,допДанныеСтруктура);
		
		
		
		
		
		

		
		
    КонецЦикла;

	
	Сообщить("Ок");
	
	
КонецПроцедуры



&НаСервере
Функция ЗаписатьДопданные(долж,номерд,допдан)

	
    собвозвр="";
	
	должникСсылка=Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
		|		ПО Договоры.Владелец = Должники.Ссылка
		|ГДЕ
		|	Договоры.НомерДоговора = &НомерДоговора
		|	И Должники.Наименование ПОДОБНО &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", долж);
	Запрос.УстановитьПараметр("НомерДоговора", номерд);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		должникСсылка=ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	

	
	// Какие доп данные записать
	
	     Если должникСсылка<>Неопределено Тогда
			 
			    
			   Для каждого допданст Из допдан Цикл
				   
					   // проверю есть ли такой реквизит с таким значением
															    
							реквизДоп="";
							
							
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ
								|	ДополнительныеДанные.Реквизит.Наименование КАК РеквизитНаименование,
								|	ДополнительныеДанные.Реквизит КАК Реквизит
								|ИЗ
								|	Справочник.ДополнительныеДанные КАК ДополнительныеДанные
								|ГДЕ
								|	ДополнительныеДанные.Владелец = &Владелец
								|	И ДополнительныеДанные.Реквизит = &Реквизит
								|	И ДополнительныеДанные.Реквизит.Наименование = &Наименование";
							
							Запрос.УстановитьПараметр("Владелец", должникСсылка);
							Запрос.УстановитьПараметр("Наименование", допданст.Значение);
							Запрос.УстановитьПараметр("Реквизит", допданст.Ключ);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
							
							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								// Вставить обработку выборки ВыборкаДетальныеЗаписи
								
								реквизДоп=ВыборкаДетальныеЗаписи.РеквизитНаименование;
																
							КонецЦикла;
							
							

							Если реквизДоп="" Тогда
								
								 //  Запишу в справочник Допданные
								 
								 записьДопд=Справочники.ДополнительныеДанные.СоздатьЭлемент();
								 записьДопд.Владелец=должникСсылка;
								 
								 
								 спрСыл=Справочники.ДополнительныеРеквизиты.НайтиПоНаименованию(допданст.Ключ); 
								 
								 записьДопд.Реквизит=спрСыл;
								 
								 записьДопд.Наименование=допданст.Значение;
								 
								 
								 записьДопд.Записать();
								 
							
							КонецЕсли;
							
							
	

					   

					   
				   
			   	
			   
			   КонецЦикла;
			 
			 
			 
			 
			 
		   		   
		   
		   
	   Иначе
		   
		   Сообщить("Нет в базе такого должника - "+долж + " или нет такого договора " + номерд);
		   
		   собвозвр="Нет в базе такого должника - "+долж + " или нет такого договора " + номерд; 
		   
	  КонецЕсли;

	
	
	
	
	
	

	
	
	
	
КонецФункции // ()

