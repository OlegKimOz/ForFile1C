
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
	ДиалогВыбФайла 	 = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбФайла.Заголовок				= "Выберите файл для загрузки:";
	ДиалогВыбФайла.ПолноеИмяФайла			= Объект.ИмяФайла; //АДРЕС
	ДиалогВыбФайла.Фильтр					= "Excel (*.xlsx)|*.xls*";
	ДиалогВыбФайла.Расширение				= "xlsx";
	ДиалогВыбФайла.МножественныйВыбор		= Ложь;
	ДиалогВыбФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбФайла.Показать(Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтаФорма));
	

	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДопПарметры) Экспорт
	Если ЗначениеЗаполнено(ВыбранныеФайлы) и ВыбранныеФайлы.Количество() > 0 Тогда
		 Объект.ИмяФайла = ВыбранныеФайлы[0];
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обработка(Команда)
	
	
       	 // запишу врем файл и передам его  обработчику
	  
     	   Shell = Новый COMОбъект("WScript.Shell");
           дирМоиД=Shell.SpecialFolders.Item("MyDocuments");

		   имяэксел=Объект.ИмяФайла;

		   
		  Если Х2=Истина  Тогда
			   
			    прогрпуть="D:\public\Distr";
		 
		        имяфайлатемп=прогрпуть+"\выпискаобр.txt";

				
				имяфайлатемпответ=прогрпуть+"\выпискаобр_out.txt";

    			 программаОбр=прогрпуть+"\ParseExcel86.exe";
		   
		   Иначе
			   
			   имяфайлатемп=дирМоиД+"\выпискаобр.txt";
			   
			   имяфайлатемпответ=дирМоиД+"\выпискаобр_out.txt";

			   программаОбр=дирМоиД+"\ExcelParse.exe";
			   
		   КонецЕсли; 
		   
		   
		   
		       ФайлТемп = Новый ЗаписьТекста(имяфайлатемп);
		   
		   		   
		       ФайлТемп.ЗаписатьСтроку(Объект.ИмяФайла);
		   
		       ФайлТемп.Закрыть();

		       
			   
			    программаОбр=программаОбр+" "+"9";
			 
			 
			    Shell.Run(программаОбр,0, 1);

			    
				мСтрокФайла = Новый Массив();

				
				   
			   ВыбранныйФайл = Новый Файл(имяфайлатемпответ);
			   Если ВыбранныйФайл.Существует() Тогда
				   
				   	ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемпответ, КодировкаТекста.UTF8);
												
					Строка = ПрочитанныйТекст.ПрочитатьСтроку();
												//а не был ли файл пуст?
					Если Строка <> Неопределено Тогда
					     мСтрокФайла.Добавить(Строка);
					КонецЕсли;
					

					Пока Строка <> Неопределено Цикл
                       Строка = ПрочитанныйТекст.ПрочитатьСтроку();
					     Если Строка <> Неопределено Тогда
					          мСтрокФайла.Добавить(Строка);
					     КонецЕсли;
					КонецЦикла;

				   
				   
			   КонецЕсли;

				
			   
			   //strline = fio+ (char)240+dog+ (char)240+ bankStr+ (char)240+ dataOperTemp + (char)240 + oborotKrTemp + (char)240 + purposePlatTemp+ (char)240 + ufkstr;
			   
			   
			    массивЗаг=Новый Массив;
				
				массивЗаг.Добавить("ФИО");
				
				массивЗаг.Добавить("Договор");
				массивЗаг.Добавить("Банк");
				массивЗаг.Добавить("ДатаОпераци");
				массивЗаг.Добавить("Сумма");
				массивЗаг.Добавить("Назначение");
				массивЗаг.Добавить("ПризнакУФК");
				
			   
				 ВыпискаДанныет=Новый Структура;

				 
				 Для каждого стрд  Из мСтрокФайла Цикл

					  ВыпискаДанныет=РазбитьСтроку(стрд,массивЗаг);
					  
					  
					  Запись=Объект.ТЧ.Добавить();
					  
					Попытка
					
						  
					  Запись.НомерДоговора=ВыпискаДанныет.Договор;
					  Запись.ФИО=ВыпискаДанныет.ФИО;
					  Запись.Банк=ВыпискаДанныет.Банк;
					  Запись.ДатаОперации=ВыпискаДанныет.ДатаОпераци;
					  
					  Запись.СуммаПлатежа=ВыпискаДанныет.Сумма;
					  
					  Запись.ОтметкаФССП=ВыпискаДанныет.ПризнакУФК;
					  
					  
					  
					  
					  
					  Запись.НазначениеПлатежа=ВыпискаДанныет.Назначение;
					  

					
					Исключение
						
						   Сообщить(стрд);

						
						
					КонецПопытки;  
					  
					//  
					//  Запись.НомерДоговора=ВыпискаДанныет.Договор;
					//  Запись.ФИО=ВыпискаДанныет.ФИО;
					//  Запись.Банк=ВыпискаДанныет.Банк;
					//  Запись.ДатаОперации=ВыпискаДанныет.ДатаОпераци;
					//  
					//  Запись.СуммаПлатежа=ВыпискаДанныет.Сумма;
					//  
					//  Запись.ОтметкаФССП=ВыпискаДанныет.ПризнакУФК;
					//  
					////Попытка
					////
					////	  Запись.ОтметкаФССП=ВыпискаДанныет.ПризнакУФК;
					////
					////Исключение
					////	   
					////	  Сообщить(стрд);
					////КонецПопытки;  
					////  					   
					////  
					//   
					//  
					//   
					//	//Запись.ОтметкаФССП=ВыпискаДанныет.ПризнакУФК;

					//  
					//  Запись.НазначениеПлатежа=ВыпискаДанныет.Назначение;
					//  
					//  
					//  
					//  
					// 
				 КонецЦикла;	 
				
			   
		   
		 //Объект.ТЧ.Сортировать("ФИО");
	
	
	
КонецПроцедуры



&НаКлиенте
Функция РазбитьСтроку(стрк, массивзаг)

   ВыпискаДанные=Новый Структура;

	
	Разделитель = Символ(240);
    Строки = СтрЗаменить(стрк, Разделитель, Символы.ПС);
    Для Индекс = 1 По СтрЧислоСтрок(Строки) Цикл
		
			ВыпискаДанные.Вставить(массивзаг[Индекс-1],СтрПолучитьСтроку(Строки, Индекс));
		
		
    КонецЦикла;
	
	
	
	Возврат ВыпискаДанные; 	

КонецФункции // ()

&НаКлиенте
Процедура Печать(Команда)
	// Вставить содержимое обработчика.
	
	 ТабДокумент= ПолучитьМакетНаСервере();
	
     ТабДокумент.Показать("Выписка");

	
	 
КонецПроцедуры


&НаСервере
Функция ПолучитьМакетНаСервере()
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб=Истина;
	ТабДокумент.ТолькоПросмотр=Истина;

	
	ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
    Макет =  ОтчетОбъект.ПолучитьМакет("Макет"); 
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	 	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	
    ТабДокумент.Вывести(ОбластьШапка);
	
	Для каждого Стр  Из Объект.ТЧ  Цикл
		
		ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
		
		ОбластьСтрока.Параметры.ФИО=Стр.ФИО;
		
		ОбластьСтрока.Параметры.Договор=Стр.НомерДоговора;
		
		ОбластьСтрока.Параметры.Банк=Стр.Банк;
		
		ОбластьСтрока.Параметры.ДатаОпер=Строка(Стр.ДатаОперации);
		

		
		ОбластьСтрока.Параметры.Сумма=Стр.СуммаПлатежа;
		ОбластьСтрока.Параметры.Назначение=Стр.НазначениеПлатежа;
		
		ОбластьСтрока.Параметры.ПризнакУФК=Стр.ОтметкаФССП;
		
		 ТабДокумент.Вывести(ОбластьСтрока);
	
	КонецЦикла;
	
	
	

	

    Возврат  ТабДокумент;
    
КонецФункции

&НаКлиенте
Процедура НайтиВ1С(Команда)
	// Вставить содержимое обработчика.
	
	
	// Пройдусь по таблице ТЧ
	       Для Каждого Стр Из Объект.ТЧ Цикл
			   
			   стркОтвет=НайтиВ1СНаСервере(Стр.ФИО,Стр.НомерДоговора);
			   
			   Если  стркОтвет.Должник<>Неопределено Тогда
				   
				       Запись=Объект.ТЧЕСТЬВ1С.Добавить();
					   Запись.ФИО=стркОтвет.Должник;
					   Запись.НомерДоговора=стркОтвет.Договор;
					   Запись.Реестр=стркОтвет.Реестр;
					   Запись.НазначениеПлатежа=Стр.НазначениеПлатежа;
					   Запись.ДатаОперации=Стр.ДатаОперации;
					   Запись.СуммаПлатежа=Стр.СуммаПлатежа;
					   Запись.Банк=Стр.Банк;
					   Запись.ОтметкаФССП=Стр.ОтметкаФССП;
					   
					   
			   Иначе 
				   
				     
					   
					   
					   
				       Запись=Объект.ТЧНЕТ.Добавить();
				       Запись.ФИО=Стр.ФИО;
				       Запись.НомерДоговора=Стр.НомерДоговора;
					   Запись.НазначениеПлатежа=Стр.НазначениеПлатежа;
					   Запись.ДатаОперации=Стр.ДатаОперации;
					   Запись.СуммаПлатежа=Стр.СуммаПлатежа;
					   Запись.Банк=Стр.Банк;
					   Запись.ОтметкаФССП=Стр.ОтметкаФССП;
					   
			   КонецЕсли;
			   
			   
			   
			   
	       КонецЦикла;
	
	
КонецПроцедуры


&НаСервере
Функция НайтиВ1СНаСервере(фио,номдог)

	 ФиоНомДог=Новый Структура; 
	
	 фиоСсылка=Неопределено;
	 договорСсылка=Неопределено;
	 реестрСсылка=Неопределено;
	 номерРеестра="";
	 
	 
	 //Изменю некоторые имена в падеже - дательный и разделить
	 
	 Если фио="ПортногоЮрияГригорьевича" Тогда
	         фио="Портной Юрий Григорьевич";
	 
	 КонецЕсли;
	 
	 Если фио="Юрочкина Виталия Сергеевича" Тогда
	         фио="ЮРОЧКИН ВИТАЛИЙ СЕРГЕЕВИЧ";
	 
	 КонецЕсли;
	 
	 
	 Если фио="Богатырева Мусы Висангиреевича" Тогда
	         фио="Богатырев Муса Висангиреевич";
	 
	 КонецЕсли;
	 
	 
	 Если фио="ТИМОЩЕНКО ЛАРИСА МИХАЙЛОВНАЮрга" Тогда
	         фио="Тимощенко Лариса Михайловна";
	 
	 КонецЕсли;

	  Если фио="Андина Юрия Михайловича" Тогда
	         фио="АНДИН ЮРИЙ МИХАЙЛОВИЧ";
	 
	 КонецЕсли;

	 
	  Если фио="Метельников Евгений Юрьевичг." Тогда
	         фио="Метельников Евгений Юрьевич";
	 
	 КонецЕсли;

	 
	  Если фио="Зайцева Дениса Валерьевича" Тогда
	         фио="Зайцев Денис Валерьевич";
	 
	 КонецЕсли;

	 
	  Если фио="Варнакова Александра Сергеевича" Тогда
	         фио="ВАРНАКОВ АЛЕКСАНДР СЕРГЕЕВИЧ";
	 
	 КонецЕсли;

	 
 	 Если фио="Тумановой Инны Геннадьевны" Тогда
	         фио="Туманова Инна Геннадьевна";
	 
	 КонецЕсли;
		 
	 
  	 Если фио="Франчук Анатолия Николаевича" Тогда
	         фио="ФРАНЧУК АНАТОЛИЙ НИКОЛАЕВИЧ";
	 
	 КонецЕсли;


	 Если фио="Цукановой Веры Ивановны" Тогда
	         фио="Цуканова Вера Ивановна";
	 
	 КонецЕсли;

	 
	 Если фио="ФЕДИН В И" Тогда
	         фио="ФЕДИН ВЛАДИМИР ИВАНОВИЧ";
	 
	 КонецЕсли;

	 
	 Если фио="Анохина Алексея Владимировича" Тогда
	         фио="Анохин Алексей Владимирович";
	 
	 КонецЕсли;

	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Наименование КАК Наименование,
		|	Должники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Должники КАК Должники
		|ГДЕ
		|	Должники.Наименование ПОДОБНО &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", фио);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	кол= ВыборкаДетальныеЗаписи.Количество();
	
	темпДолжЗапрос=Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		//  А если таких 2 или 3
		
		темпДолжЗапрос.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		
		  //фиоСсылка=ВыборкаДетальныеЗаписи.Ссылка;
		   
		  
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	 Если кол>1  Тогда
	 
		 
		 Для каждого долМассив  Из темпДолжЗапрос  Цикл
			 
			 
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Должники.Ссылка КАК Ссылка,
					|	Договоры.НомерДоговора КАК НомерДоговора
					|ИЗ
					|	Справочник.Договоры КАК Договоры
					|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
					|		ПО Договоры.Владелец = Должники.Ссылка
					|ГДЕ
					|	Должники.Ссылка = &Ссылка";
				
				Запрос.УстановитьПараметр("Ссылка", долМассив);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					 рез=КороткийНомерДоговора(ВыборкаДетальныеЗаписи.НомерДоговора, номдог);
					 
					 Если рез Тогда
					 
					 	  фиоСсылка=долМассив;
					 
					 КонецЕсли;	
					
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


								 
			 
		 	
		 
		 КонецЦикла;
		 
		 
		 
		 
	 
	 Иначе
		 
		 Если темпДолжЗапрос.Количество()>0 И  темпДолжЗапрос.Количество()<2 Тогда
			 
			 фиоСсылка=темпДолжЗапрос[0];
			 
			 Если темпДолжЗапрос[0]<>Неопределено И номдог="-" Тогда
			 
			           темпДоговорМакс=Новый Соответствие;
			  
				   //фиоСсылка=темпДолжЗапрос[0];
					 
					 
										  	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	Договоры.Ссылка КАК Ссылка,
							|	Договоры.СуммаКредита КАК СуммаКредита
							|ИЗ
							|	Справочник.Договоры КАК Договоры
							|ГДЕ
							|	Договоры.Владелец = &Владелец";
						
						Запрос.УстановитьПараметр("Владелец", фиоСсылка);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						
						колДог=ВыборкаДетальныеЗаписи.Количество();
						
						Если колДог=1 Тогда
							 ВыборкаДетальныеЗаписи.Следующий();
							 договорСсылка=ВыборкаДетальныеЗаписи.Ссылка;
							 
						Иначе
							
							 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							     // заполню структуру
								    темпДоговорМакс.Вставить(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.СуммаКредита);
								 
							 КонецЦикла;
							
						
						КонецЕсли;
						
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						   темпСумДог=0;
						   темпСумДогМакс=0;
						
						   Если темпДоговорМакс.Количество()>0 Тогда
						   
						   	    Для каждого стру  Из темпДоговорМакс Цикл
									
									темпСумДог=стру.Значение;
									
									Если темпСумДог>темпСумДогМакс Тогда
									    темпСумДогМакс=темпСумДог;
										договорСсылка=стру.Ключ;
										
									
									КонецЕсли;
									
									
								
								КонецЦикла;

								
						   
						   КонецЕсли;
						  
						     
						 								
						
                         			 		 

			 
			 КонецЕсли;
		 	   

			 
			 
			 
		 
		 КонецЕсли; 
		 
		 
		   
	 	
	 
	 КонецЕсли;
	
	
	
	
	
	

	 Если фиоСсылка<> Неопределено Тогда
		 
				   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Договоры.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.Договоры КАК Договоры
				|ГДЕ
				|	Договоры.Владелец = &Владелец
				|	И Договоры.НомерДоговора ПОДОБНО &НомерДоговора";
			
			Запрос.УстановитьПараметр("Владелец", фиоСсылка);
			Запрос.УстановитьПараметр("НомерДоговора", номдог);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
				  договорСсылка=ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;
			
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

			Если договорСсылка=Неопределено Тогда
				
			         темпДоговорМакс=Новый Соответствие;

				
				       Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	Договоры.Ссылка КАК Ссылка,
							|	Договоры.СуммаКредита КАК СуммаКредита
							|ИЗ
							|	Справочник.Договоры КАК Договоры
							|ГДЕ
							|	Договоры.Владелец = &Владелец";
						
						Запрос.УстановитьПараметр("Владелец", фиоСсылка);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						колДог=ВыборкаДетальныеЗаписи.Количество();
						
						Если колДог=1 Тогда
							 ВыборкаДетальныеЗаписи.Следующий();
							 договорСсылка=ВыборкаДетальныеЗаписи.Ссылка;
							 
						Иначе	 
							 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							     // заполню структуру
 								    темпДоговорМакс.Вставить(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.СуммаКредита);
								 
							 КонецЦикла;
							
	 
							 
						
						КонецЕсли;

						
						
						 темпСумДог=0;
						   темпСумДогМакс=0;
						
						   Если темпДоговорМакс.Количество()>0 Тогда
						   
						   	    Для каждого стру  Из темпДоговорМакс Цикл
									
									темпСумДог=стру.Значение;
									
									Если темпСумДог>темпСумДогМакс Тогда
									    темпСумДогМакс=темпСумДог;
										договорСсылка=стру.Ключ;
										
									
									КонецЕсли;
									
									
								
								КонецЦикла;

								
						   
						   КонецЕсли;
						  
						     

						
			
			КонецЕсли;  
			
			
			
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеестрДолжники.Ссылка КАК Ссылка,
		|	РеестрДолжники.Ссылка.НомерДляПечати КАК НомерДляПечати
		|ИЗ
		|	Документ.Реестр.Должники КАК РеестрДолжники
		|ГДЕ
		|	РеестрДолжники.Должник = &Должник";
	
	Запрос.УстановитьПараметр("Должник", фиоСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		номерРеестра=ВыборкаДетальныеЗаписи.НомерДляПечати;
		реестрСсылка= ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

		//номерРеестра=ВыборкаДетальныеЗаписи.НомерДляПечати;
	
		
		
		
		
		
		 	 
								 //  попробую подставит договор если  должник в базе 
									//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
									// Данный фрагмент построен конструктором.
									// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
									
									Запрос = Новый Запрос;
									Запрос.Текст = 
										"ВЫБРАТЬ
										|	Договоры.Ссылка КАК Ссылка,
										|	Договоры.НомерДоговора КАК НомерДоговора
										|ИЗ
										|	Справочник.Договоры КАК Договоры
										|ГДЕ
										|	Договоры.Владелец = &Владелец";
									
									Запрос.УстановитьПараметр("Владелец", фиоСсылка);
									
									РезультатЗапроса = Запрос.Выполнить();
									
									ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
									
									Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
										// Вставить обработку выборки ВыборкаДетальныеЗаписи
										        рез=КороткийНомерДоговора(ВыборкаДетальныеЗаписи.НомерДоговора, номдог);
					 
												 Если  рез Тогда
												 
												 	  договорСсылка=ВыборкаДетальныеЗаписи.Ссылка;
												 
												 КонецЕсли;	

										
										
									КонецЦикла;
									
									//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


	 

		
		
		
		
	 
	 КонецЕсли; 
	 
	 
	 
	 
	 //  попрлбую найти договор если есть долж и реестр
	 
	 Если реестрСсылка<>Неопределено И фиоСсылка<>Неопределено И договорСсылка=Неопределено  Тогда
	 
						      	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	Договоры.Ссылка КАК Ссылка,
						|	Договоры.НомерДоговора КАК НомерДоговора
						|ИЗ
						|	Справочник.Договоры КАК Договоры
						|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Реестр КАК Реестр
						|		ПО Договоры.Ссылка = Реестр.Должники.Договор
						|ГДЕ
						|	Договоры.Владелец = &Владелец
						|	И Реестр.Ссылка = &Ссылка
						|	И Реестр.Должники.Должник = &Должник";
					
					Запрос.УстановитьПараметр("Владелец", фиоСсылка);
					Запрос.УстановитьПараметр("Должник", фиоСсылка);
					Запрос.УстановитьПараметр("Ссылка", реестрСсылка);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						
						 темпНомерДоговора=ВыборкаДетальныеЗаписи.НомерДоговора;
						
						 рез=КороткийНомерДоговора(темпНомерДоговора, номдог);
						 
						 Если рез Тогда
						 
						 	 договорСсылка= ВыборкаДетальныеЗаписи.Ссылка;
						 
						 КонецЕсли;
						
						 //договорСсылка= ВыборкаДетальныеЗаписи.Ссылка;
								
								

					КонецЦикла;
					
					//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

						 
		 
	 
	 КонецЕсли;
	 
	 
	 
	 Если фиоСсылка=Неопределено Тогда
	 
		 // Найду фамилию   фио,номдог
		 
		 
		   темпИнд=Найти(фио," ");
		   
		   Если  темпИнд<>0 Тогда
			   
			   
			   темпФамилия=Лев(фио,темпИнд);
								   
						//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
						// Данный фрагмент построен конструктором.
						// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	Должники.Ссылка КАК Ссылка,
							|	Договоры.Ссылка КАК Ссылка1
							|ИЗ
							|	Справочник.Договоры КАК Договоры
							|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
							|		ПО Договоры.Владелец = Должники.Ссылка
							|ГДЕ
							|	Договоры.НомерДоговора = &НомерДоговора
							|	И Должники.Фамилия = &Фамилия";
						
						Запрос.УстановитьПараметр("НомерДоговора", номдог);
						Запрос.УстановитьПараметр("Фамилия", темпФамилия);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
							// Вставить обработку выборки ВыборкаДетальныеЗаписи
							фиоСсылка=ВыборкаДетальныеЗаписи.Ссылка;
							договорСсылка=ВыборкаДетальныеЗаписи.Ссылка1;
						КонецЦикла;
						
						//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


									   
			   
			   
			   
			   
	       КонецЕсли;		   
			   
		 
		 
	 
	 КонецЕсли;
	 
	 
					 
	 
	 
	 
	 ФиоНомДог.Вставить("Должник",фиоСсылка);
	 ФиоНомДог.Вставить("Договор",договорСсылка);
	 ФиоНомДог.Вставить("Реестр",номерРеестра);
	 
	 
	 
	 
	 
	 
	 Возврат  ФиоНомДог;
	
	

КонецФункции // ()
 

&НаСервере
Функция КороткийНомерДоговора(номерД, номерФ)

	   рез=ложь;
	   инд=Найти(номерД,"(");
	   
	   Если инд<>0 Тогда
	   
	   	         стрТемп=Лев(номерД,инд-1);
				   
				   Если стрТемп=номерФ  Тогда
				   
				   	   рез=Истина;
					Иначе   
						рез=Ложь;
						
				   КонецЕсли;  

	   Иначе		   
		   
		            Если номерД=номерФ  Тогда
				   
				   	   рез=Истина;
					Иначе   
						рез=Ложь;
						
				   КонецЕсли;
		   
		   
	   КонецЕсли;
				 				   
	   
	
	 Возврат рез;

КонецФункции // ()


 
 

&НаКлиенте
Процедура ПечатьЕсть(Команда)
	// Вставить содержимое обработчика.
	
     ТабДокумент= ПолучитьМакетЕстьНаСервере();
	
     ТабДокумент.Показать("Выписка");

	
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетЕстьНаСервере()
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб=Истина;
	ТабДокумент.ТолькоПросмотр=Истина;

	
	ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
    Макет =  ОтчетОбъект.ПолучитьМакет("МакетЕсть"); 
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	 	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	
    ТабДокумент.Вывести(ОбластьШапка);
	
	Для каждого Стр  Из Объект.ТЧЕСТЬВ1С  Цикл
		
		ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
		
		ОбластьСтрока.Параметры.ФИО=Стр.ФИО;
		
		ОбластьСтрока.Параметры.Договор=Стр.НомерДоговора.НомерДоговора;
		
		ОбластьСтрока.Параметры.Банк=Стр.Банк;
		
		ОбластьСтрока.Параметры.ДатаОпер=Строка(Стр.ДатаОперации);
		
		 ОбластьСтрока.Параметры.реестр=Стр.Реестр;

		
		ОбластьСтрока.Параметры.Сумма=Стр.СуммаПлатежа;
		ОбластьСтрока.Параметры.Назначение=Стр.НазначениеПлатежа;
		
		ОбластьСтрока.Параметры.ПризнакУФК=Стр.ОтметкаФССП;
		
		 ТабДокумент.Вывести(ОбластьСтрока);
	
	КонецЦикла;
	
	
	

	

    Возврат  ТабДокумент;
    
КонецФункции

&НаКлиенте
Процедура ПечатьНЕТ1С(Команда)
	// Вставить содержимое обработчика.
	   ТабДокумент= ПолучитьМакетНЕТ1СНаСервере();
	
     ТабДокумент.Показать("Выписка");

	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетНЕТ1СНаСервере()
	
	ТабДокумент=Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб=Истина;
	ТабДокумент.ТолькоПросмотр=Истина;

	
	ОтчетОбъект = РеквизитФормыВЗначение("Объект");
	
    Макет =  ОтчетОбъект.ПолучитьМакет("Макет"); 
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	 	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	
	
    ТабДокумент.Вывести(ОбластьШапка);
	
	Для каждого Стр  Из Объект.ТЧНЕТ  Цикл
		
		ОбластьСтрока=Макет.ПолучитьОбласть("Строка");
		
		ОбластьСтрока.Параметры.ФИО=Стр.ФИО;
		
		ОбластьСтрока.Параметры.Договор=Стр.НомерДоговора;
		
		ОбластьСтрока.Параметры.Банк=Стр.Банк;
		
		ОбластьСтрока.Параметры.ДатаОпер=Строка(Стр.ДатаОперации);
		

		
		ОбластьСтрока.Параметры.Сумма=Стр.СуммаПлатежа;
		ОбластьСтрока.Параметры.Назначение=Стр.НазначениеПлатежа;
		
		ОбластьСтрока.Параметры.ПризнакУФК=Стр.ОтметкаФССП;
		
		 ТабДокумент.Вывести(ОбластьСтрока);
	
	КонецЦикла;
	
	
	

	

    Возврат  ТабДокумент;
    
КонецФункции

