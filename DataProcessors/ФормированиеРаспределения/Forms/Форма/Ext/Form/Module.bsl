&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период = ТекущаяДатаСеанса();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура РаспределитьНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	РаспределитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ДобавитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьНаСервере()
	//Устанавливаем все реестры, для которых нужна выборка
	ВсеРеестры = Ложь;
	Если Реестры.Количество() = 0 Тогда
		Если Банки.Количество() = 0 Тогда
			ВсеРеестры = Истина;
		Иначе
			ЗапросРеестров = Новый Запрос;
			ЗапросРеестров.Текст = "ВЫБРАТЬ
			                       |	Реестр.Ссылка
			                       |ИЗ
			                       |	Документ.Реестр КАК Реестр
			                       |ГДЕ
			                       |	Реестр.ДатаВозврата >= &Период
			                       |	И Реестр.ДатаПередачи <= &Период
			                       |	И Реестр.Проведен = ИСТИНА
			                       |	И Реестр.Банк В (&Банк)";
			ЗапросРеестров.УстановитьПараметр("Период", Банки);
			ЗапросРеестров.УстановитьПараметр("Банки", Банки);
			
			ВыгрузкаРезультата = ЗапросРеестров.Выполнить().Выгрузить();
			Реестры.Загрузить(ВыгрузкаРезультата);
		КонецЕсли;
	КонецЕсли;
	
	ОтборПоСтатусу = (Статусы.Количество() > 0);
	ОтборПоСотруднику = (Сотрудники.Количество() > 0);
	
	ВремТЗ = Новый ТаблицаЗначений;
	ВремТЗ.Колонки.Добавить("Реестр",);
	ВремТЗ.Колонки.Добавить("Сотрудник",);
	ВремТЗ.Колонки.Добавить("Статус",);
	
	Если ОтборПоСотруднику Тогда
		Для Каждого ТекСтр Из Сотрудники Цикл
			Если ВсеРеестры Тогда
				НовСтр = ВремТЗ.Добавить();
				НовСтр.Реестр = Документы.Реестр.ПустаяСсылка();
				НовСтр.Сотрудник = ТекСтр.Сотрудник;
			Иначе
				Для Каждого ТС Из Реестры Цикл
					НовСтр = ВремТЗ.Добавить();
					НовСтр.Реестр = ТС.Реестр;
					НовСтр.Сотрудник = ТекСтр.Сотрудник;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла
	Иначе
		Если ВсеРеестры Тогда
			НовСтр = ВремТЗ.Добавить();
			НовСтр.Реестр = Документы.Реестр.ПустаяСсылка();
			НовСтр.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
		Иначе
			Для Каждого ТС Из Реестры Цикл
				НовСтр = ВремТЗ.Добавить();
				НовСтр.Реестр = ТС.Реестр;
				НовСтр.Сотрудник = Справочники.Сотрудники.ПустаяСсылка();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
		
	
	Если ОтборПоСтатусу Тогда
	ТЗ_2 = ВремТЗ.Скопировать();
	ВремТЗ.Очистить();
		Для Каждого ТекСтр Из Статусы Цикл
			Для Каждого ТС Из ТЗ_2 Цикл
				НС = ВремТЗ.Добавить();
				НС.Реестр = ТС.Реестр;
				НС.Сотрудник = ТС.Сотрудник;
				НС.Статус = ТекСтр.Статус;
			КонецЦикла;
		КонецЦикла;
	Иначе
		ВремТЗ.ЗаполнитьЗначения(Справочники.Статусы.ПустаяСсылка(), "Статус");
	КонецЕсли;
	
	Отбор = Новый Структура("Реестр,Статус");
	
	ПараметрыРаспределения = Объект.ПараметрыРаспределения.Выгрузить();
	
	Для Каждого ТекСтр Из ВремТЗ Цикл
		НовСтр = ПараметрыРаспределения.Добавить();
		НовСтр.Реестр = Текстр.Реестр;
		НовСтр.Сотрудник = текстр.сотрудник;
		НовСтр.Статус = ТекСтр.Статус;
		НовСтр.Приоритет = Приоритет;
	КонецЦикла;
	
	Для Каждого ТекСтр Из ПараметрыРаспределения Цикл
		//Удалим из ТЧ те строки, что уже имеются.
		СЗСтатус = ТекСтр.Статус;
		СЗРеестр = ТекСтр.Реестр;
		
		Отбор.Вставить("Статус",СЗСтатус);
		Отбор.Вставить("Реестр",СЗРеестр);
		
		НайденныеСтроки = ПараметрыРаспределения.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() > 1 Тогда
			Для сч = 1 По НайденныеСтроки.Количество() - 1 Цикл
				ПараметрыРаспределения.Удалить(НайденныеСтроки.Получить(сч));
			КонецЦикла;
		КонецЕсли;
		
		Отбор.Вставить("Статус",Справочники.Статусы.ПустаяСсылка());
		НайденныеСтроки = ПараметрыРаспределения.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 1 Тогда
			Для сч = 1 По НайденныеСтроки.Количество() - 1 Цикл
				ПараметрыРаспределения.Удалить(НайденныеСтроки.Получить(сч));
			КонецЦикла;
		КонецЕсли;
		
		Отбор.Вставить("Реестр",Документы.Реестр.ПустаяСсылка());
		Отбор.Вставить("Статус",СЗСтатус);
		НайденныеСтроки = ПараметрыРаспределения.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 1 Тогда
			Для сч = 1 По НайденныеСтроки.Количество() - 1 Цикл
				ПараметрыРаспределения.Удалить(НайденныеСтроки.Получить(сч));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Объект.ПараметрыРаспределения.Загрузить(ПараметрыРаспределения);
КонецПроцедуры
