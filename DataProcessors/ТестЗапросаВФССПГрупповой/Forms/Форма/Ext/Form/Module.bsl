



&НаКлиенте
Процедура ТестСообщения()

	    ТестСообщенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТестСообщенияНаСервере()

	
	Сообщить("11111+");

КонецПроцедуры




&НаКлиенте
Процедура Старт(Команда)
	 
    ЗапросВФССППослать();
	
	Сообщить("Ок");
	
КонецПроцедуры



&НаКлиенте
Процедура ЗапросВФССППослать()

	
   ПолучитьКтоЗапросил();
	
	//Запустить();


КонецПроцедуры


&НаКлиенте
Процедура IDDQD(Результат, Параметры) Экспорт
 
    Если Результат = КодВозвратаДиалога.Да Тогда
        Сообщить("Первый запрос");
    КонецЕсли;	
 
КонецПроцедуры



&НаКлиенте
Процедура ПолучитьКтоЗапросил() 
	
            прогрпуть="C:\Distr\PR\GROUP\";
		 
	        имяфайлатемп=прогрпуть+"groupreq.txt";

			
			
			ФайлВыбр = Новый Файл(имяфайлатемп);
			
 		   массиаКтозапросил=ПолучитьКтоЗапросилНаСервер();

			
		  // проверю есть ли файл
		  
		  Если Не ФайлВыбр.Существует() И массиаКтозапросил.Количество()>0  Тогда
			  
			    
				
				
	    		ФайлТемп = Новый ЗаписьТекста(имяфайлатемп);
				
		       // Пройдусь по массиву
		    
		    	
				   
			    Для каждого стр Из массиаКтозапросил  Цикл
					
					// создам файл с должниками
					 стрп=стр["СтрокаЗапроса"];
					 
					 
					 стрпДолж=стр["Должник"];
					 стрпРеестр=стр["Реестр"];
					 стрпИмя=стр["ИмяФайлаНаЗапрос"];
					 
					 Запись=  ТЧ.Добавить();
					 Запись.Должник=стр["Должник"];
					 Запись.Реестр=стр["Реестр"];
					 Запись.ИмяФайла=стр["ИмяФайлаНаЗапрос"];

					 
					 
					 
					 
					 ФайлТемп.ЗаписатьСтроку(стрп);
					 
					 
					 
					 
					
			     КонецЦикла;	  
				   
				 ФайлТемп.Закрыть();
				 
				 // сразу поменяю в регистре
				 
				 Для каждого стр  Из ТЧ  Цикл
					 
					ПоменятьВРеестреКто(стр["Реестр"],стр["Должник"],стр["ИмяФайла"]);

				 	
				 
				 КонецЦикла; 
				 
							 
				 
				 
			      Сообщить("Сформировал  файл для FSSPRequest Групповой - groupreq.txt");	 
			  
		  Иначе 	  
			  
			  Сообщить("Файл groupreq.txt еще не обработан");	
		  
		  КонецЕсли;
	
            
			  
			  
			  

			
КонецПроцедуры


&НаСервере
Функция НетРегиона (долж, реестрР, стрЗапроса)

	   ссылкаРегион=Неопределено;
	   регионЕсть=Ложь;
	
				     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Должники.Регион КАК Регион
					|ИЗ
					|	Справочник.Должники КАК Должники
					|ГДЕ
					|	Должники.Ссылка = &Ссылка";
				
				Запрос.УстановитьПараметр("Ссылка", долж);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					ссылкаРегион=ВыборкаДетальныеЗаписи.Регион;
					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

				
				Если ссылкаРегион.Пустая() Тогда
					
					    УдалитьИзРегистра(стрЗапроса,реестрР);
						
					
				Иначе		
					регионЕсть=Истина;	
				
				КонецЕсли;
				
		Возврат регионЕсть;		
				
	

КонецФункции // ()



 
		  
&НаКлиенте
Процедура ПолучитьКтоЗапросилЕстьЛиФайл()

	//       массиаКтозапросил=ПолучитьКтоЗапросилНаСерверВсе();

	//	    Для каждого стр Из массиаКтозапросил  Цикл
	//			    ////  поменять в реестре сведений
	//			  
	//			  
	//			  
	//			     Файл = Новый Файл(стр["ИмяФайлаНаЗапрос"]);
	//			     
	//			      Если Файл.Существует() Тогда
	//					  
	//					  ПоменятьВРеестреКто(стр["Реестр"],стр["Должник"],стр["ИмяФайлаНаЗапрос"]);
	//					  
	//					  Сообщить(стр["ИмяФайлаНаЗапрос"]);
	//					  
	//			      КонецЕсли;	  
	//			    	  
	//			   

	//			
	//			
	//		  КонецЦикла; 
	//			  
	//	 WScript = Новый COMОбъект("WScript.Shell");
	//     WScript.Run("timeout /t " + 10, 0, Истина);
	//			   
	//	  
	//
	//  Сообщить("ПолучитьКтоЗапросилЕстьЛиФайл");
			
КонецПроцедуры






&НаСервере
Процедура ПоменятьВРеестреКто(реестр,должник,имяф)
	  
      			
	           запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;
               ЗапроССт=Перечисления.РезультатЗапросаВФССП.ПослатьЗапрос;

		  
				НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
				
				НаборЗаписей.Отбор.Реестр.Установить(реестр);
				НаборЗаписей.Отбор.Должник.Установить(должник);
				
				
				НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(имяф);

				
				
				
				
				НаборЗаписей.Прочитать();
				
				Для каждого Запись Из НаборЗаписей Цикл
					Если Запись.ЗапросПослан=ЗапроССт  Тогда
						
						Запись.ЗапросПослан =запрОк;
						Запись.КЗ=1;
					
					КонецЕсли;
					  
					
				КонецЦикла;
				НаборЗаписей.Записать();
					   

	
	
	
	

КонецПроцедуры // ()


&НаСервере
Функция ПолучитьКтоЗапросНаРезультатВсе() Экспорт
	
	массивЗапросНаРезультат = Новый Массив();
	отв=Перечисления.РезультатЗапросаВФССП.ПолученОтветНаЗапрос;
    отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;
	
	  Запрос = Новый Запрос;
	  Запрос.Текст = 
		"ВЫБРАТЬ 
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник,
		|	ЗапросывФССПдляРеестра.СтрокаРезультат КАК СтрокаРезультат,
		|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", отв);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		 структураКтоЗапросНаРезультат=Новый Структура;
    	 		 структураКтоЗапросНаРезультат.Вставить("ЗапросПослан",Выборка.ЗапросПослан);
				 структураКтоЗапросНаРезультат.Вставить("СтрокаЗапроса",Выборка.СтрокаЗапроса);
				 структураКтоЗапросНаРезультат.Вставить("ИмяФайлаНаЗапрос",Выборка.ИмяФайлаНаЗапрос);
				 структураКтоЗапросНаРезультат.Вставить("Реестр",Выборка.Реестр);
				 структураКтоЗапросНаРезультат.Вставить("СтрокаAnswer",Выборка.СтрокаAnswer);
				 структураКтоЗапросНаРезультат.Вставить("Должник",Выборка.Должник);
				 структураКтоЗапросНаРезультат.Вставить("СтрокаРезультат",Выборка.СтрокаРезультат);
				 
				 
		 
		 
		 массивЗапросНаРезультат.Добавить(структураКтоЗапросНаРезультат);
		 

		
		
	КонецЦикла;

    Возврат массивЗапросНаРезультат;

	
	
КонецФункции // ()



&НаСервере
Функция ПолучитьКтоЗапросНаРезультат() Экспорт
	
	массивЗапросНаРезультат = Новый Массив();
	отв=Перечисления.РезультатЗапросаВФССП.ПолученОтветНаЗапрос;
    отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;
	
	  Запрос = Новый Запрос;
	  Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 45
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник,
		|	ЗапросывФССПдляРеестра.СтрокаРезультат КАК СтрокаРезультат,
		|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", отв);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		
		 структураКтоЗапросНаРезультат=Новый Структура;
    	 		 структураКтоЗапросНаРезультат.Вставить("ЗапросПослан",Выборка.ЗапросПослан);
				 структураКтоЗапросНаРезультат.Вставить("СтрокаЗапроса",Выборка.СтрокаЗапроса);
				 структураКтоЗапросНаРезультат.Вставить("ИмяФайлаНаЗапрос",Выборка.ИмяФайлаНаЗапрос);
				 структураКтоЗапросНаРезультат.Вставить("Реестр",Выборка.Реестр);
				 структураКтоЗапросНаРезультат.Вставить("СтрокаAnswer",Выборка.СтрокаAnswer);
				 структураКтоЗапросНаРезультат.Вставить("Должник",Выборка.Должник);
				 структураКтоЗапросНаРезультат.Вставить("СтрокаРезультат",Выборка.СтрокаРезультат);
				 
				 
		 
		 
		 массивЗапросНаРезультат.Добавить(структураКтоЗапросНаРезультат);
		 

		
		
	КонецЦикла;

    Возврат массивЗапросНаРезультат;

	
	
КонецФункции // ()


&НаСервере
Функция ПолучитьКтоЗапросилНаСерверВсе() Экспорт
     
   массивКтозапросил = Новый Массив();
   
   ЗапроССт=Перечисления.РезультатЗапросаВФССП.ПослатьЗапрос;
   запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;

		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ 
		|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
		|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
		|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
		|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
		|	ЗапросывФССПдляРеестра.КЗ КАК КЗ,
		|	ЗапросывФССПдляРеестра.Должник КАК Должник
		|ИЗ
		|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
		|ГДЕ
		|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
	
	Запрос.УстановитьПараметр("ЗапросПослан", ЗапроССт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
      		
		
		         структураКтозапросил=Новый Структура;
    	 		 структураКтозапросил.Вставить("СтрокаЗапроса",ВыборкаДетальныеЗаписи.СтрокаЗапроса);
				 структураКтозапросил.Вставить("ЗапросПослан",ВыборкаДетальныеЗаписи.ЗапросПослан);
				 структураКтозапросил.Вставить("Реестр",ВыборкаДетальныеЗаписи.Реестр);
				 структураКтозапросил.Вставить("ИмяФайлаНаЗапрос",ВыборкаДетальныеЗаписи.ИмяФайлаНаЗапрос);
				 структураКтозапросил.Вставить("КЗ",ВыборкаДетальныеЗаписи.КЗ);
				 структураКтозапросил.Вставить("Должник",ВыборкаДетальныеЗаписи.Должник);
				 
		 
		 
		 массивКтозапросил.Добавить(структураКтозапросил);
		 
		 
		
	КонецЦикла;
	
	Возврат массивКтозапросил;

КонецФункции // ()







&НаСервере
Функция ПолучитьКтоЗапросилНаСервер() Экспорт
     
   массивКтозапросил = Новый Массив();
   
   ЗапроССт=Перечисления.РезультатЗапросаВФССП.ПослатьЗапрос;
   запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;
   
   
   //  //    временно только Алфа банк
   //
   //банкАльфа=Справочники.Банки.НайтиПоКоду("000000009");
   //
   // реестр=Документы.Реестр.НайтиПоРеквизиту("Банк",банкАльфа);
   //
   //
   //
   //Запрос = Новый Запрос;
   // Запрос.Текст = 
   // 	"ВЫБРАТЬ ПЕРВЫЕ 50
   // 	|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
   // 	|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
   // 	|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
   // 	|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
   // 	|	ЗапросывФССПдляРеестра.КЗ КАК КЗ,
   // 	|	ЗапросывФССПдляРеестра.Должник КАК Должник
   // 	|ИЗ
   // 	|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
   // 	|ГДЕ
   // 	|	ЗапросывФССПдляРеестра.Реестр = &Реестр
   // 	|	И
   // 	|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
   // 
   // Запрос.УстановитьПараметр("ЗапросПослан", ЗапроССт);
   // Запрос.УстановитьПараметр("Реестр", реестр);
   // 
   // РезультатЗапроса = Запрос.Выполнить();

   
   
   
   
    Запрос = Новый Запрос;
    Запрос.Текст = 
    	"ВЫБРАТЬ ПЕРВЫЕ 50
    	|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
    	|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
    	|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
    	|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
    	|	ЗапросывФССПдляРеестра.КЗ КАК КЗ,
    	|	ЗапросывФССПдляРеестра.Должник КАК Должник
    	|ИЗ
    	|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
    	|ГДЕ
    	|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
    
    Запрос.УстановитьПараметр("ЗапросПослан", ЗапроССт);
    
    РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
      		
		
		         
		
		
		         структураКтозапросил=Новый Структура;
    	 		 структураКтозапросил.Вставить("СтрокаЗапроса",ВыборкаДетальныеЗаписи.СтрокаЗапроса);
				 структураКтозапросил.Вставить("ЗапросПослан",ВыборкаДетальныеЗаписи.ЗапросПослан);
				 структураКтозапросил.Вставить("Реестр",ВыборкаДетальныеЗаписи.Реестр);
				 структураКтозапросил.Вставить("ИмяФайлаНаЗапрос",ВыборкаДетальныеЗаписи.ИмяФайлаНаЗапрос);
				 структураКтозапросил.Вставить("КЗ",ВыборкаДетальныеЗаписи.КЗ);
				 структураКтозапросил.Вставить("Должник",ВыборкаДетальныеЗаписи.Должник);
				 
		 
		 
		 массивКтозапросил.Добавить(структураКтозапросил);
		 
		 
		
	КонецЦикла;
	
	Возврат массивКтозапросил;

КонецФункции // ()










&НаСервере
Процедура Запустить()

	  ЗапросыВФССП.ЗапросВФССППослать();

	  
   		  
	   Сообщить("Послан запрос ЗапросВФССППослать");
	   
	   

  КонецПроцедуры

  
  
&НаКлиенте
  Процедура ПроверитьОтветНазапрос(Команда)
	  
	  
	       ПроверитьОтветНазапросНеКом(); 
	  
	       			  
			

	  //Сообщить("Ок-1");

  КонецПроцедуры
  
 &НаКлиенте
  Процедура ПроверитьОтветНазапросНеКом() 
  
	        прогрпуть="C:\Distr\PR\FSSPGROUP\";
		 
	        имяфайлатемп=прогрпуть+"reqFirst.txt";

			
			имяфайлаключ=прогрпуть+"lock.txt";
			
			
			
    		ФайлВыбрКлюч = Новый Файл(имяфайлаключ);

			
			ФайлВыбр = Новый Файл(имяфайлатемп);
			
			ФайлОтвет=Новый Файл("C:\Distr\PR\FSSPAnswerGROUP\reqFirst___.txt");

			
			Оповещение = Новый ОписаниеОповещения("IDDQD", ЭтотОбъект);

			
    		  Если  ФайлВыбр.Существует()  И (НЕ ФайлВыбрКлюч.Существует()) Тогда

				  
				       
				     стрп="C:\Distr\FSSP\FSSPAnswerGROUP.exe";
				  
				  
				    НачатьЗапускПриложения(Оповещение,стрп,,Истина);
				          				  
				  
				    WScript = Новый COMОбъект("WScript.Shell");
				    WScript.Run("timeout /t " + 10, 0, Истина);

					
					 //C:\Distr\PR\FSSPAnswerGROUP
					 
					  Если ФайлОтвет.Существует()  Тогда
					  
					  	     // создам файл ключ
							Файл = Новый ЗаписьТекста("C:\Distr\PR\FSSPGROUP\lock.txt");
		                    Файл.ЗаписатьСтроку("Lock");
		                    Файл.Закрыть();
						

					  
					  КонецЕсли;
					 
					 
					Сообщить("Послан запрос.  FSSPAnswerGROUP.exe");

												
					

			Иначе
					
					Сообщить("Нет данных на запрос или уже послан запрос.  FSSPAnswerGROUP.exe");
		
				  
				  
 		  КонецЕсли;
	  
			  

	  
	  
  КонецПроцедуры

  
&НаКлиенте
Процедура ЗапросВФССПЕстьлифайлЗапроса()
	
	
        массиаКогоЕстьлифайлЗапроса=УКогоЕстьлифайлЗапроса();
		
		    // Пройдусь по массиву
			
			
		    Для каждого стр Из массиаКогоЕстьлифайлЗапроса  Цикл
				
				   Файл = Новый Файл(стр["ИмяФайлаНаЗапрос"]);
			
   	        	    ФайлНет = Новый Файл(стр["СтрокаЗапросаНет"]);
					
					Если  ФайлНет.Существует() Тогда
						
						фестн=Истина;
					иначе
						фестн=Ложь;
						
					КонецЕсли;
	
					//  Временно
					фестн=Ложь;
					
				
				    Если  Файл.Существует() Тогда
					  
						   //поменять в реестре сведений
				  
			        	   //ПоменятьВРеестреКто(стр["Реестр"],стр["Должник"],стр["ИмяФайлаНаЗапрос"]);

						   ПоменятьВРеестреКогоЕстьлифайлЗапроса(стр["Реестр"],стр["Должник"],стр["ИмяФайлаНаЗапрос"],фестн);
						
						   Сообщить("Файл есть запрос  "+ стр["Должник"]);
						   
						
		            КонецЕсли;
						
					  
				  
			КонецЦикла;	   
		

		
		
	   //Проверитьзапрос();
	   
	    WScript = Новый COMОбъект("WScript.Shell");
        WScript.Run("timeout /t " + 10, 0, Истина);
	   

	   
	    Сообщить("Проверяю  есть ли вайл в C:\Distr\PR\FSSP"); 
	   
		   

КонецПроцедуры


&НаСервере
Процедура ПоменятьВРеестреКогоЕстьлифайлЗапроса(реестр,должник,имяф,файлнет)
	
	         запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;
	
           	 запротв=Перечисления.РезультатЗапросаВФССП.ПолученОтветНаЗапрос;
	
	         отротвназапр=Перечисления.РезультатЗапросаВФССП.ОтрицателтныйОтветНаЗапрос;

	
	
				НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
				
		        НаборЗаписей.Отбор.Реестр.Установить(реестр);
				НаборЗаписей.Отбор.Должник.Установить(должник);
				НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(имяф);
				
				
				НаборЗаписей.Прочитать();
				
				Для каждого Запись Из НаборЗаписей Цикл
					Если Запись.ЗапросПослан=запрОк И (НЕ файлнет)  Тогда
					
						  Запись.ЗапросПослан =запротв;

					
					КонецЕсли;
		              					
		        КонецЦикла;
				
				
				
				НаборЗаписей.Записать();
   									   
    
	
  
	
КонецПроцедуры

   
   

  
&НаСервере
Функция УКогоЕстьлифайлЗапроса ()

	     массивКогоЕстьлифайлЗапроса = Новый Массив();
	   
	     запрОк=Перечисления.РезультатЗапросаВФССП.ПосланЗапрос;
	 
		 
		  Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
				|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
				|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
				|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
				|	ЗапросывФССПдляРеестра.Должник КАК Должник,
				|	ЗапросывФССПдляРеестра.СтрокаЗапросаНет КАК СтрокаЗапросаНет,
				|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
				|ИЗ
				|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
				|ГДЕ
				|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
			
			Запрос.УстановитьПараметр("ЗапросПослан", запрОк);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
			     структураКтозапросил=Новый Структура;
    	 		 структураКтозапросил.Вставить("СтрокаЗапроса",Выборка.СтрокаЗапроса);
				 структураКтозапросил.Вставить("ЗапросПослан",Выборка.ЗапросПослан);
				 структураКтозапросил.Вставить("Реестр",Выборка.Реестр);
				 структураКтозапросил.Вставить("ИмяФайлаНаЗапрос",Выборка.ИмяФайлаНаЗапрос);
				 структураКтозапросил.Вставить("СтрокаAnswer",Выборка.СтрокаAnswer);
				 структураКтозапросил.Вставить("Должник",Выборка.Должник);
				 структураКтозапросил.Вставить("СтрокаЗапросаНет",Выборка.СтрокаЗапросаНет);
				 
				 
		 
		 
		         массивКогоЕстьлифайлЗапроса.Добавить(структураКтозапросил);
				
			КонецЦикла;

		 
		 
		Возврат массивКогоЕстьлифайлЗапроса; 
	
КонецФункции // ()





&НаСервере
Процедура Проверитьзапрос()

	
		//ЗапросыВФССП.ЗапросВФССПЕстьлифайлЗапроса();
		
		
		
		  
	  Сообщить("Проверяется есть ли файл запрося");


  КонецПроцедуры
  
  
  
  

&НаКлиенте
  Процедура ПослатьЗапросНаРезультат(Команда)
	  
	  ПослатьЗапросНаРезультатНеКоманд();
	  
	 			
			

  КонецПроцедуры
  
&НаКлиенте  
Процедура ПослатьЗапросНаРезультатНеКоманд()
	  // Проверить файл ответ и обработать его
	  
	       ТЧ.Очистить();
		   ФССП.Очистить();
	  
	  
	  
	        должникиМассив=Новый Массив;
	  
	        прогрпуть="C:\Distr\PR\FSSPAnswerGROUP\";
		 
	        имяфайлатемп=прогрпуть+"reqFirst___.txt";
			
			ФайлВыбр = Новый Файл(имяфайлатемп);

			
			Если  ФайлВыбр.Существует() Тогда

				  //  Начну обрабатывать
				  
				    сч=0;
				  
				    ПрочитанныйТекст = Новый ЧтениеТекста(имяфайлатемп, КодировкаТекста.UTF8);
					СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();
					
					счт=0;
					Пока СтрокаТ <> Неопределено Цикл
						
						    должСтруктура=Новый Структура;
							
							СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();
							
							Если  СтрокаТ="0" Тогда
								  счт=счт+1;
								  сч=1;
								  
								  
								 Для Счетчик = 1 По 3 Цикл

									
									
									СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();
									
									Если сч=2 Тогда
										
										 должСтруктура.Вставить("должник", СтрокаТ);
									
									КонецЕсли;
									
									Если сч=3 Тогда
										
										 должСтруктура.Вставить("деньРождения", СтрокаТ);
									
									КонецЕсли;
																		
									 сч=сч+1;
								 КонецЦикла;  
								 
								
								    должникиМассив.Добавить(должСтруктура);

									// теперь пройдусь по телу до ]
									
									СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();
									
									
										Пока СтрокаТ<>"&&&"  Цикл
											
											
											//СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();       // это {
											
									        Если СтрокаТ="  {" Тогда
												
												
												Запись=ФССП.Добавить();
				 							    Запись.Должник=должСтруктура["должник"];
											    Запись.ДеньРождения=должСтруктура["деньРождения"];
												
												  Для Счетчик = 1 По 7 Цикл
														
														  СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();
														  
															 
														  Если Счетчик = 1 Тогда
																												  
		                                                     Запись.name= СтрокаТ; 													 
														  
														  КонецЕсли;
	 
															 
														  Если Счетчик = 2 Тогда
																												  
		                                                     Запись.exe_production= СтрокаТ; 													 
														  
														  КонецЕсли;
														
														   Если Счетчик = 3 Тогда
																												  
		                                                     Запись.details= СтрокаТ; 													 
														  
														  КонецЕсли;

														  
														   Если Счетчик = 4 Тогда
																												  
		                                                     Запись.subject= СтрокаТ; 													 
														  
														  КонецЕсли;
 
														   Если Счетчик = 5 Тогда
																												  
		                                                     Запись.department= СтрокаТ; 													 
														  
														  КонецЕсли;

														  
														    Если Счетчик = 6 Тогда
																												  
		                                                     Запись.bailiff= СтрокаТ; 													 
														  
														  КонецЕсли;
 
														   Если Счетчик = 7 Тогда
																												  
		                                                     Запись.ip_end= СтрокаТ; 													 
														  
														  КонецЕсли;

														  
														  
														 
												   КонецЦикла;	
													  
										   Иначе
										   		   
									     //   Если пустой    ФССППустой
										 
										    ЗаписьПустой=ФССППустой.Добавить();
											ЗаписьПустой.Должник=должСтруктура["должник"];
											ЗаписьПустой.ДеньРождения=должСтруктура["деньРождения"];

										 
										     
											   
											   
										   КонецЕсли; 		
											
													
															
  									        СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();

											
										КонецЦикла;
										  
							Иначе
								Если СтрокаТ ="3" Тогда
									СтрокаТ = ПрочитанныйТекст.ПрочитатьСтроку();

								    СтрокаДолж = ПрочитанныйТекст.ПрочитатьСтроку();
									СтрокаДолжДеньР = ПрочитанныйТекст.ПрочитатьСтроку();
									
									ЗаписьОшибка=ФССПОшибка.Добавить();
									ЗаписьОшибка.Должник=СтрокаДолж;
									ЗаписьОшибка.ДеньРождения=СтрокаДолжДеньР;
									
								
								КонецЕсли;
								
							
							КонецЕсли;
						     
						   
							
							
					
					КонецЦикла;

					ПрочитанныйТекст.Закрыть();
									
				
				
				//Сообщить("Ок--файл есть");		
					
				
				 
			КонецЕсли;	 
			
			

	
КонецПроцедуры
  
  
  
 &НаКлиенте
 Процедура  ПослатьЗапросНаРезультатНеКом()
	  
	   		      Оповещение = Новый ОписаниеОповещения("IDDQD", ЭтотОбъект);
				  
				  
				  
				  
				  
				  
				  
					//НачатьЗапускПриложения(Оповещение,стрп,,Истина);
							   
    				   WScript = Новый COMОбъект("WScript.Shell");
	                   WScript.Run("timeout /t " + 8, 0, Истина);
					   
			
		
	  
	  Сообщить("Послал СтрокаAnswer");
	 
  КонецПроцедуры 
  
  
  &НаСервере
  Процедура УдалитьИзРегистра(имяфназапр,реестрР)
	  
	  отв=Перечисления.РезультатЗапросаВФССП.ПолученОтветНаЗапрос;
	  
	  регФССП=РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей();
	  
	  регФССП.Отбор.Реестр.Установить(реестрР);
	  регФССП.Отбор.ИмяФайлаНаЗапрос.Установить(имяфназапр);
	  
	  регФССП.Прочитать();
	  
	  Для каждого рег  Из регФССП Цикл
		  
		  регФССП.Удалить(рег);
		  	  
	  КонецЦикла;
	  
	  
	  регФССП.Записать();
	  
	  
	  
	  
  
  КонецПроцедуры
  
  
  
  
 &НаКлиенте 
 Процедура  ПоменятьВРеестреКтоРезультатЕстьЛиФайл()
 
      массиаКтоЗапросНаРезультат= ПолучитьКтоЗапросНаРезультат();

	     Для каждого стр Из массиаКтоЗапросНаРезультат  Цикл
				  
				      Файл = Новый Файл(стр["СтрокаРезультат"]);
				     
				      Если Файл.Существует() Тогда
				          ПоменятьВРеестреКтоРезультат(стр["Реестр"],стр["Должник"],стр["ИмяФайлаНаЗапрос"]);						  
						  
						  Сообщить(стр["СтрокаРезультат"]);
						  
				      КонецЕсли;	  
				    	  
             
				  КонецЦикла;	
				  
	Сообщить("ПоменятьВРеестреКтоРезультатЕстьЛиФайл()");			  
			 
КонецПроцедуры
  
  
  
  
  
  
&НаСервере
Процедура ПоменятьВРеестреКтоРезультат(реестр,должник,имяф)
	
       отв=Перечисления.РезультатЗапросаВФССП.ПолученОтветНаЗапрос;
       отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;

	   
	     НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
					
			        НаборЗаписей.Отбор.Реестр.Установить(реестр);
					НаборЗаписей.Отбор.Должник.Установить(должник);
					НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(имяф);
					
					
					НаборЗаписей.Прочитать();
					Для каждого Запись Из НаборЗаписей Цикл
						Если Запись.ЗапросПослан=отв И Запись.ИмяФайлаНаЗапрос=имяф Тогда
						
							 Запись.ЗапросПослан =отвпол;
						
						КонецЕсли;
						
						  
						
			        КонецЦикла;
			        НаборЗаписей.Записать();
									   

  
	
КонецПроцедуры
  
  
  
&НаКлиенте
Процедура ФССППослатьЗапросНаРезультат()

	 ПроверитьРезультат();

КонецПроцедуры

  
  
  
  &НаСервере
Процедура ПроверитьРезультат()

	  ЗапросыВФССП.ФССППослатьЗапросНаРезультат();
	  
	  Сообщить("Послать запрос на Результат");


КонецПроцедуры



  
  
  
  

&НаКлиенте
Процедура ОбработатьРезультатКл(Команда)
	
	      ОбработатьРезультатКлНеКоманд();
	
     
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатКлНеКоманд()
	
	      	
	Попытка
		
				// отмечу у кого ошибки
			Если ФССПОшибка.Количество()>0  Тогда
			
				Для каждого стр Из ФССПОшибка  Цикл
					
					   Если стр.ДеньРождения<>"" Тогда
					   
					   	     РеестрФССПОшибкаЗапроса(стр.Должник ,стр.ДеньРождения);

					   
					   КонецЕсли;
					  
					   				
				КонецЦикла;
				
				
			
			КонецЕсли;
					
			Если ФССП .Количество()>0  Тогда
				
				// пройдусь по ФССП
			
		     	   exe_production="";
				   details="";
				   subject_fssp="";
				   department="";
				   bailiff="";
				   ip_end="";

			
			      Для каждого стрД  Из ФССП  Цикл
					  
					  Если стрД.ДеньРождения<>"" Тогда
					  
					  	    exe_production=ПолучитьТело(стрД.exe_production,"exe_production");
						   details =ПолучитьТело(стрД.details,"details");
						   subject_fssp=ПолучитьТело(стрД.subject,"subject");
		                   department=ПолучитьТело(стрД.department,"department"); 
						   bailiff=ПолучитьТело(стрД.bailiff,"bailiff"); 
						   ip_end=ПолучитьТело(стрД.ip_end,"ip_end"); 
						   
						  ЗаписатьВФССПГруппа(стрД.Должник,стрД.ДеньРождения,exe_production,details,subject_fssp,department,bailiff,ip_end);
						  
						  //  В реестре ФССП отметить - обработан
						  
						   ВРегистреФССПОбработан(стрД.Должник,стрД.ДеньРождения);

					  
					  КонецЕсли;
					    
					  
					      						  
				  
				  КонецЦикла;
			

				  //  удалю или перемещу файлы
				  
					//  C:\Distr\PR\FSSPAnswerGROUP\reqFirst___.txt
					
					стрДата=Формат(НачалоМинуты(ТекущаяДата()),"ДФ=yyyy-MM-dd");
					
					стрМин=Формат(ТекущаяДата(), "ДЛФ=T");
					
					стрМин=СтрЗаменить(стрМин,":","-");

					
					ПутьКФайлуПриемнику="C:\Distr\PR\FSSBAK\reqFirst___"+стрДата+"_"+стрМин+".txt";
					
				    ПереместитьФайл("C:\Distr\PR\FSSPAnswerGROUP\reqFirst___.txt", ПутьКФайлуПриемнику);
					
					
					//  C:\Distr\PR\FSSPGROUP\reqFirst.txt
					//  C:\Distr\PR\FSSPGROUP\lock.txt
					
					// C:\Distr\PR\GROUP\groupreq.txt
					
					УдалитьФайлы("C:\Distr\PR\FSSPGROUP\reqFirst.txt");
					УдалитьФайлы("C:\Distr\PR\FSSPGROUP\lock.txt");
					
					УдалитьФайлы("C:\Distr\PR\GROUP\groupreq.txt");
					УдалитьФайлы("C:\Distr\PR\GROUP\lock.txt");
					
					
			Иначе		

				Если ФССППустой.Количество()>0 Тогда
				
				  	 Для каждого стр Из ФССППустой  Цикл
					
						  Если стр.ДеньРождения<>"" Тогда
					   
					   	      РеестрФССППустойЗапрос(стр.Должник ,стр.ДеньРождения);

					   
  					   КонецЕсли;

						 
					   				
				     КонецЦикла;

					 
					 стрДата=Формат(НачалоМинуты(ТекущаяДата()),"ДФ=yyyy-MM-dd");
					
					стрМин=Формат(ТекущаяДата(), "ДЛФ=T");
					
					стрМин=СтрЗаменить(стрМин,":","-");

					
					ПутьКФайлуПриемнику="C:\Distr\PR\FSSBAK\reqFirst___"+стрДата+"_"+стрМин+".txt";
					
				    ПереместитьФайл("C:\Distr\PR\FSSPAnswerGROUP\reqFirst___.txt", ПутьКФайлуПриемнику);
					
					
					//  C:\Distr\PR\FSSPGROUP\reqFirst.txt
					//  C:\Distr\PR\FSSPGROUP\lock.txt
					
					// C:\Distr\PR\GROUP\groupreq.txt
					
					УдалитьФайлы("C:\Distr\PR\FSSPGROUP\reqFirst.txt");
					УдалитьФайлы("C:\Distr\PR\FSSPGROUP\lock.txt");
					
					УдалитьФайлы("C:\Distr\PR\GROUP\groupreq.txt");
					УдалитьФайлы("C:\Distr\PR\GROUP\lock.txt");

					 
				Иначе
					
					
						    прогрпуть="C:\Distr\PR\FSSPAnswerGROUP\";
						 
					        имяфайлатемп=прогрпуть+"reqFirst___.txt";
							
							ФайлВыбр = Новый Файл(имяфайлатемп);

							
							Если  ФайлВыбр.Существует() Тогда
								
								стрДата=Формат(НачалоМинуты(ТекущаяДата()),"ДФ=yyyy-MM-dd");
								
								стрМин=Формат(ТекущаяДата(), "ДЛФ=T");
								
								стрМин=СтрЗаменить(стрМин,":","-");

								
								ПутьКФайлуПриемнику="C:\Distr\PR\FSSBAK\reqFirst___"+стрДата+"_"+стрМин+".txt";
								
							    ПереместитьФайл("C:\Distr\PR\FSSPAnswerGROUP\reqFirst___.txt", ПутьКФайлуПриемнику);
								
								
								//  C:\Distr\PR\FSSPGROUP\reqFirst.txt
								//  C:\Distr\PR\FSSPGROUP\lock.txt
								
								// C:\Distr\PR\GROUP\groupreq.txt
								
								УдалитьФайлы("C:\Distr\PR\FSSPGROUP\reqFirst.txt");
								УдалитьФайлы("C:\Distr\PR\FSSPGROUP\lock.txt");
								
								УдалитьФайлы("C:\Distr\PR\GROUP\groupreq.txt");
								УдалитьФайлы("C:\Distr\PR\GROUP\lock.txt");


									 
							КонецЕсли;	
							
							
					
					 
				КонецЕсли;
				
				
				
				
				
			КонецЕсли;	
			
			
			ФССП.Очистить();
			ФССПОшибка.Очистить();
			ФССППустой.Очистить();
			
			  
	
	Исключение
		
		
		
		
		
		ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
	    ПоказатьПредупреждение(,НСтр("ru = 'Операция не может быть выполнена по причине:'") + Символы.ПС + ТекстСообщения);		
	КонецПопытки;
	
	

	
КонецПроцедуры


&НаСервере
Процедура РеестрФССППустойЗапрос(долж,деньрож)
	
	
	 отвобр=Перечисления.РезультатЗапросаВФССП.Обработан;
     должСсылка=Неопределено;
	
	  
	  НоваяДата = Дата(деньрож+" 00:00:00"); 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Должники КАК Должники
		|ГДЕ
		|	Должники.Наименование = &Наименование
		|	И Должники.ДатаРождения = &ДатаРождения";
	
	Запрос.УстановитьПараметр("ДатаРождения", НоваяДата);
	Запрос.УстановитьПараметр("Наименование", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		 должСсылка=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	

	Если должСсылка<>Неопределено  Тогда
		
		 
		  НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей();  			
	      НаборЗаписей.Отбор.Должник.Установить(должСсылка);
		  НаборЗаписей.Прочитать();
		  
		  Для каждого Запись Из НаборЗаписей Цикл

			  Запись.ЗапросПослан =отвобр;
			  //Запись.Ошибка_запрос=Истина;
			  
		  КонецЦикла;
		  
		  НаборЗаписей.Записать();
	
	КонецЕсли;
	
	

КонецПроцедуры



&НаСервере
Процедура ВРегистреФССПОбработан(долж, деньрожд)
	
			 отвобр=Перечисления.РезультатЗапросаВФССП.Обработан;
		     должСсылка=Неопределено;
			
			  
			  НоваяДата = Дата(деньрожд+" 00:00:00"); 

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	Должники.Ссылка КАК Ссылка
				|ИЗ
				|	Справочник.Должники КАК Должники
				|ГДЕ
				|	Должники.Наименование = &Наименование
				|	И Должники.ДатаРождения = &ДатаРождения";
			
			Запрос.УстановитьПараметр("ДатаРождения", НоваяДата);
			Запрос.УстановитьПараметр("Наименование", долж);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				 должСсылка=ВыборкаДетальныеЗаписи.Ссылка;
				
			КонецЦикла;

			
			Если должСсылка<>Неопределено  Тогда
		
					 
					  НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей();  			
				      НаборЗаписей.Отбор.Должник.Установить(должСсылка);
					  НаборЗаписей.Прочитать();
					  
					  Для каждого Запись Из НаборЗаписей Цикл

						  Запись.ЗапросПослан =отвобр;
				 
						  
					  КонецЦикла;
					  
					  НаборЗаписей.Записать();
	
	        КонецЕсли;

	
КонецПроцедуры




&НаКлиенте
Функция ПолучитьТело (стр,стрвыбор)
	
	 отвстр="";
	  
    Если стрвыбор="exe_production" Тогда
		
		 кол=СтрДлина(стр)-23;
		
		отвстр=Прав(стр,кол);
		
		кол=СтрДлина(отвстр)-2;
		отвстр=Лев(отвстр,кол);
	
	КонецЕсли;	       
	
	
	Если стрвыбор="details" Тогда
		
		 кол=СтрДлина(стр)-16;
		
		отвстр=Прав(стр,кол);
		
		кол=СтрДлина(отвстр)-2;
		отвстр=Лев(отвстр,кол);
	
	КонецЕсли;	       
	
	
	Если стрвыбор="subject" Тогда
		
		 кол=СтрДлина(стр)-16;
		
		отвстр=Прав(стр,кол);
		
		кол=СтрДлина(отвстр)-2;
		отвстр=Лев(отвстр,кол);
	
	КонецЕсли;	       
	
	
	Если стрвыбор="department" Тогда
		
		 кол=СтрДлина(стр)-19;
		
		отвстр=Прав(стр,кол);
		
		кол=СтрДлина(отвстр)-2;
		отвстр=Лев(отвстр,кол);
	
	КонецЕсли;	 
	
	
	Если стрвыбор="bailiff" Тогда
		
		 кол=СтрДлина(стр)-16;
		
		отвстр=Прав(стр,кол);
		
		кол=СтрДлина(отвстр)-2;
		отвстр=Лев(отвстр,кол);
	
	КонецЕсли;	 
	
	
	Если стрвыбор="ip_end" Тогда
		
		 кол=СтрДлина(стр)-15;
		
		отвстр=Прав(стр,кол);
		
		кол=СтрДлина(отвстр)-1;
		отвстр=Лев(отвстр,кол);
	
	КонецЕсли;	 
	
	

	
	
	
	
	Возврат отвстр;

КонецФункции // ()





&НаСервере
Процедура ЗаписатьВФССПГруппа(долж, деньРож,exe_production,details,subject_fssp,department,bailiff,ip_end)

	 отвобр=Перечисления.РезультатЗапросаВФССП.Обработан;
     должСсылка=Неопределено;
	
	  
     НоваяДата = Дата(деньрож+" 00:00:00"); 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Должники КАК Должники
		|ГДЕ
		|	Должники.Наименование = &Наименование
		|	И Должники.ДатаРождения = &ДатаРождения";
	
	Запрос.УстановитьПараметр("ДатаРождения", НоваяДата);
	Запрос.УстановитьПараметр("Наименование", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		 должСсылка=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	

	Если должСсылка<>Неопределено Тогда
	            		//   Проверить была ли такая запись?
			   
			 	
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ФССП.exe_production КАК exe_production,
				|	ФССП.details КАК details
				|ИЗ
				|	Справочник.ФССП КАК ФССП
				|ГДЕ
				|	ФССП.Должник = &Должник
				|	И ФССП.exe_production ПОДОБНО &exe_production";
			
			Запрос.УстановитьПараметр("exe_production", exe_production);
			Запрос.УстановитьПараметр("Должник", должСсылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			колСтр=ВыборкаДетальныеЗаписи.Количество();
			
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				// Вставить обработку выборки ВыборкаДетальныеЗаписи
			КонецЦикла;
			
			
			      Если колСтр=0 Тогда
				  
				  	      									  
								СпрФССП=Справочники.ФССП;
								НовЭлем=СпрФССП.СоздатьЭлемент();
								НовЭлем.Должник=должСсылка;
								НовЭлем.exe_production=exe_production;
								НовЭлем.details=details;
								НовЭлем.subject_fssp=subject_fssp;
						   		НовЭлем.department=department;
								НовЭлем.bailiff=bailiff;
								НовЭлем.ip_end=ip_end;
								НовЭлем.Записать();	   			  
								  

				  
				  КонецЕсли;

			
			
			

		
	
	КонецЕсли;
			
			

КонецПроцедуры




&НаСервере
Процедура РеестрФССПОшибкаЗапроса(долж,деньрож)
	
	
	 отвобр=Перечисления.РезультатЗапросаВФССП.Обработан;
     должСсылка=Неопределено;
	
	 Попытка
	 
	 	  НоваяДата = Дата(деньрож+" 00:00:00"); 
	 
	 Исключение
		        НоваяДата=Дата('00010101');
		 
	 КонецПопытки;
	 
	  
	  

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Должники.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Должники КАК Должники
		|ГДЕ
		|	Должники.Наименование = &Наименование
		|	И Должники.ДатаРождения = &ДатаРождения";
	
	Запрос.УстановитьПараметр("ДатаРождения", НоваяДата);
	Запрос.УстановитьПараметр("Наименование", долж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		 должСсылка=ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;
	
	

	Если должСсылка<>Неопределено  Тогда
		
		 
		  НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей();  			
	      НаборЗаписей.Отбор.Должник.Установить(должСсылка);
		  НаборЗаписей.Прочитать();
		  
		  Для каждого Запись Из НаборЗаписей Цикл

			  Запись.ЗапросПослан =отвобр;
			  Запись.Ошибка_запрос=Истина;
			  
		  КонецЦикла;
		  
		  НаборЗаписей.Записать();
	
	КонецЕсли;
	
	

КонецПроцедуры


	
  
  &НаКлиенте
  Процедура ОбработатьРезультатКлНеКом()
	  
	 массиаКтоПолучилОтвет=ПолучитьКтоПолучилОтветНаСервер();
	  
	     // Пройдусь по массиву
			
           exe_production="";
		   details="";
		   subject_fssp="";
		   department="";
		   bailiff="";
		   ip_end="";

		 
		 Для каждого стр Из массиаКтоПолучилОтвет  Цикл
			 
			        Файл = Новый Файл(стр["СтрокаРезультат"]);

					Если  Файл.Существует() Тогда
						
					   разм=Файл.Размер();

					   Если разм<>0 Тогда
						   
						   мСтрокФайла = Новый Массив();
											
											//прочитать строку считывает одну строку из файла
											//если достигнут конец файла, то возвращается значение НЕОПРЕДЕЛЕНО
											
											 
											ПрочитанныйТекст = Новый ЧтениеТекста(стр["СтрокаРезультат"], КодировкаТекста.UTF8);
											
											Строка = ПрочитанныйТекст.ПрочитатьСтроку();
											//а не был ли файл пуст?
											Если Строка <> Неопределено Тогда
											     мСтрокФайла.Добавить(Строка);
											КонецЕсли;
											
											Пока Строка <> Неопределено Цикл
					                           Строка = ПрочитанныйТекст.ПрочитатьСтроку();
											     Если Строка <> Неопределено Тогда
											          мСтрокФайла.Добавить(Строка);
											     КонецЕсли;
											КонецЦикла;
																	
											ПрочитанныйТекст.Закрыть();
											
											
										    номерстр=0;
											Для каждого стрф  Из  мСтрокФайла Цикл
												
											 //Сообщить("номер строки= "+ номерстр);	
												 
											  // Подготовлю строку для записи в ФССП
											  Если (НЕ СокрЛП(стрф)="{") И (НЕ СокрЛП(стрф)="}") И (НЕ СокрЛП(стрф)="}&{") Тогда
											  
												  
												  Если  номерстр=2 Тогда
													  // вытащу подстраку exe_production
													  exe_production=ВытащуПодстроку("exe_production", стрф);
													  
													  //Сообщить(exe_production);
												  КонецЕсли; 
												  
												  Если  номерстр=3 Тогда
													  
													  details=ВытащуПодстроку("details", стрф);
													  
													  
													  // Если исп лист или Судебный приказ вытащу для Исполнительные документы
													  
													   СтрукИсп=ВытащитьИспДок (стрф);
													   
													   ОписаниеДок= стрф;
													   
													   // Запишу в Исполнительные документы
													   
													  									   
													   //ЗаписьВИсполнительныеДокументы(СсылкаДолж,СтрукИсп.ВидИспДокумента,НомерИспДок,ДатаИспДок,ОписаниеДок)

													     
													   
													   
													   //Сообщить(СтрукИсп.НомерИспДок);
													   
													   //Сообщить(СтрукИсп.ДатаИспДок);
													   
													  
													 
												  КонецЕсли; 
												  
												  
												  
												   Если  номерстр=4 Тогда
													  
													 subject_fssp =ВытащуПодстроку("subject", стрф);
													  
													  ОписаниеДок=ОписаниеДок+" - " + стрф;
										
												   КонецЕсли; 
												  
												   
												   Если  номерстр=5 Тогда
													  
													  department=ВытащуПодстроку("department", стрф);
										
												   КонецЕсли; 
												  
				                                   Если  номерстр=6 Тогда
													  
													  bailiff=ВытащуПодстроку("bailiff", стрф);
											
												   КонецЕсли; 
												   
												   
												   Если  номерстр=7 Тогда
													  
													  ip_end=ВытащуПодстроку("ip_end", стрф);
											
												   КонецЕсли; 
												   
												  //Сообщить(стрф+" - номер строки="+номерстр);
													 
											  
											  КонецЕсли; 
											  
											  
																	  
											  Если номерстр=8 Тогда
											      
												  
												  //Сообщить(стрф+" --------");
												  
																  //ИмяЗначенияПеречисленияПоСинониму( "ВидыИспДокументов", "Исполнительный лист")
												  
								          				  Если СтрукИсп.ВидИспДокумента="Исполнительный лист" ИЛИ СтрукИсп.ВидИспДокумента="Судебный приказ"  Тогда
													  
															  
															 перечислен= ИмяЗначенияПеречисленияПоСинонимуСтр( "ВидыИспДокументов", СтрукИсп.ВидИспДокумента);
															  

														    ЗаписьВИсполнительныеДокументы(стр["Должник"], перечислен ,СтрукИсп.НомерИспДок,СтрукИсп.ДатаИспДок,ОписаниеДок);

													  
													   
													   КонецЕсли;

												  
												  
												  
													 ЗаписатьВФССП (стр["Должник"],exe_production,details,subject_fssp,department,bailiff,ip_end);
													
													 
													 
													 
													 номерстр=0;						  
													
													
													
											  КонецЕсли;
											  
											  
											  
											  
											  
											  //ЗаписатьВФССП (СсылкаДолж,exe_production,details,subject_fssp,department,bailiff,ip_end)
										     		
					                         номерстр=номерстр+1;							 
											
											КонецЦикла;						
																	
										
						   
						   
										КонецЕсли;	 
										
										
				    ФайлРезульта = Новый Файл(стр["СтрокаРезультат"]);
					
					 Если ФайлРезульта.Существует() Тогда
					 
					 	     ПереместитьФайл(стр["СтрокаРезультат"], стр["СтрокаБАКфайл"]); // перезапишет, если уже есть такой файл
					   
					 
					 КонецЕсли;					
					   
					   
					   
					   ФайлНаЗапросT = Новый Файл(стр["ИмяФайлаНаЗапрос"]);
		
						Если ФайлНаЗапросT.Существует() Тогда
								
								//ПереместитьФайл(ФайлНаЗапросT, Выборка.СтрокаБакЗапрос); // перезапишет, если уже есть такой файл
								
							ПереместитьФайл(стр["ИмяФайлаНаЗапрос"], стр["СтрокаБакЗапрос"]); // перезапишет, если уже есть такой файл
							
						КонецЕсли;

					   
					   
						
					КонецЕсли; 
	
					
					 //   Изменить регистр
					 
					    ПоменятьВРеестреКтоОбработан(стр["Реестр"],стр["Должник"],стр["ИмяФайлаНаЗапрос"]);

					
					
					
			 
			 
			 
			 
	     КонецЦикла;
	  

	

      Сообщить("Ок-3");
  
	  
  КонецПроцедуры
  
&НаСервере
Процедура ПоменятьВРеестреКтоОбработан(реестр,должник,имяф)
	
	      отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;
	  
     	  отвобр=Перечисления.РезультатЗапросаВФССП.Обработан;

	
	
	                         НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
										
					        НаборЗаписей.Отбор.Реестр.Установить(реестр);
							НаборЗаписей.Отбор.Должник.Установить(должник);
							НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(имяф);
							
							
							НаборЗаписей.Прочитать();
							Для каждого Запись Из НаборЗаписей Цикл
								
								 Если Запись.ЗапросПослан=отвпол И Запись.Должник=должник Тогда
								 
								 	     Запись.ЗапросПослан =отвобр;
								 
								 КонецЕсли;
								
																		
					        КонецЦикла;
					        НаборЗаписей.Записать();
								   
						  						
  
	
КонецПроцедуры
  
  
 
 
&НаСервере
Функция ПолучитьКтоПолучилОтветНаСервер()

	  массивКтоПолучилОтвет = Новый Массив();

      отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;
	  
   	  
	  
	  
	  		Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
				|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
				|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
				|	ЗапросывФССПдляРеестра.СтрокаРезультат КАК СтрокаРезультат,
				|	ЗапросывФССПдляРеестра.СтрокаБАКфайл КАК СтрокаБАКфайл,
				|	ЗапросывФССПдляРеестра.СтрокаБакЗапрос КАК СтрокаБакЗапрос,
				|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
				|	ЗапросывФССПдляРеестра.Должник КАК Должник,
				|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer
				|ИЗ
				|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
				|ГДЕ
				|	ЗапросывФССПдляРеестра.ЗапросПослан = &ЗапросПослан";
			
			Запрос.УстановитьПараметр("ЗапросПослан", отвпол);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
		   Пока Выборка.Следующий() Цикл
			   
 			         структураКтозапросил=Новый Структура;
	    	 		 структураКтозапросил.Вставить("СтрокаЗапроса",Выборка.СтрокаЗапроса);
					 структураКтозапросил.Вставить("ЗапросПослан",Выборка.ЗапросПослан);
					 структураКтозапросил.Вставить("Реестр",Выборка.Реестр);
					 структураКтозапросил.Вставить("ИмяФайлаНаЗапрос",Выборка.ИмяФайлаНаЗапрос);
					 структураКтозапросил.Вставить("СтрокаAnswer",Выборка.СтрокаAnswer);
					 структураКтозапросил.Вставить("Должник",Выборка.Должник);
					 структураКтозапросил.Вставить("СтрокаРезультат",Выборка.СтрокаРезультат);
					 структураКтозапросил.Вставить("СтрокаБАКфайл",Выборка.СтрокаБАКфайл);
					 структураКтозапросил.Вставить("СтрокаБакЗапрос",Выборка.СтрокаБакЗапрос);
					 
				 
		 
		         массивКтоПолучилОтвет.Добавить(структураКтозапросил);
			   
           КонецЦикла;
		   
		   
		   
		   Возврат массивКтоПолучилОтвет;
		   
		   
		   
	

КонецФункции // ()

 
 
 
 
 &НаКлиенте
 Процедура ОбработатьОтвет()
	 
	 ОбработатьРезультатСерв();
	 
	  Сообщить("Обработать Ответ");

 
 КонецПроцедуры
 
 
 &НаКлиенте
 Процедура ПослатьЗапросЕщеРаз()
	 
	     ПослатьЗапросЕщеРазНаСерв();
	 
 
 КонецПроцедуры
 
 
  &НаСервере
Процедура ПослатьЗапросЕщеРазНаСерв()

	  ЗапросыВФССП.ПослатьЕщеЗапросНарезультат();
	  
	  Сообщить("Послать запрос на Результат еще раз");


КонецПроцедуры

 
 
 
 
 
 
 &НаСервере
Процедура ОбработатьРезультатСерв()

	
	
	  ЗапросыВФССП.ОбработатьОтвет();
	  
	  
	  Сообщить("Обработать Ответ");


КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	                                    
	// ПодключитьОбработчикОжидания("ЗапросВФССППослать", 5,Ложь);
	//
	//

	// 
	// 
	// ПодключитьОбработчикОжидания("ПолучитьКтоЗапросилЕстьЛиФайл", 1,Ложь);
	// 
	//
	//ПодключитьОбработчикОжидания("ЗапросВФССПЕстьлифайлЗапроса", 1,Ложь);
	//
	//
	//
	//ПодключитьОбработчикОжидания("ПослатьЗапросНаРезультатНеКом", 5,Ложь);
	//
	//ПодключитьОбработчикОжидания("ПоменятьВРеестреКтоРезультатЕстьЛиФайл", 1,Ложь);
	//
	//
	//
	//
	//ПодключитьОбработчикОжидания("ОбработатьРезультатКлНеКом", 1,Ложь);
	//
	//
	//
	//
	//
	
	
	
	
КонецПроцедуры

  
&НаКлиенте
Функция ВытащуПодстроку(КлючПодстр, СтрИсх)
	
	  позиц=Найти(СтрИсх,":");
	  
	  ДлинаСтр=СтрДлина(СтрИсх);
	  СтрВозврат="";
	  
	  Если позиц<>0 Тогда
		  
		  позиц=позиц+3;
		  
		  СколькоВырез=ДлинаСтр-позиц-1;
		  
		  СтрВозврат=Сред(СтрИсх,позиц,СколькоВырез);
	 	
	  
	  КонецЕсли;
	  
	  
	  Возврат СтрВозврат;
	

КонецФункции // ()

  
  
&НаСервере
Процедура ЗаписатьВФССП (СсылкаДолж,exe_production,details,subject_fssp,department,bailiff,ip_end)

	
	//   Проверить была ли такая запись?
	   
	 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФССП.exe_production КАК exe_production,
		|	ФССП.details КАК details
		|ИЗ
		|	Справочник.ФССП КАК ФССП
		|ГДЕ
		|	ФССП.Должник = &Должник
		|	И ФССП.exe_production ПОДОБНО &exe_production";
	
	Запрос.УстановитьПараметр("exe_production", exe_production);
	Запрос.УстановитьПараметр("Должник", СсылкаДолж);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	колСтр=ВыборкаДетальныеЗаписи.Количество();
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
	      Если колСтр=0 Тогда
		  
		  	      									  
						СпрФССП=Справочники.ФССП;
						НовЭлем=СпрФССП.СоздатьЭлемент();
						НовЭлем.Должник=СсылкаДолж;
						НовЭлем.exe_production=exe_production;
						НовЭлем.details=details;
						НовЭлем.subject_fssp=subject_fssp;
				   		НовЭлем.department=department;
						НовЭлем.bailiff=bailiff;
						НовЭлем.ip_end=ip_end;
						НовЭлем.Записать();	   			  
						  

		  
		  КонецЕсли;
				
						
КонецПроцедуры


&НаСервере
Функция ИмяЗначенияПеречисленияПоСинонимуСтр( пИмяПеречисления, пСинонимЗначения ) Экспорт
	
	
   КолекцияЗначенийПеречисления = Метаданные.Перечисления[пИмяПеречисления].ЗначенияПеречисления;
    Для каждого пНайденноеЗначение из КолекцияЗначенийПеречисления Цикл
        Если пНайденноеЗначение.Синоним = пСинонимЗначения Тогда
            Возврат пНайденноеЗначение.Имя;
        КонецЕсли
    КонецЦикла;
    Возврат неопределено;	
	
    
КонецФункции // Имя Значения Перечисления По Синониму


&НаКлиенте
Функция ВытащитьИспДок (ИсхСтрокаИспДок)

	СтруктураСостояния = Новый Структура;

	
	 поз=Найти(ИсхСтрокаИспДок,"Исполнительный");
	
	 Если поз<>0 Тогда
		 
	     СтруктураСостояния.Вставить("ВидИспДокумента", "Исполнительный лист"); 	 
	 
	 КонецЕсли;  
	
     позс=Найти(ИсхСтрокаИспДок,"Судебный"); 	 
	 
	 Если позс<>0 Тогда
		 
	     СтруктураСостояния.Вставить("ВидИспДокумента", "Судебный приказ"); 	 
		 
		  
		 
		 
	 КонецЕсли;  
	 
	 
	 позса=Найти(ИсхСтрокаИспДок,"Акт");
	 
	 Если позса<>0 Тогда
		 
		 
		 СтруктураСостояния.Вставить("ВидИспДокумента", "Акт"); 	 
		 
	 Иначе
		 
		 Если позса=0 и позс=0 и поз=0 Тогда
		 
		 	   СтруктураСостояния.Вставить("ВидИспДокумента", "Акт"); 
		 
		 КонецЕсли;
		 
			 
		 
		 
	 КонецЕсли; 
	 
	 
	 
	 
	 
	
	 // вытащу дату    от   №
	 
	  поз=Найти(ИсхСтрокаИспДок,"от");
	  позс=Найти(ИсхСтрокаИспДок,"№");
	  
	  
	  
	  датаДок=Сред(ИсхСтрокаИспДок,поз,позс-поз);
	  СтруктураСостояния.Вставить("ДатаИспДок", датаДок);
	  
	 	  
	  // вытащить номер  
	  
	  
	              
				  длинаСтр=СтрДлина(ИсхСтрокаИспДок);
				  
				  трен=длинаСтр-позс;
				  
				  
				  стрдоНомера=Прав(ИсхСтрокаИспДок,трен-1);
				  
				   //стрдоНомера - строка после первого №
				   //  надо найти /d/s
				   
				  
				  номерДок=ДоПробелаСцифрой(стрдоНомера);
				  
				  
				  СтруктураСостояния.Вставить("НомерИспДок", номерДок);

	  
		
    Возврат СтруктураСостояния; 	

КонецФункции // ()


&НаСервере
Процедура ЗаписьВИсполнительныеДокументы(СсылкаДолж,ВидИспДок,НомерИспДок,ДатаИспДок,ОписаниеДок)

			
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсполнительныеДокументы.ВидИспДокумента КАК ВидИспДокумента,
		|	ИсполнительныеДокументы.НомерИсДок КАК НомерИсДок,
		|	ИсполнительныеДокументы.ДатаИспДок КАК ДатаИспДок,
		|	ИсполнительныеДокументы.Должник КАК Должник
		|ИЗ
		|	Справочник.ИсполнительныеДокументы КАК ИсполнительныеДокументы
		|ГДЕ
		|	ИсполнительныеДокументы.Должник = &Должник
		|	И ИсполнительныеДокументы.НомерИсДок = &НомерИсДок
		|	И ИсполнительныеДокументы.ДатаИспДок = &ДатаИспДок";
	
	
	Запрос.УстановитьПараметр("ДатаИспДок", ДатаИспДок);
	Запрос.УстановитьПараметр("Должник", СсылкаДолж);
	Запрос.УстановитьПараметр("НомерИсДок", НомерИспДок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	колЭлем= ВыборкаДетальныеЗаписи.Количество();

	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
			
	КонецЦикла;
	
	   Если колЭлем=0 Тогда
	   
	   	         			  
				   СпрИспДок=Справочники.ИсполнительныеДокументы;
				   НовЭл = СпрИспДок.СоздатьЭлемент();
				   НовЭл.Должник=СсылкаДолж;
				   
				   Если ВидИспДок=ИмяЗначенияПеречисленияПоСинонимуСтр( "ВидыИспДокументов", "Исполнительный лист") Тогда
				   
				   	    НовЭл.ВидИспДокумента=Перечисления.ВидыИспДокументов.ИсполнительныйЛист;

				   
				   Иначе
				   
				   	     НовЭл.ВидИспДокумента=Перечисления.ВидыИспДокументов.СудебныйПриказ;
				   
				   КонецЕсли;
					   
				    НовЭл.НомерИсДок=НомерИспДок;
					НовЭл.ДатаИспДок=ДатаИспДок;
					НовЭл.ОписаниеИспДокумента=ОписаниеДок;
		            НовЭл.Записать();

	   
	   КонецЕсли; 
	
						  					  
						  
	  
КонецПроцедуры

&НаКлиенте
Функция ДоПробелаСцифрой (стрсприц)

	  позициск=0;
	
	Для итр = 1 По СтрДлина(стрсприц) Цикл 
        Символ = Сред(стрсприц, итр, 1);
		
        Если ЭтоЦифра(Символ) Тогда 
			
			 // проверю следующий пробел?
			   СимволПр = Сред(стрсприц, итр+1, 1);
			   
			   КодСимвола = КодСимвола(СимволПр);
			   Если КодСимвола=32  Тогда
	              позициск=итр+1;
				  
				  Возврат  Лев(стрсприц,позициск);
			   
			   КонецЕсли;	
		КонецЕсли; 
		
	КонецЦикла; 	

КонецФункции // ()


&НаКлиенте
Функция ЭтоЦифра(Символ) 
    КодСимвола = КодСимвола(Символ); 
    Возврат (КодСимвола >= 48 И КодСимвола <= 57) 
КонецФункции

&НаКлиенте
Процедура ПолучитьКтоЗапросилЕстьЛиФайлКоманда(Команда)
	
	    ПолучитьКтоЗапросилЕстьЛиФайлНеКом();
	
	
		
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКтоЗапросилЕстьЛиФайлНеКом()
	// SEND FSSPRequestGroup
	
	        прогрпуть="C:\Distr\PR\GROUP\";
		 
	        имяфайлатемп=прогрпуть+"groupreq.txt";
		
    		ФайлВыбр = Новый Файл(имяфайлатемп);
			
			имяфайлатемп=прогрпуть+"lock.txt";
			
			
			
    		ФайлВыбрКлюч = Новый Файл(имяфайлатемп);
			
			
			

			Оповещение = Новый ОписаниеОповещения("IDDQD", ЭтотОбъект);

	
			  Если  ФайлВыбр.Существует() И (НЕ ФайлВыбрКлюч.Существует()) Тогда

				     
				    стрп="C:\Distr\FSSP\FSSPRequestGroup.exe";
				  
				  
				    НачатьЗапускПриложения(Оповещение,стрп,,Истина);
				          				  
				  
				    WScript = Новый COMОбъект("WScript.Shell");
				    WScript.Run("timeout /t " + 15, 0, Истина);

					
					// создам файл ключ
					Файл = Новый ЗаписьТекста("C:\Distr\PR\GROUP\lock.txt");
                    Файл.ЗаписатьСтроку("Lock");
                    Файл.Закрыть();
					
					Сообщить("Послан запрос. FSSPRequestGroup.exe");
					
				Иначе
					
					Сообщить("Нет данных на запрос или уже послан запрос. FSSPRequestGroup.exe");
					
					
			  КонецЕсли;

	
	
	
КонецПроцедуры


	
&НаКлиенте
Процедура НетЗапросНаРезультатПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если НетЗапросНаРезультат Тогда
		
		
	
		
		ОтключитьОбработчикОжидания("ЗапросВФССППослать");
		ОтключитьОбработчикОжидания("ПолучитьКтоЗапросилЕстьЛиФайл");
		ОтключитьОбработчикОжидания("ЗапросВФССПЕстьлифайлЗапроса");
		ОтключитьОбработчикОжидания("ПослатьЗапросНаРезультатНеКом");
		ОтключитьОбработчикОжидания("ПоменятьВРеестреКтоРезультатЕстьЛиФайл");
		ОтключитьОбработчикОжидания("ОбработатьРезультатКлНеКом");
		
		
		
		
		
		
		
		
	    массиаКтоЗапросНаРезультат= ПолучитьКтоЗапросНаРезультатВсе();

		
		    Сч=0;
		
    		 // Пройдусь по массиву
			Для каждого стр Из массиаКтоЗапросНаРезультат  Цикл
				
			   Сч=Сч+1;	
			   
			   
			   
			   
			   	Файл = Новый Файл(стр["ИмяФайлаНаЗапрос"]);
                стрп=стр["СтрокаAnswer"]; 
				
				Если  Файл.Существует() Тогда	
					
					
				      Оповещение = Новый ОписаниеОповещения("IDDQD", ЭтотОбъект);
			   
     	              НачатьЗапускПриложения(Оповещение,стрп,,Истина);
			   
		    	      СтрокаЗапроса = "ping -n 1 -w "+Формат(1000 * 3, "ЧДЦ=0; ЧГ=") + " 127.255.255.255"; 
	   		   
					  //WshShell.Run(СтрокаЗапроса, 0, 1); 
				  
					  
					 
				 						   //ПоменятьВРеестреКтоРезультат(стр["Реестр"],стр["Должник"],стр["ИмяФайлаНаЗапрос"]);

					  WScript = Новый COMОбъект("WScript.Shell");
	                  WScript.Run("timeout /t " + 2, 0, Истина);
					  
					 
					  
					  
				КонецЕсли;	

			   
			   
			   
			   Если Сч=30  Тогда
				   
				   Сч=0;  
				 
 				   WScript = Новый COMОбъект("WScript.Shell");
                   WScript.Run("timeout /t " + 17, 0, Истина);
				   
				 
			   
			   КонецЕсли;
			   
			   
				
		    КонецЦикла;	
		
			
	Иначе
		
        
		 ПодключитьОбработчикОжидания("ЗапросВФССППослать", 10,Ложь);
		 
		 
		 ПодключитьОбработчикОжидания("ПолучитьКтоЗапросилЕстьЛиФайл", 5,Ложь);
		 
		
		ПодключитьОбработчикОжидания("ЗапросВФССПЕстьлифайлЗапроса", 5,Ложь);
		
		
		ПодключитьОбработчикОжидания("ПослатьЗапросНаРезультатНеКом", 10,Ложь);
		
		ПодключитьОбработчикОжидания("ПоменятьВРеестреКтоРезультатЕстьЛиФайл", 5,Ложь);
		
		
		ПодключитьОбработчикОжидания("ОбработатьРезультатКлНеКом", 10,Ложь);
		
	
		
	
	КонецЕсли;
	
	Сообщить("ОК-все");
	
КонецПроцедуры



&НаКлиенте
Процедура УдалитьБольше24(Команда)
	
	
	  
	//
	//   // 
	//	 
	//    НайденныеФайлы = НайтиФайлы("C:\Distr\PR\FSSP\", "*.txt");
	//  
	//   //
	//   Для каждого намф  Из НайденныеФайлы Цикл
	//	   
	//	   датаИзмФайла= намф.ПолучитьВремяИзменения();    
	//	  
	//	   Если ТекущаяДата()-датаИзмФайла>60*60*12*2   Тогда
	//		   
	//			 // Изменить в регистре сведений
	//
	//			  			
	//			  
	//			  УдалитьБольше24НаСервере(намф.ПолноеИмя); 
	//			  Сообщить(намф.ПолноеИмя +"- "+намф.ПолучитьВремяИзменения());
	//			  УдалитьФайлы(намф.ПолноеИмя);

	//			  
	//	   
	//	   КонецЕсли;
	//	   
	//   
	//   КонецЦикла;

	
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УдалитьБольше24НаСервере(намф)

				 // Изменить в регистре сведений
			   
			      ИзменитьРегистрБольше24(намф);

				  //Сообщить(намф.ПолноеИмя +"- "+намф.ПолучитьВремяИзменения());
	
	
КонецПроцедуры



&НаСервереБезКонтекста
Процедура ИзменитьРегистрБольше24(имяфайла)

	   //   Послать запрос
	   
	   
	    отв=Перечисления.РезультатЗапросаВФССП.ПослатьЗапрос;

	   
	    НаборЗаписей=РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(имяфайла);

		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 1 Тогда
		   	
			
			 Для каждого Запись Из НаборЗаписей Цикл
								
					 Запись.ЗапросПослан =отв;
					 Запись.КЗ=0;
																		
 	         КонецЦикла;
		   НаборЗаписей.Записать();
			
		КонецЕсли;
	

КонецПроцедуры


&НаКлиенте
Процедура ЗапущенноПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	
	Если Запущенно Тогда
		
		                       
		
	    ПодключитьОбработчикОжидания("ПолучитьКтоЗапросил", 60,Ложь);
	
	    ПодключитьОбработчикОжидания("ПолучитьКтоЗапросилЕстьЛиФайлНеКом", 60,Ложь);

	
		
		ПодключитьОбработчикОжидания("ПроверитьОтветНазапросНеКом", 60,Ложь);
		
	    ПодключитьОбработчикОжидания("ПослатьЗапросНаРезультатНеКоманд", 60,Ложь);
		
	 
		ПодключитьОбработчикОжидания("ОбработатьРезультатКлНеКоманд", 60,Ложь);
		    
		
		
	Иначе
		
		
		
	    ОтключитьОбработчикОжидания("ПолучитьКтоЗапросил");
	 
	     ОтключитьОбработчикОжидания("ПолучитьКтоЗапросилЕстьЛиФайлНеКом");
		 
		ОтключитьОбработчикОжидания("ПроверитьОтветНазапросНеКом");
		
		ОтключитьОбработчикОжидания("ПослатьЗапросНаРезультатНеКоманд");
		
		ОтключитьОбработчикОжидания("ОбработатьРезультатКлНеКоманд");
		
		
	
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветРуками(Команда)
	
	//   //  пройтись по директории
	//   
	//   ФайлыОтветов = Новый Массив;
	//   ФайлыОтветов = НайтиФайлы("C:\Distr\PR\FSSPAnswer\","*.txt");
	//    Для Каждого фаилОтв Из ФайлыОтветов Цикл
	//		ПоменятьВРегистреЕстьОтвет (фаилОтв.ПолноеИмя);
	//		
	//		// Переместить файл
	//		
	//		
	//		  
	//    КонецЦикла;
	//
	//
	
	  
	
КонецПроцедуры


&НаСервере
Процедура ПоменятьВРегистреЕстьОтвет (строкарез)
	
	    отвпол=Перечисления.РезультатЗапросаВФССП.ПолученЗапросНаРезультат;
	 
	 // строка результат -  C:\Distr\PR\FSSPAnswer\firstname=Сергей-lastname=Снаров-birthdate=03.05.1962reqFirst___.txt
	 
	         	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
					// Данный фрагмент построен конструктором.
					// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ЗапросывФССПдляРеестра.Реестр КАК Реестр,
						|	ЗапросывФССПдляРеестра.Должник КАК Должник,
						|	ЗапросывФССПдляРеестра.ИмяФайлаНаЗапрос КАК ИмяФайлаНаЗапрос,
						|	ЗапросывФССПдляРеестра.ЗапросПослан КАК ЗапросПослан,
						|	ЗапросывФССПдляРеестра.СтрокаЗапроса КАК СтрокаЗапроса,
						|	ЗапросывФССПдляРеестра.СтрокаAnswer КАК СтрокаAnswer,
						|	ЗапросывФССПдляРеестра.СтрокаРезультат КАК СтрокаРезультат,
						|	ЗапросывФССПдляРеестра.СтрокаБАКфайл КАК СтрокаБАКфайл,
						|	ЗапросывФССПдляРеестра.СтрокаБакЗапрос КАК СтрокаБакЗапрос,
						|	ЗапросывФССПдляРеестра.КЗ КАК КЗ,
						|	ЗапросывФССПдляРеестра.СтрокаЗапросаНет КАК СтрокаЗапросаНет
						|ИЗ
						|	РегистрСведений.ЗапросывФССПдляРеестра КАК ЗапросывФССПдляРеестра
						|ГДЕ
						|	ЗапросывФССПдляРеестра.СтрокаРезультат = &СтрокаРезультат";
					
					Запрос.УстановитьПараметр("СтрокаРезультат", строкарез);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					Выборка = РезультатЗапроса.Выбрать();
					
					Пока Выборка.Следующий() Цикл
					
           	                НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей(); 
										
					        НаборЗаписей.Отбор.Реестр.Установить(Выборка.Реестр);
							НаборЗаписей.Отбор.Должник.Установить(Выборка.Должник);
							НаборЗаписей.Отбор.ИмяФайлаНаЗапрос.Установить(Выборка.ИмяФайлаНаЗапрос);
							НаборЗаписей.Прочитать();

 					    	Для каждого Запись Из НаборЗаписей Цикл
						     	     Запись.ЗапросПослан =отвпол;
									 Запись.КЗ=1;
									 
								
																		
					        КонецЦикла;
					        НаборЗаписей.Записать();
	
							
							
		
						
					КонецЦикла;
					
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	 
	 

КонецПроцедуры

&НаКлиенте
Процедура УАльфаБанка(Команда)
	
	    УальфаБпнкаРеестр();
	
	    Сообщить("Ок");
	
КонецПроцедуры


&НаСервере
Процедура УальфаБпнкаРеестр()

	        //  //    временно только Алфа банк
   
     банкАльфа=Справочники.Банки.НайтиПоКоду("000000009");
   
     реестр=Документы.Реестр.НайтиПоРеквизиту("Банк",банкАльфа);

	 отвобр=Перечисления.РезультатЗапросаВФССП.Обработан;
	 
	 
	                  НаборЗаписей = РегистрыСведений.ЗапросывФССПдляРеестра.СоздатьНаборЗаписей();  			
				      НаборЗаписей.Отбор.Реестр.Установить(реестр);
					  НаборЗаписей.Прочитать();
					  
					  Для каждого Запись Из НаборЗаписей Цикл

						  Запись.ЗапросПослан =отвобр;
				 
						  
					  КонецЦикла;
					  
					  НаборЗаписей.Записать();

	
	        
	

КонецПроцедуры



  



















