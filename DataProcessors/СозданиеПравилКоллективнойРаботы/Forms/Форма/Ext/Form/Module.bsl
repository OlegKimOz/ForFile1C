&НаКлиенте
Процедура СоздатьПравилаКоллективнойРаботы(Команда)
	Если СправочникГруппыДолжниковПустой() = Ложь Тогда
		ОписаниеОп = Новый ОписаниеОповещения("ПослеВопроса_о_Группах", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОп, "Уже существуют созданные группы должников. Заместить?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопроса_о_Группах(Результат) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда 
		СоздатьПравилаКоллективнойРаботыНаСервере();
		ПоказатьОповещениеПользователя("Правила коллективной работы созданы!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СправочникГруппыДолжниковПустой()
	Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ Справочник.ГруппыДолжников");
	ВыборкаГруппДолжников = Запрос.Выполнить().Выбрать();
	Если ВыборкаГруппДолжников.Количество() > 0 Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СоздатьПравилаКоллективнойРаботыНаСервере()
	// Очистка существующих
	Запрос = Новый Запрос("ВЫБРАТЬ ГруппыДолжников.Ссылка ИЗ Справочник.ГруппыДолжников КАК ГруппыДолжников");
	ВыборкаГруппДолжников = Запрос.Выполнить().Выбрать();
	Пока ВыборкаГруппДолжников.Следующий() Цикл
		Объект = ВыборкаГруппДолжников.Ссылка.ПолучитьОбъект();
		Объект.Удалить();
	КонецЦикла; 
	
	// получить последний приоритет
	Запрос = Новый Запрос("ВЫБРАТЬ МАКСИМУМ(ГруппыДолжников.Приоритет) КАК Приоритет ИЗ Справочник.ГруппыДолжников КАК ГруппыДолжников");
	Выборка = Запрос.Выполнить().Выбрать();
	ПоследнийПриоритет = 0;
	Если Выборка.Следующий() Тогда
		ПоследнийПриоритет = ?(Выборка.Приоритет = NULL, 0 ,Выборка.Приоритет);
	КонецЕсли;
	
	// Формирование новых
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбщийПриоритетКритериев", Объект.ОбщийПриоритетКритериев);
	Запрос.УстановитьПараметр("ПриоритетПоБанкамРеестрам", Объект.ПриоритетПоБанкамРеестрам);
	Запрос.УстановитьПараметр("ПриоритетПоСтатусам", Объект.ПриоритетПоСтатусам);
	Запрос.УстановитьПараметр("ПриоритетПоСуммеДолга", Объект.ПриоритетПоСуммеДолга);
	Запрос.УстановитьПараметр("ПриоритетПоСрокуПросрочки", Объект.ПриоритетПоСрокуПросрочки);
	Запрос.УстановитьПараметр("ПриоритетПоУсловиюОтбора", Объект.ПриоритетПоУсловиюОтбора);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таблица.НомерСтроки КАК НомерСтроки,
	               |	Таблица.Критерий КАК Критерий
	               |ПОМЕСТИТЬ ВТ_Общий
	               |ИЗ
	               |	&ОбщийПриоритетКритериев КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыКритериевОтбораДолжников.БанкиРеестры) КАК Критерий,
	               |	Таблица.НомерСтроки КАК НомерСтроки,
	               |	Таблица.БанкРеестр КАК Значение,
	               |	Таблица.Сотрудник КАК Сотрудник,
	               |	""БанкиРеестры"" КАК ИмяТЧ,
	               |	""БанкРеестр"" КАК ИмяПоля
	               |ПОМЕСТИТЬ ВТ_БанкиРеестры
	               |ИЗ
	               |	&ПриоритетПоБанкамРеестрам КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыКритериевОтбораДолжников.Статусы) КАК Критерий,
	               |	Таблица.НомерСтроки КАК НомерСтроки,
	               |	Таблица.Статус КАК Значение,
	               |	Таблица.Сотрудник КАК Сотрудник,
	               |	"""" КАК ИмяТЧ,
	               |	""Статус"" КАК ИмяПоля
	               |ПОМЕСТИТЬ ВТ_Статусы
	               |ИЗ
	               |	&ПриоритетПоСтатусам КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыКритериевОтбораДолжников.СуммаДолга) КАК Критерий,
	               |	Таблица.НомерСтроки КАК НомерСтроки,
	               |	Таблица.ГруппаПоСуммеДолга КАК Значение,
	               |	Таблица.Сотрудник КАК Сотрудник,
	               |	"""" КАК ИмяТЧ,
	               |	""ГруппаПоСуммеДолга"" КАК ИмяПоля
	               |ПОМЕСТИТЬ ВТ_СуммаДолга
	               |ИЗ
	               |	&ПриоритетПоСуммеДолга КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыКритериевОтбораДолжников.СрокПросрочки) КАК Критерий,
	               |	Таблица.НомерСтроки КАК НомерСтроки,
	               |	Таблица.ГруппаПоСрокуПросрочки КАК Значение,
	               |	Таблица.Сотрудник КАК Сотрудник,
	               |	"""" КАК ИмяТЧ,
	               |	""ГруппаПоСрокуПросрочки"" КАК ИмяПоля
	               |ПОМЕСТИТЬ ВТ_СрокПросрочки
	               |ИЗ
	               |	&ПриоритетПоСрокуПросрочки КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыКритериевОтбораДолжников.УсловияОтбора) КАК Критерий,
	               |	Таблица.НомерСтроки КАК НомерСтроки,
	               |	Таблица.УсловиеОтбора КАК Значение,
	               |	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) КАК Сотрудник,
	               |	"""" КАК ИмяТЧ,
	               |	""УсловиеОтбора"" КАК ИмяПоля
	               |ПОМЕСТИТЬ ВТ_УсловияОтбора
	               |ИЗ
	               |	&ПриоритетПоУсловиюОтбора КАК Таблица
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Критерии.Критерий КАК Критерий,
	               |	Критерии.НомерСтроки КАК НомерСтроки,
	               |	Критерии.Значение КАК Значение,
	               |	Критерии.Сотрудник КАК Сотрудник,
	               |	Критерии.ИмяТЧ КАК ИмяТЧ,
	               |	Критерии.ИмяПоля КАК ИмяПоля
	               |ПОМЕСТИТЬ ВТ_Критерии
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_БанкиРеестры.Критерий КАК Критерий,
	               |		ВТ_БанкиРеестры.НомерСтроки КАК НомерСтроки,
	               |		ВТ_БанкиРеестры.Значение КАК Значение,
	               |		ВТ_БанкиРеестры.Сотрудник КАК Сотрудник,
	               |		ВТ_БанкиРеестры.ИмяТЧ КАК ИмяТЧ,
	               |		ВТ_БанкиРеестры.ИмяПоля КАК ИмяПоля
	               |	ИЗ
	               |		ВТ_БанкиРеестры КАК ВТ_БанкиРеестры
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_Статусы.Критерий,
	               |		ВТ_Статусы.НомерСтроки,
	               |		ВТ_Статусы.Значение,
	               |		ВТ_Статусы.Сотрудник,
	               |		ВТ_Статусы.ИмяТЧ,
	               |		ВТ_Статусы.ИмяПоля
	               |	ИЗ
	               |		ВТ_Статусы КАК ВТ_Статусы
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_СуммаДолга.Критерий,
	               |		ВТ_СуммаДолга.НомерСтроки,
	               |		ВТ_СуммаДолга.Значение,
	               |		ВТ_СуммаДолга.Сотрудник,
	               |		ВТ_СуммаДолга.ИмяТЧ,
	               |		ВТ_СуммаДолга.ИмяПоля
	               |	ИЗ
	               |		ВТ_СуммаДолга КАК ВТ_СуммаДолга
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_СрокПросрочки.Критерий,
	               |		ВТ_СрокПросрочки.НомерСтроки,
	               |		ВТ_СрокПросрочки.Значение,
	               |		ВТ_СрокПросрочки.Сотрудник,
	               |		ВТ_СрокПросрочки.ИмяТЧ,
	               |		ВТ_СрокПросрочки.ИмяПоля
	               |	ИЗ
	               |		ВТ_СрокПросрочки КАК ВТ_СрокПросрочки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_УсловияОтбора.Критерий,
	               |		ВТ_УсловияОтбора.НомерСтроки,
	               |		ВТ_УсловияОтбора.Значение,
	               |		ВТ_УсловияОтбора.Сотрудник,
	               |		ВТ_УсловияОтбора.ИмяТЧ,
	               |		ВТ_УсловияОтбора.ИмяПоля
	               |	ИЗ
	               |		ВТ_УсловияОтбора КАК ВТ_УсловияОтбора) КАК Критерии
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Общий.НомерСтроки КАК ПриоритетОбщий,
	               |	ВТ_Критерии.Критерий КАК Критерий,
	               |	ВТ_Критерии.НомерСтроки КАК ПриоритетКритерия,
	               |	ВТ_Критерии.Значение КАК Значение,
	               |	ВТ_Критерии.Сотрудник КАК Сотрудник,
	               |	ВТ_Критерии.ИмяТЧ КАК ИмяТЧ,
	               |	ВТ_Критерии.ИмяПоля КАК ИмяПоля
	               |ИЗ
	               |	ВТ_Общий КАК ВТ_Общий
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Критерии КАК ВТ_Критерии
	               |		ПО ВТ_Общий.Критерий = ВТ_Критерии.Критерий
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПриоритетОбщий,
	               |	ПриоритетКритерия";
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Результат.Очистить();
	ПерваяСтрока = Результат.Добавить();
	ПерваяСтрока.Приоритет = ПоследнийПриоритет + 1;
	ОбработатьТаблицу(ПерваяСтрока.Приоритет + 1, Таблица, 1, ПерваяСтрока);
	
	// создание групп
	Для Каждого Стр Из Результат Цикл
		
		НоваяГруппа = Справочники.ГруппыДолжников.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(НоваяГруппа, Стр, "Приоритет, Статус, УсловиеОтбора, ГруппаПоСуммеДолга, ГруппаПоСрокуПросрочки");
		
		Если ТипЗнч(Стр.БанкРеестр) = Тип("СправочникСсылка.Банки") Тогда
			НоваяСтрока = НоваяГруппа.Банки.Добавить();
			НоваяСтрока.Банк = Стр.БанкРеестр;
		ИначеЕсли ТипЗнч(Стр.БанкРеестр) = Тип("ДокументСсылка.Реестр") Тогда
			НоваяСтрока = НоваяГруппа.Реестры.Добавить();
			НоваяСтрока.Реестр = Стр.БанкРеестр;
		КонецЕсли;
		
		Для Каждого ТекСотр Из Стр.Сотрудники Цикл
			НоваяСтрока = НоваяГруппа.Сотрудники.Добавить();
			НоваяСтрока.Сотрудник = ТекСотр.Сотрудник;
		КонецЦикла;
		
		НоваяГруппа.Записать();
		
	КонецЦикла;
КонецПроцедуры

Процедура ОбработатьТаблицу(ТекПриоритет, Таблица, ВыбранныйПриоритет, ПредСтрока)
		
	НайденныеСтроки = Таблица.НайтиСтроки(Новый Структура("ПриоритетОбщий", ВыбранныйПриоритет));
	
	ПервыйПроход = Истина; 
	Для Каждого Стр Из НайденныеСтроки Цикл
		Если ПервыйПроход Тогда
			ТекСтрока = ПредСтрока;
		Иначе
			ТекСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(ТекСтрока, ПредСтрока,,Стр.ИмяПоля + ", Сотрудники");
			ТекСтрока.Приоритет = ТекПриоритет;
			ТекСтрока.Сотрудники = ПредСтрока.Сотрудники.Скопировать();
			ТекПриоритет = ТекПриоритет + 1;
			
			Если ТипЗнч(ТекСтрока.Сотрудники) = Тип("ТаблицаЗначений") Тогда
				НайденныеСтрокиДляУдаления = ТекСтрока.Сотрудники.НайтиСтроки(Новый Структура("ИмяПоля", Стр.ИмяПоля));
				Для Каждого УдаляемаяСтрока Из НайденныеСтрокиДляУдаления Цикл
					ТекСтрока.Сотрудники.Удалить(УдаляемаяСтрока);
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		ПервыйПроход = Ложь; 
		ТекСтрока[Стр.ИмяПоля] = Стр.Значение;
		
		Если ТипЗнч(ТекСтрока.Сотрудники) <> Тип("ТаблицаЗначений") Тогда
			ТекСтрока.Сотрудники = Новый ТаблицаЗначений;
			ТекСтрока.Сотрудники.Колонки.Добавить("Сотрудник");
			ТекСтрока.Сотрудники.Колонки.Добавить("ИмяПоля");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стр.Сотрудник) 
			И ТекСтрока.Сотрудники.Найти(Стр.Сотрудник, "Сотрудник") = Неопределено Тогда
			НоваяСтрокаСотрудники = ТекСтрока.Сотрудники.Добавить();
			НоваяСтрокаСотрудники.Сотрудник = Стр.Сотрудник;
			НоваяСтрокаСотрудники.ИмяПоля = Стр.ИмяПоля;
		КонецЕсли;
		
		ОбработатьТаблицу(ТекПриоритет, Таблица, ВыбранныйПриоритет + 1, ТекСтрока);
	КонецЦикла;
	
КонецПроцедуры
