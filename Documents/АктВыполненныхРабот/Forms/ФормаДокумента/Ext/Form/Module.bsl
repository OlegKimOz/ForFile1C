&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ЗаполнитьЗначенияСвойств(Объект, Период);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьЗначенияСвойств(Период, Объект, "ДатаНачала, ДатаОкончания");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаПроЗаполнение(Ответ, ДопПараметр) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПлатежиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПлатежиНаСервере()
	
	Объект.Платежи.Очистить();
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ПлатежиОбороты.Период КАК ДатаПлатежа,
	               |	ПлатежиОбороты.Регистратор КАК Платеж,
	               |	ПлатежиОбороты.Должник КАК Должник,
	               |	ПлатежиОбороты.Реестр КАК Реестр,
	               |	ПлатежиОбороты.СуммаОборот КАК СуммаПлатежа,
	               |	ПлатежиОбороты.Договор.Банк КАК Банк,
	               |	ЕСТЬNULL(ПроцентыВознагражденияСотрудниковСрезПоследних.Процент, 0) КАК ПроцентВознаграждения,
	               |	ЕСТЬNULL(ПроцентыВознагражденияСотрудниковСрезПоследних.Процент, 0) * ПлатежиОбороты.СуммаОборот / 100 КАК СуммаВознаграждения,
	               |	ПлатежиОбороты.Ответственный КАК Агент,
	               |	ПлатежиОбороты.Договор КАК Договор
	               |ИЗ
	               |	РегистрНакопления.Платежи.Обороты(&ДатаНачала, &ДатаОкончания, Запись, Ответственный = &Сотрудник) КАК ПлатежиОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентыВознагражденияСотрудников.СрезПоследних(&ДатаОкончания, ) КАК ПроцентыВознагражденияСотрудниковСрезПоследних
	               |		ПО ПлатежиОбороты.Договор.Банк = ПроцентыВознагражденияСотрудниковСрезПоследних.Банк
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаПлатежа";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Сотрудник", Объект.Агент);
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаОкончания);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтрока = Объект.Платежи.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
	КонецЦикла;
	
	// если это начальник то посчитать сотрудников
	Отдел = Привязка.ПолучитьОтделСотрудника(Объект.Агент, Объект.ДатаОкончания);
	Если ЗначениеЗаполнено(Отдел.Руководитель) И Отдел.Руководитель = Объект.Агент Тогда
		ПроцентВознагражденияЗаСотрудников = Отдел.ВознаграждениеЗаСотрудников;
		ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	СотрудникиОтделовСрезПоследних.Сотрудник КАК Сотрудник,
		               |	СотрудникиОтделовСрезПоследних.Отдел КАК Отдел
		               |ПОМЕСТИТЬ ВТ_Сотрудники
		               |ИЗ
		               |	РегистрСведений.СотрудникиОтделов.СрезПоследних(
		               |			&ДатаОкончания,
		               |			Отдел = &Отдел
		               |				И Сотрудник <> &Сотрудник) КАК СотрудникиОтделовСрезПоследних
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПлатежиОбороты.Период КАК ДатаПлатежа,
		               |	ПлатежиОбороты.Регистратор КАК Платеж,
		               |	ПлатежиОбороты.Должник КАК Должник,
		               |	ПлатежиОбороты.Реестр КАК Реестр,
		               |	ПлатежиОбороты.СуммаОборот КАК СуммаПлатежа,
		               |	ПлатежиОбороты.Договор.Банк КАК Банк,
		               |	ПлатежиОбороты.Ответственный КАК Агент,
		               |	ПлатежиОбороты.Договор КАК Договор,
		               |	&Процент КАК ПроцентВознаграждения,
		               |	&Процент * ПлатежиОбороты.СуммаОборот / 100 КАК СуммаВознаграждения
		               |ИЗ
		               |	РегистрНакопления.Платежи.Обороты(
		               |			&ДатаНачала,
		               |			&ДатаОкончания,
		               |			Запись,
		               |			Ответственный В
		               |				(ВЫБРАТЬ
		               |					Т.Сотрудник
		               |				ИЗ
		               |					ВТ_Сотрудники КАК Т)) КАК ПлатежиОбороты
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ДатаПлатежа";
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		
		Запрос.УстановитьПараметр("Сотрудник", Объект.Агент);
		Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаОкончания);
		Запрос.УстановитьПараметр("Отдел", Отдел);
		Запрос.УстановитьПараметр("Процент", ПроцентВознагражденияЗаСотрудников);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НовСтрока = Объект.Платежи.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	ПересчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлатежи(Команда)
	
	Если Объект.Платежи.Количество() > 0 Тогда
		Обработчик = Новый ОписаниеОповещения("ПослеОтветаПроЗаполнение", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, "В таблице уже есть данные, очистить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьПлатежиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПересчитатьСумму()
	
	Объект.СуммаВознаграждения = Объект.Платежи.Итог("СуммаВознаграждения");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте 
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры 

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры 
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды