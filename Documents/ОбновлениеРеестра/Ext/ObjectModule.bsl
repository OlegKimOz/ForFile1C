Процедура ОбработкаПроведения(Отказ, Режим)
	Перем Запрос, СписокДоговоров;
		СЗУстДолжники = Новый СписокЗначений;
	
	Отказ = ДоступностьИзмененийПоДатеЗапрета(Дата);
	// Получим массив договоров
	СписокДоговоров = Должники.ВыгрузитьКолонку("Договор");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БалансДолжниковОстатки.ТекущийОсновнойДолгОстаток КАК ТекущийОсновнойДолг,
	|	БалансДолжниковОстатки.Договор,
	|	БалансДолжниковОстатки.Должник,
	|	БалансДолжниковОстатки.СуммаДолгаОстаток КАК СуммаДолга,
	|	БалансДолжниковОстатки.СуммаОстаток КАК Сумма,
	|	БалансДолжниковОстатки.ПросроченныйОсновнойДолгОстаток КАК ПросроченныйОсновнойДолг,
	|	БалансДолжниковОстатки.ТекущиеПроцентыОстаток КАК ТекущиеПроценты,
	|	БалансДолжниковОстатки.ПросроченныеПроцентыОстаток КАК ПросроченныеПроценты,
	|	БалансДолжниковОстатки.НеустойкаОстаток КАК Неустойка,
	|	БалансДолжниковОстатки.ГоспошлинаОстаток КАК Госпошлина,
	|	БалансДолжниковОстатки.ПрочееОстаток КАК Прочее
	|ИЗ
	|	РегистрНакопления.БалансДолжников.Остатки(&МоментВремени, Договор В (&СписокДоговоров)) КАК БалансДолжниковОстатки";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
	
	тзИтоги = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрокаДолжники Из Должники Цикл
		// Найдём итог
		Итоги = тзИтоги.Найти(ТекСтрокаДолжники.Договор, "Договор");
		
		// регистр БалансДолжников Приход
		
		Если Итоги = Неопределено Тогда
		Иначе // сторнировать предыдущее 
			Движение = Движения.БалансДолжников.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Итоги);//sza171128-0950 Широков_Игорь
			Движение.Период 		= Дата;
			Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
			Движение.Сумма 			= Итоги;
		КонецЕсли;		
		Движение = Движения.БалансДолжников.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ТекСтрокаДолжники);//sza171128-0950 Широков_Игорь
		Движение.Период 		= Дата;
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		Движение.Сумма 			= ТекСтрокаДолжники.ВсегоЗадолженность;
		
		Если ТекСтрокаДолжники.ВсегоЗадолженность = 0 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	Договоры.Ссылка
			               |ИЗ
			               |	Справочник.Договоры КАК Договоры
			               |ГДЕ
			               |	Договоры.Владелец = &Владелец
			               |	И Договоры.Статус <> &Статус";
			Запрос.УстановитьПараметр("Владелец",ТекСтрокаДолжники.Должник);
			Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыДоговоров.Активный);
			Выборка = запрос.Выполнить().Выбрать();
			Если СЗУстДолжники.НайтиПоЗначению(ТекСтрокаДолжники.Должник) = Неопределено Тогда
				СЗУстДолжники.Добавить(ТекСтрокаДолжники.Должник);
			Если Выборка.Количество()<2 Тогда
				движение = Движения.СтатусыДолжников.Добавить();
				движение.Период = дата;
				Движение.Статус = справочники.Статусы.НайтиПоКоду("000000017");
				Движение.Должник = ТекСтрокаДолжники.Должник;
			Иначе
				Сообщить("У должник "+ТекСтрокаДолжники.Должник+" имеются другие активные договоры. Статус ""Оплатил полностью"" не установлен!");
			КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		// Записать новые значения в регистр
		// регистр ДанныеДоговоров 
		Движение = Движения.ДанныеДоговоров.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, ТекСтрокаДолжники);
		Движение.Период 					= Дата;
		Движение.ДатаРасчетаЗадолженности	= Дата;
	КонецЦикла;
КонецПроцедуры
