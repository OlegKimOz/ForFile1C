&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Об = РеквизитФормыВЗначение("Объект");
	Если Об.ЭтоНовый() Тогда
		Объект.Автор = ПараметрыСеанса.Пользователь;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДолжников(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьТЧДолжники", ЭтотОбъект);	
	ОткрытьФорму("Обработка.ЗагрузкаДолжников.Форма.Форма",,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧДолжники(Результат, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		Для каждого строкаРезультата Из Результат Цикл
			НоваяСтрока = Объект.Должники.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, строкаРезультата);
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры // ЗаполнитьТЧДоллжники()

&НаКлиенте
Процедура ОбработкаКомандФормы(Команда)
	Если Команда.Имя = "ТаблицаДанныхПодстановки" Тогда
		ТабДок = ПечатьТаблицаДанныхПодстановки();
		ИмяФайла = СтрШаблон("Таблица данных подстановки. Отправка писем № %1 от %2.xls", Объект.Номер, Формат(Объект.Дата, "ДЛФ=D"));
		ТабДок.Показать("Таблица данных подстановки", ИмяФайла);
	ИначеЕсли Команда.Имя = "ПечатьУведомление" Тогда
		ПечатьПоМакету("Уведомление");
	ИначеЕсли Команда.Имя = "ДолжникиПечатьТребование" Тогда
		ПечатьПоМакету("Требование");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПоМакету(ИмяМакета)
	Если Объект.Проведен = Ложь Тогда
		ПоказатьПредупреждение(, "Подготовка писем возможна только для проведённого документа.", 60);
		Возврат;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.ТипАдреса) = Ложь Тогда
		ПоказатьПредупреждение(, "Не выбран тип адреса.", 60);
		Возврат;
	КонецЕсли; 
	
	Макет = ПолучитьМакетПоИмени(ИмяМакета);

	ИмяФайлаМакета = ПолучитьИмяВременногоФайла("doc");
	Макет.Записать(ИмяФайлаМакета);
	Ворд = Новый COMОбъект("Word.Application");

	//Ворд = ПолучитьCOMОбъект(ИмяФайлаМакета);//Макет.Получить();
	
	// Инициализация MS Word
	Попытка
		Документ = Ворд.Documents.Add(ИмяФайлаМакета);
		//Документ = Ворд.Application.Documents(1);
		Документ.Activate();
		
		// Заполнение шаблона	
		Замена = Документ.Content.Find;
		Selection = Ворд.Application.Selection;
		
		Состояние("Запрос данных по договорам..");
		
		МассивДолжников = ПолучитьДанныеДляЗаполнения();
		
		Selection.WholeStory();
		Selection.Copy();
		
		НомерПП = 0;
		Для каждого СтруктураДанных Из МассивДолжников Цикл
			НомерПП = НомерПП + 1;
			// Добавить копию страницы
			Если НомерПП > 1 Тогда
				Selection.EndKey(6); // wdStory = 6
				Selection.InsertBreak(7); // wdPageBreak = 7
				Selection.PasteAndFormat(0); // wdPasteDefault
			КонецЕсли;
			
			Если Ложь Тогда СтруктураДанных = Новый Структура; КонецЕсли; 
			Для каждого ключСтруктуры Из СтруктураДанных Цикл
				ИмяКлюча = СтрШаблон("<%1>", ключСтруктуры.Ключ);
				Замена(Selection, Замена, ИмяКлюча, ключСтруктуры.Значение);
			КонецЦикла; 
		КонецЦикла; 
		
		
		Ворд.Application.Visible = Истина;
		Ворд.Activate();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Возможно, на данном компьютере не установлен MS Word. (Описание ошибки :" + ОписаниеОшибки() + ")");
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетПоИмени(ИмяМакета)
	Об = РеквизитФормыВЗначение("Объект");
	Макет = Об.ПолучитьМакет(ИмяМакета);
	Возврат Макет;
КонецФункции // ()

&НаСервере
Функция ПечатьТаблицаДанныхПодстановки()
	
	Макет = Документы.ОтправкаПисем.ПолучитьМакет("ТаблицаДанныхПодстановки");
	
	// Получить данные по договорам
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеДоговоровСрезПоследних.Договор КАК Договор,
	|	ДанныеДоговоровСрезПоследних.ТекущийОсновнойДолг КАК ТекущийОсновнойДолг,
	|	ДанныеДоговоровСрезПоследних.ВсегоЗадолженность КАК ВсегоЗадолженность,
	|	ДанныеДоговоровСрезПоследних.ПросроченныеПроценты КАК ПросроченныеПроценты,
	|	ДанныеДоговоровСрезПоследних.ПросроченныйОсновнойДолг КАК ПросроченныйОсновнойДолг,
	|	ДанныеДоговоровСрезПоследних.Неустойка КАК Неустойка,
	|	ДанныеДоговоровСрезПоследних.ДатаРасчетаЗадолженности КАК ДатаРасчетаЗадолженности,
	|	ДанныеДоговоровСрезПоследних.ДнейПросрочки КАК ДнейПросрочки,
	|	ДанныеДоговоровСрезПоследних.Договор.Банк КАК Банк,
	|	ДанныеДоговоровСрезПоследних.Договор.НомерДоговора КАК НомерДоговора,
	|	ДанныеДоговоровСрезПоследних.Договор.ДатаФинансирования КАК ДатаФинансирования,
	|	ДанныеДоговоровСрезПоследних.Договор.Владелец КАК Должник,
	|	ДанныеДоговоровСрезПоследних.Договор.СуммаКредита КАК СуммаКредита,
	|	ВложенныйЗапрос.Адрес КАК Адрес
	|ИЗ
	|	РегистрСведений.ДанныеДоговоров.СрезПоследних(&Момент, Договор.Владелец В (&СписокДолжников)) КАК ДанныеДоговоровСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Адреса.Ссылка КАК Адрес,
	|			Адреса.Владелец КАК Должник
	|		ИЗ
	|			Справочник.Адреса КАК Адреса
	|		ГДЕ
	|			Адреса.Тип = &ТипАдреса) КАК ВложенныйЗапрос
	|		ПО ДанныеДоговоровСрезПоследних.Договор.Владелец = ВложенныйЗапрос.Должник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Должник";
	
	Запрос.УстановитьПараметр("Момент", Объект.Дата);
	Запрос.УстановитьПараметр("СписокДолжников", Объект.Должники.ВыгрузитьКолонку("Должник"));
	Запрос.УстановитьПараметр("ТипАдреса", Объект.ТипАдреса);
	
	Результат = Запрос.Выполнить();
	ВыборкаДетали = Результат.Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	Пока ВыборкаДетали.Следующий() Цикл
		ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетали);
		ТабДок.Вывести(ОбластьДетальныхЗаписей, ВыборкаДетали.Уровень());
	КонецЦикла;
	
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
	ТабДок.Вывести(ОбластьПодвал);
	
	Возврат ТабДок;
КонецФункции

&НаКлиенте
Процедура Замена(Selection, Замена, Тег, Знач Значение)
	Значение = Строка(Значение);
	// Execute(	FindText, MatchCase, MatchWholeWord, MatchWildcards, 
	// 			MatchSoundsLike, MatchAllWordForms, Forward, Wrap, 
	//			Format, ReplaceWith, Replace, MatchKashida, MatchDiacritics, 
	//			MatchAlefHamza, MatchControl)
	//Замена.Execute(Тег, Ложь, Истина, Ложь,,, Истина,1, Ложь, Значение, 2);
	Selection.GoTo(1, 3, 1, ""); // wdGoToPage = 1, wdGoToPrevious = 3
	Замена.Execute(Тег, Ложь, Истина, Ложь,,, Истина,, Ложь, Значение, 2);
КонецПроцедуры

&НаКлиенте
Процедура ВНачалоСтраницы(Selection)
	
	Selection.GoTo(1, 3, 1, ""); // wdGoToPage = 1, wdGoToPrevious = 3
	//Selection.GoTo(1, 2, 1, ""); // wdGoToPage = 1, wdGoToNext = 2
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляЗаполнения()
	МассивРезультатов = Новый Массив;
	
	// Получить данные по договорам
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеДоговоровСрезПоследних.Договор КАК Договор,
	               |	ДанныеДоговоровСрезПоследних.ТекущийОсновнойДолг КАК ТекущийОсновнойДолг,
	               |	ДанныеДоговоровСрезПоследних.ВсегоЗадолженность КАК СуммаВсего,
	               |	ДанныеДоговоровСрезПоследних.ПросроченныеПроценты КАК ПросроченныеПроценты,
	               |	ДанныеДоговоровСрезПоследних.ПросроченныйОсновнойДолг КАК ПросроченнаяЗадолженность,
	               |	ДанныеДоговоровСрезПоследних.Неустойка КАК Неустойка,
	               |	ДанныеДоговоровСрезПоследних.ДатаРасчетаЗадолженности КАК ДатаРасчетаЗадолженности,
	               |	ДанныеДоговоровСрезПоследних.ДнейПросрочки КАК ДнейПросрочки,
	               |	ДанныеДоговоровСрезПоследних.Договор.Банк КАК Банк,
	               |	ДанныеДоговоровСрезПоследних.Договор.НомерДоговора КАК НомерДоговора,
	               |	ДанныеДоговоровСрезПоследних.Договор.ДатаФинансирования КАК ДатаДоговора,
	               |	ДанныеДоговоровСрезПоследних.Договор.Владелец КАК Должник,
	               |	ДанныеДоговоровСрезПоследних.Договор.СуммаКредита КАК СуммаКредита,
	               |	ВложенныйЗапрос.Адрес КАК АдресДолжника,
	               |	ДанныеДоговоровСрезПоследних.ТекущиеПроценты КАК ТекущиеПроценты,
	               |	ДанныеДоговоровСрезПоследних.Госпошлина КАК Госпошлина,
	               |	ДанныеДоговоровСрезПоследних.Прочее КАК Прочее,
	               |	Должники.Фамилия КАК Фамилия,
	               |	Должники.Имя КАК Имя,
	               |	Должники.Отчество КАК Отчество,
	               |	Должники.Наименование КАК ФИО,
	               |	Должники.Имя + "" "" + Должники.Отчество КАК ИО,
	               |	&ТекущаяДата КАК ТекущаяДата
	               |ИЗ
	               |	РегистрСведений.ДанныеДоговоров.СрезПоследних(&Момент, Договор.Владелец В (&СписокДолжников)) КАК ДанныеДоговоровСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			Адреса.Ссылка КАК Адрес,
	               |			Адреса.Владелец КАК Должник
	               |		ИЗ
	               |			Справочник.Адреса КАК Адреса
	               |		ГДЕ
	               |			Адреса.Тип = &ТипАдреса) КАК ВложенныйЗапрос
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Должники КАК Должники
	               |			ПО ВложенныйЗапрос.Должник = Должники.Ссылка
	               |		ПО ДанныеДоговоровСрезПоследних.Договор.Владелец = ВложенныйЗапрос.Должник
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Должник";
	СписокДолжников = Объект.Должники.Выгрузить(,"Должник").ВыгрузитьКолонку("Должник");
	Запрос.УстановитьПараметр("Момент", Объект.Дата);
	Запрос.УстановитьПараметр("СписокДолжников", СписокДолжников);
	Запрос.УстановитьПараметр("ТипАдреса", Объект.ТипАдреса);
	Запрос.УстановитьПараметр("ТекущаяДата", Формат(ТекущаяДатаСеанса(), "ДЛФ=D"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураВозврата = Новый Структура("ФИО, Банк, ИО, НомерДоговора, ДатаДоговора, СуммаВсего, ПросроченнаяЗадолженность, АдресДолжника, ТекущаяДата");
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
		МассивРезультатов.Добавить(СтруктураВозврата);
	КонецЦикла;
	
	Возврат МассивРезультатов;
КонецФункции