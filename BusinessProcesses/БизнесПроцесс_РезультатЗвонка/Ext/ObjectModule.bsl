
Перем ждатьДней;


Процедура ВыборВариантаРезультатаОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	// Вставить содержимое обработчика.
	спрРезКонтактаОплатил=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Обещание оплатить",Истина);
	
	спрРез_НетКонтакта=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Нет контакта",Истина);
	
	//Отказ от оплаты
	спрРез_ОтказОтОплаты=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Отказ от оплаты",Истина);
	
	// НеверныеКонтактныеДанные
	спрРез_НеверныеКонтактныеДанные=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Неверные контактные данные",Истина);   
	
	//КлиентаНеЗнают
	спрРез_КлиентаНеЗнают=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Клиента не знают",Истина);   
	
	//ОтрицаетПолученияКредита
	спрРез_ОтрицаетПолученияКредита=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Отрицает получение кредита",Истина);   
	
	//Осужден
	спрРез_Осужден=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Осужден",Истина);   
	
	// Клиент умер
	спрРез_КлиентУмер=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Клиент умер",Истина);   
	
	//  Страховой случай
	спрРез_СтраховойСлучай=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Страховой случай",Истина);   
	
	//  Гос.ведомство запрос документов
	спрРез_ГосВедомствоЗапросДокументов=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Гос.ведомство запрос документов",Истина);   
	
	
	
	
	
	
	
	
	
	 Если РезультатКонтактаБП=спрРезКонтактаОплатил Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.Оплатил;
	  	   
	 
	 КонецЕсли;
	 
	 
	 Если РезультатКонтактаБП=спрРез_НетКонтакта Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.НетКонтакта;
	  	   
	 
	 КонецЕсли;
	 
	 
	 Если РезультатКонтактаБП=спрРез_ОтказОтОплаты Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.ОтказОтОплаты;
	  	   
	 
	 КонецЕсли;
	 
	 Если РезультатКонтактаБП=спрРез_НеверныеКонтактныеДанные Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.НеверныеКонтактныеДанные;
	 
	 КонецЕсли;
	 
	 Если РезультатКонтактаБП=спрРез_КлиентаНеЗнают Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.КлиентаНеЗнают;
	 
	 КонецЕсли;
	 
	 Если РезультатКонтактаБП=спрРез_ОтрицаетПолученияКредита Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.ОтрицаетПолученияКредита;
	 
	 КонецЕсли;
	 
	 
	 Если РезультатКонтактаБП=спрРез_Осужден Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.Осужден;
	 
	 КонецЕсли;
	 
	 
	 
	  Если РезультатКонтактаБП=спрРез_КлиентУмер Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.КлиентУмер;
	 
	  КонецЕсли;
	  
	  
	  Если РезультатКонтактаБП=спрРез_СтраховойСлучай Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.СтраховойСлучай;
	 
	  КонецЕсли;
	  
	  
	   Если РезультатКонтактаБП=спрРез_ГосВедомствоЗапросДокументов Тогда
	 	 
	      Результат = ТочкаВыбораВарианта.Варианты.ГосВедЗапросДок;
	 
	  КонецЕсли;
	 
	  
	  
	  
	
	 
	
КонецПроцедуры


Процедура ПоступилПлатежПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	  // Проверить платеж
	  
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
							"ВЫБРАТЬ
							|	ПлатежиДолжники.Сумма КАК Сумма,
							|	ПлатежиДолжники.Договор КАК Договор
							|ИЗ
							|	Документ.Платежи.Должники КАК ПлатежиДолжники
							|ГДЕ
							|	ПлатежиДолжники.ДатаПлатежа МЕЖДУ &ДатаНачала И &ДатаКонец
							|	И ПлатежиДолжники.Должник = &Должник
							|	И ПлатежиДолжники.Ссылка.Проведен = &Проведен";
						
						
						
					   	Запрос.УстановитьПараметр("ДатаКонец", ДатаОжиданияОплатил +60 * 60 * 24*Число(ждатьДней));
					    Запрос.УстановитьПараметр("ДатаНачала", ДатаОжиданияОплатил);
					    Запрос.УстановитьПараметр("Должник",Контакт.Должник);

						Запрос.УстановитьПараметр("Проведен", Истина);
						
						РезультатЗапроса = Запрос.Выполнить();
						
						ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						
						
						
						Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
					  
					           Результат=Истина;
							 
						Иначе
							 
																			 
						
							 
					
				        КонецЕсли;
						
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
							ДоговорОплата=ВыборкаДетальныеЗаписи.Договор;
    					    Результат=Истина;

							
		                КонецЦикла;

						
						 
					

	
КонецПроцедуры

Процедура ЧастичноеПогашениеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Вставить содержимое обработчика.
			           	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	БалансДолжниковОстатки.СуммаОстаток КАК СуммаОстаток,
				|	БалансДолжниковОстатки.Договор КАК Договор
				|ИЗ
				|	РегистрНакопления.БалансДолжников.Остатки(&МоментВремени, Должник = &Должник) КАК БалансДолжниковОстатки";
			
			Запрос.УстановитьПараметр("Должник", Контакт.Должник);
			Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если ВыборкаДетальныеЗаписи.СуммаОстаток<=0 Тогда
					
					ДоговорОплата=ВыборкаДетальныеЗаписи.Договор;
					Результат=Истина;
					
				ИНАЧЕ
				    	
									
				КонецЕсли;
				
				
				
				
			КонецЦикла;
			
			//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

			
			//	Запрос.УстановитьПараметр("Должник", Контакт.Должник);
			//Запрос.УстановитьПараметр("МоментВремени", ТекущаяДата());
			//
	
	
КонецПроцедуры

Процедура ВАрхивОбработка(ТочкаМаршрутаБизнесПроцесса)
	// Вставить содержимое обработчика.
	   спрОтдел=Справочники.Отделы.НайтиПоНаименованию("Архив",Истина);
	   спрСотрАрхив=Справочники.Сотрудники.НайтиПоНаименованию("Архив",Истина);
	   
	   
	   спрСотрМенеджер=Справочники.Сотрудники.НайтиПоНаименованию("Бизнес_Процесс",Истина);
	   
	   	НовыйДокумент = Документы.ПередачаДолжников.СоздатьДокумент();
		НовыйДокумент.Отдел=спрОтдел;
		НовыйДокумент.Дата=ТекущаяДата()+60 * 60 * 24;
		
		НовыйДокумент.Сотрудник=спрСотрАрхив;
		
		
		НовыйДокумент.Менеджер=спрСотрМенеджер;
		НовыйДокумент.Автор=спрСотрМенеджер;
		НовыйДокумент.Комментарий="Погашен";
		НовыйДокумент.Подписан=Истина;
		
		
			 новЗапись= НовыйДокумент.Должники.Добавить();
			 новЗапись.Должник=Контакт.Должник;
			 новЗапись.Договор=ДоговорОплата;
		
				
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	
	
КонецПроцедуры



Процедура ОжиданиеБППередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
	 спрСотр=Справочники.Сотрудники.НайтиПоНаименованию("Бизнес_Процесс",Истина);
	
	 СтандартнаяОбработка=Ложь;
	 
	 Задача=Задачи.ЗадачаПривязкаДолжника.СоздатьЗадачу();
	 Задача.БизнесПроцесс=Ссылка;
	 Задача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
	 Задача.Дата=ДатаОжиданияОплатил;
	 Задача.Наименование="БПРКонтакт_Оплатил_"+Ссылка.Контакт.Должник+"_"+Номер;
	 
	 Задача.Сотрудник=спрСотр;
	 Задача.Записать();
	 ФормируемыеЗадачи.Добавить(Задача);
	 
	
КонецПроцедуры

Процедура НетКонтактаПятьРазПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	         
	
	          спрРез_НетКонтакта=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Нет контакта",Истина);
	     
				//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
				// Данный фрагмент построен конструктором.
				// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 5
					|	БизнесПроцесс_РезультатЗвонка.РезультатКонтактаБП КАК РезультатКонтактаБП,
					|	БизнесПроцесс_РезультатЗвонка.Дата КАК Дата
					|ИЗ
					|	БизнесПроцесс.БизнесПроцесс_РезультатЗвонка КАК БизнесПроцесс_РезультатЗвонка
					|ГДЕ
					|	БизнесПроцесс_РезультатЗвонка.Должник = &Должник
					|
					|УПОРЯДОЧИТЬ ПО
					|	Дата УБЫВ";
				
				Запрос.УстановитьПараметр("Должник", Должник);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				счеч=0;
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					// Вставить обработку выборки ВыборкаДетальныеЗаписи
					   	Если  ВыборкаДетальныеЗаписи.РезультатКонтактаБП=спрРез_НетКонтакта Тогда
						
						   счеч=счеч+1;	
						
						КонецЕсли;

					
				КонецЦикла;
				
				//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


					//
					//
					
					
					
					Если счеч=5 Тогда
					
				       Результат=Истина;		
					
					КонецЕсли;

	
	
	
	
КонецПроцедуры

Процедура ОтделСкипПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
	спрРез_НетКонтакта=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Нет контакта",Истина);
	спрРез_НеверныеКонтактныеДанные=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Неверные контактные данные",Истина);   
	спрРез_КлиентаНеЗнают =Справочники.РезультатыКонтактов.НайтиПоНаименованию("Клиента не знают",Истина);
	
	
	 стрРезультат="";
	 
	 Если  РезультатКонтактаБП=спрРез_НетКонтакта Тогда
		 
		 стрРезультат="Нет контакта";
	 
	 КонецЕсли;
	 
	 
	 Если  РезультатКонтактаБП=спрРез_НеверныеКонтактныеДанные Тогда
		 
		 стрРезультат="Неверные контактные данные";
	 
	 КонецЕсли;
	 
	 Если  РезультатКонтактаБП=спрРез_КлиентаНеЗнают Тогда
		 
		 стрРезультат="Клиента не знают";
	 
	 КонецЕсли;
	 
	 
	 
	 
	 
	
	 спрСотр=Справочники.Сотрудники.НайтиПоНаименованию("Пучков_Артем",Истина);
	 спрОтдел=Справочники.Отделы.НайтиПоНаименованию("Skip",Истина);
	 
	 спрПользователь=Справочники.Пользователи.НайтиПоНаименованию("Пучков Артем",Истина);
	
	 СтандартнаяОбработка=Ложь;
	 
	 Задача=Задачи.ЗадачаПривязкаДолжника.СоздатьЗадачу();
	 Задача.БизнесПроцесс=Ссылка;
	 Задача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
	 Задача.Дата=ДатаОжиданияОплатил;
	 Задача.Наименование="БПРКонтакт_"+стрРезультат+"_"+Ссылка.Контакт.Должник+"_"+Номер;
	 Задача.Отдел=спрОтдел;
	 Задача.Сотрудник=спрСотр;
	 Задача.Записать();
	 ФормируемыеЗадачи.Добавить(Задача);
	 
	 
	 
	 	
    СрокНапоминания = НачалоДня(ТекущаяДата());
	НапоминаниеТекст = "Выполнить задание "+стрРезультат+" "+Ссылка.Контакт.Должник;
    ПараметрыНапоминания    = Новый Структура;   
    ПараметрыНапоминания.Вставить("Пользователь", спрПользователь);
	ПараметрыНапоминания.Вставить("ВремяСобытия"    , ТекущаяДата());
	ПараметрыНапоминания.Вставить("Источник"        , Ссылка);
	ПараметрыНапоминания.Вставить("Описание"        , НапоминаниеТекст);
	ПараметрыНапоминания.Вставить("СрокНапоминания", СрокНапоминания);
	ПараметрыНапоминания.Вставить("СпособУстановкиВремениНапоминания", Перечисления.СпособыУстановкиВремениНапоминания.Периодически);
	НапоминанияПользователяСлужебный.ПодключитьНапоминание(ПараметрыНапоминания);
	 

	 
	 
	 
	
	
КонецПроцедуры

Процедура ОтказОтОплатыТриРазаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	   спрРез_ОтказОтОплаты=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Отказ от оплаты",Истина);
	
	   спрРез_ОтрицаетПолученияКредита=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Отрицает получение кредита",Истина);
	   
	
	
			        Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ ПЕРВЫЕ 3
						|	БизнесПроцесс_РезультатЗвонка.РезультатКонтактаБП КАК РезультатКонтактаБП,
						|	БизнесПроцесс_РезультатЗвонка.Дата КАК Дата
						|ИЗ
						|	БизнесПроцесс.БизнесПроцесс_РезультатЗвонка КАК БизнесПроцесс_РезультатЗвонка
						|ГДЕ
						|	БизнесПроцесс_РезультатЗвонка.Должник = &Должник
						|
						|УПОРЯДОЧИТЬ ПО
						|	Дата УБЫВ";
					
					Запрос.УстановитьПараметр("Должник", Должник);

					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					счеч=0;
					
					счечОтрицаетПолученияКредита=0;
					
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						
						Если  ВыборкаДетальныеЗаписи.РезультатКонтактаБП=спрРез_ОтказОтОплаты Тогда
						
						   счеч=счеч+1;	
						
					   КонецЕсли;
					   
					   Если  ВыборкаДетальныеЗаписи.РезультатКонтактаБП=спрРез_ОтрицаетПолученияКредита Тогда
						
						   счечОтрицаетПолученияКредита=счечОтрицаетПолученияКредита+1;	
						
					   КонецЕсли;
					   
					   
					   
					   
						
						
					КонецЦикла;
				
									
						
					Если счеч=3 ИЛИ счечОтрицаетПолученияКредита=3 Тогда
					
				       Результат=Истина;		
					
					КонецЕсли;

					
					
	
	
КонецПроцедуры

Процедура ОтказОтОплатыПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
	
	 спрРез_ОтказОтОплаты=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Отказ от оплаты",Истина);
     спрРез_ОтрицаетПолученияКредита=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Отрицает получение кредита",Истина);
	 
	 //Осужден
     спрРез_Осужден=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Осужден",Истина);   

	 
	 	
	// Клиент умер
	спрРез_КлиентУмер=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Клиент умер",Истина);   
	
	//  Страховой случай
	спрРез_СтраховойСлучай=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Страховой случай",Истина);   
	
	//  Гос.ведомство запрос документов
	спрРез_ГосВедомствоЗапросДокументов=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Гос.ведомство запрос документов",Истина);   
	

	 
	 
     	
	 стрРезультат="";
	 
	  Если  РезультатКонтактаБП=спрРез_ОтказОтОплаты Тогда
		 
		 стрРезультат="Отказ от оплаты";
	 
	 КонецЕсли;
	 
	 
	 Если  РезультатКонтактаБП=спрРез_ОтрицаетПолученияКредита Тогда
		 
		 стрРезультат="Отрицает получение кредита";
	 
	 КонецЕсли;
	 
	 
	 Если  РезультатКонтактаБП=спрРез_Осужден Тогда
		 
		 стрРезультат="Осужден";
	 
	 КонецЕсли;
	 
	 
	  
	 Если  РезультатКонтактаБП=спрРез_КлиентУмер Тогда
		 
		 стрРезультат="Клиент умер";
	 
	 КонецЕсли;
	 
	 Если  РезультатКонтактаБП=спрРез_СтраховойСлучай Тогда
		 
		 стрРезультат="Страховой случай";
	 
	 КонецЕсли;
	 
	 Если  РезультатКонтактаБП=спрРез_ГосВедомствоЗапросДокументов Тогда
		 
		 стрРезультат="Гос.ведомство запрос документов";
	 
	 КонецЕсли;
	 
	 
	 
	 
	 
	
	// создать Задачу для юристов
	спрОтдел=Справочники.Отделы.НайтиПоНаименованию("Юристы",Истина);
	
	 СтандартнаяОбработка=Ложь;
	 
	 Задача=Задачи.ЗадачаПривязкаДолжника.СоздатьЗадачу();
	 Задача.БизнесПроцесс=Ссылка;
	 Задача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
	 Задача.Дата=ДатаОжиданияОплатил;
	 Задача.Наименование="БПРКонтакт_"+стрРезультат+"_"+Ссылка.Контакт.Должник+"_"+Номер;
	 
	 //Задача.Сотрудник=спрСотр;
	 
	 Задача.Отдел=спрОтдел;
	 
	 Задача.Записать();
	 ФормируемыеЗадачи.Добавить(Задача);

	 
	
	 
	 
	 
	
КонецПроцедуры


Процедура НапоминаниеНетПлатежаОбработка(ТочкаМаршрутаБизнесПроцесса)
	
	  //  создать Напоминание
	  //  пользователь кто слздал контакт 
	  
	  спрПользователь = Справочники.Пользователи.НайтиПоНаименованию(Автор.Наименование, Истина);
	  
	    СрокНапоминания = НачалоДня(ТекущаяДата());
		НапоминаниеТекст = "Нет платежа ---";
	    ПараметрыНапоминания    = Новый Структура;   
	    ПараметрыНапоминания.Вставить("Пользователь", спрПользователь);
		ПараметрыНапоминания.Вставить("ВремяСобытия"    , ТекущаяДата());
		ПараметрыНапоминания.Вставить("Источник"        , Ссылка);
		ПараметрыНапоминания.Вставить("Описание"        , НапоминаниеТекст);
		ПараметрыНапоминания.Вставить("СрокНапоминания", СрокНапоминания);
		//ПараметрыНапоминания.Вставить("ИнтервалВремениНапоминания",60*3);     		
		
		ПараметрыНапоминания.Вставить("СпособУстановкиВремениНапоминания", Перечисления.СпособыУстановкиВремениНапоминания.Периодически);
		НапоминанияПользователяСлужебный.ПодключитьНапоминание(ПараметрыНапоминания);
	 

	  
	  
	 
	  
	  
	
	
КонецПроцедуры

Процедура НеверныеКонтактныеДанныеЧетыреРазаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	// Вставить содержимое обработчика.
	
	  	спрРез_НеверныеКонтактныеДанные=Справочники.РезультатыКонтактов.НайтиПоНаименованию("Неверные контактные данные",Истина);
		
		спрРез_КлиентаНеЗнают =Справочники.РезультатыКонтактов.НайтиПоНаименованию("Клиента не знают",Истина);
	
	
			        Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ ПЕРВЫЕ 4
						|	БизнесПроцесс_РезультатЗвонка.РезультатКонтактаБП КАК РезультатКонтактаБП,
						|	БизнесПроцесс_РезультатЗвонка.Дата КАК Дата
						|ИЗ
						|	БизнесПроцесс.БизнесПроцесс_РезультатЗвонка КАК БизнесПроцесс_РезультатЗвонка
						|ГДЕ
						|	БизнесПроцесс_РезультатЗвонка.Должник = &Должник
						|
						|УПОРЯДОЧИТЬ ПО
						|	Дата УБЫВ";
					
					Запрос.УстановитьПараметр("Должник", Должник);

					РезультатЗапроса = Запрос.Выполнить();
					
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					
					счеч=0;
					
					счечКлиентаНеЗнают=0;
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						// Вставить обработку выборки ВыборкаДетальныеЗаписи
						
						
						Если  ВыборкаДетальныеЗаписи.РезультатКонтактаБП=спрРез_НеверныеКонтактныеДанные Тогда
						
						   счеч=счеч+1;	
						
					   КонецЕсли;
					   
					   
					   Если  ВыборкаДетальныеЗаписи.РезультатКонтактаБП=спрРез_КлиентаНеЗнают Тогда
						
						   счечКлиентаНеЗнают=счечКлиентаНеЗнают+1;	
						
					   КонецЕсли;
					   
						
						
						
						
					КонецЦикла;
				
	
						
					Если счеч=4 ИЛИ счечКлиентаНеЗнают=4 Тогда
					
				       Результат=Истина;		
					
					КонецЕсли;

					
					

	
	
	
КонецПроцедуры


ждатьДней=7;










